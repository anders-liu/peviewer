{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker/pe/image-flags.ts","webpack:///./src/worker/page-data/nav-data.ts","webpack:///./src/worker/page-data/formatter.ts","webpack:///./src/worker/page-data/headers.ts","webpack:///./src/worker/page-data/generator.ts","webpack:///./src/worker/pe/error.ts","webpack:///./src/worker/pe/loader.ts","webpack:///./src/worker/pe/image.ts","webpack:///./src/worker/message.ts","webpack:///./src/worker/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","IMAGE_DOS_SIGNATURE","IMAGE_NT_SIGNATURE","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_OPTIONAL_HDR64_MAGIC","ImageFile","ImageFileMachine","ImageSubsystem","ImageDllCharacteristics","ImageDirectoryEntry","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","ImageSection","generateNavList","pe","pageID","target","title","children","elemID","formatU1RawHex","padZeroLeft","toString","toUpperCase","formatU2RawHex","formatU4RawHex","formatU1Hex","formatU2Hex","formatU4Hex","formatHexDec","formatBytes","bytes","lineWidth","lines","start","length","line","Array","from","subarray","map","b","join","push","str","len","repeat","formatUIntField","f","sz","showDec","hex","offset","_offset","size","_size","rawData","data","formatDec","v","toLocaleString","formatStructTitle","formatU1Field","formatU2Field","formatU4Field","formatU8Field","high","low","formatBytesField","formatStringField","F","FM","generateHeadersPageData","nav","dosHeader","h","getDosHeader","items","e_magic","e_cblp","e_cp","e_crlc","e_cparhdr","e_minalloc","e_maxalloc","e_ss","e_sp","e_csum","e_ip","e_cs","e_lfarlc","e_ovno","e_res","e_oemid","e_oeminfo","e_res2","e_lfanew","generateDosHeader","peSignature","getPESignature","generatePESignature","fileHeader","getFileHeader","Machine","NumberOfSections","TimeDateStamp","PointerToSymbolTable","NumberOfSymbols","SizeOfOptionalHeader","Characteristics","generateFileHeader","optionalHeader","getOptionalHeader","Magic","groups","MajorLinkerVersion","MinorLinkerVersion","SizeOfCode","SizeOfInitializedData","SizeOfUninitializedData","AddressOfEntryPoint","BaseOfCode","BaseOfData","ImageBase","SectionAlignment","FileAlignment","MajorOperatingSystemVersion","MinorOperatingSystemVersion","MajorImageVersion","MinorImageVersion","MajorSubsystemVersion","MinorSubsystemVersion","Win32VersionValue","SizeOfImage","SizeOfHeaders","CheckSum","Subsystem","DllCharacteristics","SizeOfStackReserve","SizeOfStackCommit","SizeOfHeapReserve","SizeOfHeapCommit","LoaderFlags","NumberOfRvaAndSizes","fillOptionalHeader32Fields","fillOptionalHeader64Fields","generateOptionalHeader","dataDirectories","getDataDirectories","VirtualAddress","Size","generateDataDirectories","sectionHeaders","getSectionHeaders","Name","VirtualSize","SizeOfRawData","PointerToRawData","PointerToRelocations","PointerToLinenumbers","NumberOfRelocations","NumberOfLinenumbers","generateSectionHeaders","headers_1","generatePageData","PEError","_super","type","_this","this","__extends","Error","loadU1Field","getData","getU1","loadU2Field","getU2","loadU4Field","getU4","loadU8Field","loadU2EnumField","loadU4EnumField","loadFixedSizeByteArray","loadFixedSizeAsciiStringField","String","fromCharCode","apply","filter","loadU1EnumField","loadStructArrayByCount","loader","count","ptr","loadImageDosHeader","loadImageFileHeader","loadImageOptionalHeader32","loadImageOptionalHeader64","loadImageDataDirectory","loadImageSectionHeader","L","E","PEImage","buf","DataView","loadHeaders","load","check","getUint8","getUint16","getUint32","Uint8Array","buffer","slice","is32Bit","optHdr","isManaged","dd","ddCom","IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","byteLength","createResNavDataMessage","navList","createResPageDataMessage","pageData","createResPEPropsMessage","createResPEErrorMessage","error","M","image_1","generator_1","nav_data_1","onmessage","ev","msg","reader","FileReader","onload","result","pageDataMsg","postMessage","pePropsMsg","navMsg","ex","msg_1","message","JSON","stringify","onerror","readAsArrayBuffer","file","handleReqOpenFile"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,OAAA,KAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,KAAAmB,WACA,WAA2B,OAAAnB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDxB,EAAA2B,EAAA,GAIA3B,IAAA4B,EAAA,kDCnEa1B,EAAA2B,oBAAsB,MAEtB3B,EAAA4B,mBAAqB,MAErB5B,EAAA6B,8BAAgC,IAChC7B,EAAA8B,8BAAgC,IAE7C,SAAYC,GACRA,IAAA,2DACAA,IAAA,6DACAA,IAAA,iEACAA,IAAA,mEACAA,IAAA,gEACAA,IAAA,oEACAA,IAAA,iEACAA,IAAA,yDACAA,IAAA,2DACAA,IAAA,8EACAA,IAAA,kEACAA,IAAA,4CACAA,IAAA,sCACAA,IAAA,6DACAA,IAAA,mEAfJ,CAAY/B,EAAA+B,YAAA/B,EAAA+B,eAkBZ,SAAYC,GACRA,IAAA,2DACAA,IAAA,mEACAA,IAAA,uDACAA,IAAA,yDACAA,IAAA,yDACAA,IAAA,2DACAA,IAAA,iEACAA,IAAA,yDACAA,IAAA,qDACAA,IAAA,2DACAA,IAAA,uDACAA,IAAA,qDACAA,IAAA,qDACAA,IAAA,qDACAA,IAAA,yDACAA,IAAA,yDACAA,IAAA,uDACAA,IAAA,6DACAA,IAAA,iEACAA,IAAA,uDACAA,IAAA,2DACAA,IAAA,6DACAA,IAAA,6DACAA,IAAA,kEACAA,IAAA,yDACAA,IAAA,8DACAA,IAAA,sDACAA,IAAA,sDACAA,IAAA,2DACAA,IAAA,yDACAA,IAAA,2DACAA,IAAA,uDAhCJ,CAAYhC,EAAAgC,mBAAAhC,EAAAgC,sBAmCZ,SAAYC,GACRA,IAAA,qDACAA,IAAA,mDACAA,IAAA,6DACAA,IAAA,6DACAA,IAAA,qDACAA,IAAA,yDACAA,IAAA,mEACAA,IAAA,mEACAA,IAAA,sEACAA,IAAA,sFACAA,IAAA,4EACAA,IAAA,sDACAA,IAAA,gDACAA,IAAA,wFACAA,IAAA,0EAfJ,CAAYjC,EAAAiC,iBAAAjC,EAAAiC,oBAkBZ,SAAYC,GACRA,IAAA,wFACAA,IAAA,kFACAA,IAAA,yFACAA,IAAA,6EACAA,IAAA,mFACAA,IAAA,wEACAA,IAAA,0EACAA,IAAA,oFACAA,IAAA,gFACAA,IAAA,6EACAA,IAAA,uGAXJ,CAAYlC,EAAAkC,0BAAAlC,EAAAkC,6BAcZ,SAAYC,GACRA,IAAA,+DACAA,IAAA,+DACAA,IAAA,mEACAA,IAAA,qEACAA,IAAA,mEACAA,IAAA,qEACAA,IAAA,6DACAA,IAAA,2EACAA,IAAA,qEACAA,IAAA,yDACAA,IAAA,0EACAA,IAAA,4EACAA,IAAA,0DACAA,IAAA,4EACAA,IAAA,gFAfJ,CAAYnC,EAAAmC,sBAAAnC,EAAAmC,yBAkBCnC,EAAAoC,iCAAmC,GAEhD,SAAYC,GACRA,IAAA,iDAEAA,IAAA,4CACAA,IAAA,oEACAA,IAAA,yEAEAA,IAAA,+CACAA,IAAA,6CACAA,IAAA,kDACAA,IAAA,kDAEAA,IAAA,iEACAA,IAAA,yCAEAA,IAAA,0DACAA,IAAA,kDACAA,IAAA,oDACAA,IAAA,sDAEAA,IAAA,yDACAA,IAAA,yDACAA,IAAA,yDACAA,IAAA,yDACAA,IAAA,2DACAA,IAAA,2DACAA,IAAA,2DACAA,IAAA,6DACAA,IAAA,6DACAA,IAAA,8DACAA,IAAA,gEACAA,IAAA,gEACAA,IAAA,gEACAA,IAAA,gEAEAA,IAAA,gEACAA,IAAA,gEACAA,IAAA,8DACAA,IAAA,6DACAA,IAAA,uDACAA,IAAA,yDACAA,IAAA,oDACAA,IAAA,sDAEAA,IAAA,iDA5CJ,CAAYrC,EAAAqC,eAAArC,EAAAqC,gEC9GZrC,EAAAsC,gBAAA,SAAgCC,GAC5B,QAMMC,EAAM,WAGRC,QAAUD,OAAMA,EAAEE,MAAK,WACvBC,WACIF,QAAUD,OAAMA,EAAEE,MAAK,aAA2BE,OAAM,aAExDH,QAAUD,OAAMA,EAAEE,MAAK,eAA6BE,OAAM,YAE1DH,QAAUD,OAAMA,EAAEE,MAAK,iBAA4BE,OAAM,YAEzDH,QAAUD,OAAMA,EAAEE,MAAK,kBAAgCE,OAAM,aAE7DH,QAAUD,OAAMA,EAAEE,MAAK,mBAAiCE,OAAM,cAE9DH,QAAUD,OAAMA,EAAEE,MAAK,kBAAgCE,OAAM,iBAhBzE,IACUJ,iCCNV,SAAAK,EAA+BrC,GAC3B,OAAOsC,EAAYtC,EAAEuC,SAAS,IAAIC,cAAe,GAGrD,SAAAC,EAA+BzC,GAC3B,OAAOsC,EAAYtC,EAAEuC,SAAS,IAAIC,cAAe,GAGrD,SAAAE,EAA+B1C,GAC3B,OAAOsC,EAAYtC,EAAEuC,SAAS,IAAIC,cAAe,GAGrD,SAAAG,EAA4B3C,GACxB,OAAUqC,EAAerC,GAAE,IAG/B,SAAA4C,EAA4B5C,GACxB,OAAUyC,EAAezC,GAAE,IAG/B,SAAA6C,EAA4B7C,GACxB,OAAU0C,EAAe1C,GAAE,IAG/B,SAAA8C,EAA6B9C,GACzB,OAAUA,EAAEuC,SAAS,IAAIC,cAAa,MAAMxC,EAAC,IAGjD,SAAA+C,EAA4BC,EAAmBC,QAAA,IAAAA,MAAA,IAE3C,IADA,IAAIC,KACKC,EAAQ,EAAGA,EAAQH,EAAMI,OAAQD,GAASF,EAAW,CAC1D,IAAMI,EAAOC,MAAMC,KAAKP,EAAMQ,SAASL,EAAOA,EAAQF,IACjDQ,IAAI,SAAAC,GAAK,OAAArB,EAAeqB,KAAIC,KAAK,KACtCT,EAAMU,KAAKP,GAEf,OAAOH,EAwDX,SAAAZ,EAAqBuB,EAAaC,GAC9B,OAAID,EAAIT,OAASU,EACN,IAAIC,OAAOD,EAAMD,EAAIT,QAAUS,EAE/BA,EAIf,SAAAG,EAAyB/D,EAAcgE,EAAgBC,EAAYC,GAC/D,IAAIC,EACJ,OAAQF,GACJ,KAAK,EAAGE,EAAMzB,EAAYsB,EAAEvD,OAAQ,MACpC,KAAK,EAAG0D,EAAMxB,EAAYqB,EAAEvD,OAAQ,MACpC,KAAK,EAAG0D,EAAMvB,EAAYoB,EAAEvD,OAAQ,MACpC,QAAS0D,EAAMH,EAAEvD,MAAM6B,SAAS,IAAIC,cAGxC,OACI6B,OAAQxB,EAAYoB,EAAEK,SACtBC,KAAMzB,EAAamB,EAAEO,OACrBC,QAAS1B,EAAYkB,EAAES,MACvBzE,KAAIA,EACJS,MAAOyD,EAAaC,EAAG,KAAKO,EAAUV,EAAEvD,OAAM,IAAM0D,GAI5D,SAAAO,EAAmBC,GACf,OAAOA,EAAEC,iCAtHbrF,EAAA6C,iBAIA7C,EAAAiD,iBAIAjD,EAAAkD,iBAIAlD,EAAAmD,cAIAnD,EAAAoD,cAIApD,EAAAqD,cAIArD,EAAAsD,eAIAtD,EAAAuD,cAUAvD,EAAAsF,kBAAA,SAAkC5D,EAAegB,GAC7C,OAAUA,EAAK,KAAKW,EAAY3B,EAAEoD,SAAQ,MAAMzB,EAAY3B,EAAEoD,QAAUpD,EAAEsD,OAAM,MAAM1B,EAAa5B,EAAEsD,OAAM,KAG/GhF,EAAAuF,cAAA,SAA8B9E,EAAcgE,EAAcE,GACtD,OAAOH,EAAgB/D,EAAMgE,EAAG,EAAGE,IAGvC3E,EAAAwF,cAAA,SAA8B/E,EAAcgE,EAAcE,GACtD,OAAOH,EAAgB/D,EAAMgE,EAAG,EAAGE,IAGvC3E,EAAAyF,cAAA,SAA8BhF,EAAcgE,EAAcE,GACtD,OAAOH,EAAgB/D,EAAMgE,EAAG,EAAGE,IAGvC3E,EAAA0F,cAAA,SAA8BjF,EAAcgE,EAAcE,GACtD,IAAIzD,EAAWgC,EAAeuB,EAAEkB,MAAK,IAAItC,EAAYoB,EAAEmB,KAOvD,OALIjB,GAAWF,EAAEkB,KAAO,UAEpBzE,GAAS,KAAKiE,EADQ,WAATV,EAAEkB,KAAqBlB,EAAEmB,KACT,MAI7Bf,OAAQxB,EAAYoB,EAAEK,SACtBC,KAAMzB,EAAamB,EAAEO,OACrBC,QAAS1B,EAAYkB,EAAES,MACvBzE,KAAIA,EACJS,MAAKA,IAIblB,EAAA6F,iBAAA,SAAiCpF,EAAcgE,GAC3C,OACII,OAAQxB,EAAYoB,EAAEK,SACtBC,KAAMzB,EAAamB,EAAEO,OACrBC,QAAS1B,EAAYkB,EAAES,MACvBzE,KAAIA,EACJS,MAAO,KAIflB,EAAA8F,kBAAA,SAAkCrF,EAAcgE,GAC5C,OACII,OAAQxB,EAAYoB,EAAEK,SACtBC,KAAMzB,EAAamB,EAAEO,OACrBC,QAAS1B,EAAYkB,EAAES,MACvBzE,KAAIA,EACJS,MAAO,IAAIuD,EAAEvD,MAAK,oDCxF1B,IAAA6E,EAAAjG,EAAA,GACAkG,EAAAlG,EAAA,GAGAE,EAAAiG,wBAAA,SAAwC1D,GACpC,OACI2D,KACI1D,OAAM,UACNE,MAAK,WAETyD,UASR,SAA2B5D,GACvB,IAAIb,GACAgB,MAAK,aACLE,OAAM,WAGJwD,EAAI7D,EAAG8D,eACb,OAAKD,GAEL1E,EAAE4E,OACEN,EAAGR,cAAc,UAAWY,EAAEG,SAC9BP,EAAGR,cAAc,SAAUY,EAAEI,QAC7BR,EAAGR,cAAc,OAAQY,EAAEK,MAC3BT,EAAGR,cAAc,SAAUY,EAAEM,QAC7BV,EAAGR,cAAc,YAAaY,EAAEO,WAChCX,EAAGR,cAAc,aAAcY,EAAEQ,YACjCZ,EAAGR,cAAc,aAAcY,EAAES,YACjCb,EAAGR,cAAc,OAAQY,EAAEU,MAC3Bd,EAAGR,cAAc,OAAQY,EAAEW,MAC3Bf,EAAGR,cAAc,SAAUY,EAAEY,QAC7BhB,EAAGR,cAAc,OAAQY,EAAEa,MAC3BjB,EAAGR,cAAc,OAAQY,EAAEc,MAC3BlB,EAAGR,cAAc,WAAYY,EAAEe,UAC/BnB,EAAGR,cAAc,SAAUY,EAAEgB,QAC7BpB,EAAGH,iBAAiB,QAASO,EAAEiB,OAC/BrB,EAAGR,cAAc,UAAWY,EAAEkB,SAC9BtB,EAAGR,cAAc,YAAaY,EAAEmB,WAChCvB,EAAGH,iBAAiB,SAAUO,EAAEoB,QAChCxB,EAAGP,cAAc,WAAYW,EAAEqB,WAG5B/F,GAxBQA,EAhBAgG,CAAkBnF,GAC7BoF,YA0CR,SAA6BpF,GACzB,IAAIb,GACAgB,MAAK,eACLE,OAAM,UAGJwD,EAAI7D,EAAGqF,iBACb,OAAKxB,GAEL1E,EAAE4E,OACEN,EAAGP,cAAc,eAAgBW,IAG9B1E,GANQA,EAjDEmG,CAAoBtF,GACjCuF,WAyDR,SAA4BvF,GACxB,IAAIb,GACAgB,MAAK,iBACLE,OAAM,UAGJwD,EAAI7D,EAAGwF,gBACb,OAAK3B,GAEL1E,EAAE4E,OACEN,EAAGR,cAAc,UAAWY,EAAE4B,SAC9BhC,EAAGR,cAAc,mBAAoBY,EAAE6B,kBAAkB,GACzDjC,EAAGP,cAAc,gBAAiBW,EAAE8B,eACpClC,EAAGP,cAAc,uBAAwBW,EAAE+B,sBAC3CnC,EAAGP,cAAc,kBAAmBW,EAAEgC,iBAAiB,GACvDpC,EAAGR,cAAc,uBAAwBY,EAAEiC,sBAAsB,GACjErC,EAAGR,cAAc,kBAAmBY,EAAEkC,kBAGnC5G,GAZQA,EAhEC6G,CAAmBhG,GAC/BiG,eA8ER,SAAgCjG,GAC5B,IAAIb,GACAgB,MAAK,kBACLE,OAAM,WAGJwD,EAAI7D,EAAGkG,oBACb,IAAKrC,EAAG,OAAO1E,EAEf,OAAQ0E,EAAEsC,MAAMxH,OACZ,KAAK6E,EAAElE,8BACHH,EAAEgB,OAAS,YAavB,SAAoChB,EAAoB0E,GACpD1E,EAAEiH,SACEjG,MAAO,kBACP4D,OACIN,EAAGR,cAAc,QAASY,EAAEsC,OAC5B1C,EAAGT,cAAc,qBAAsBa,EAAEwC,oBAAoB,GAC7D5C,EAAGT,cAAc,qBAAsBa,EAAEyC,oBAAoB,GAC7D7C,EAAGP,cAAc,aAAcW,EAAE0C,YAAY,GAC7C9C,EAAGP,cAAc,wBAAyBW,EAAE2C,uBAAuB,GACnE/C,EAAGP,cAAc,0BAA2BW,EAAE4C,yBAAyB,GACvEhD,EAAGP,cAAc,sBAAuBW,EAAE6C,qBAC1CjD,EAAGP,cAAc,aAAcW,EAAE8C,YACjClD,EAAGP,cAAc,aAAcW,EAAE+C,eAGrCzG,MAAO,sBACP4D,OACIN,EAAGP,cAAc,YAAaW,EAAEgD,WAChCpD,EAAGP,cAAc,mBAAoBW,EAAEiD,kBAAkB,GACzDrD,EAAGP,cAAc,gBAAiBW,EAAEkD,eAAe,GACnDtD,EAAGR,cAAc,8BAA+BY,EAAEmD,6BAA6B,GAC/EvD,EAAGR,cAAc,8BAA+BY,EAAEoD,6BAA6B,GAC/ExD,EAAGR,cAAc,oBAAqBY,EAAEqD,mBAAmB,GAC3DzD,EAAGR,cAAc,oBAAqBY,EAAEsD,mBAAmB,GAC3D1D,EAAGR,cAAc,wBAAyBY,EAAEuD,uBAAuB,GACnE3D,EAAGR,cAAc,wBAAyBY,EAAEwD,uBAAuB,GACnE5D,EAAGP,cAAc,oBAAqBW,EAAEyD,mBAAmB,GAC3D7D,EAAGP,cAAc,cAAeW,EAAE0D,aAAa,GAC/C9D,EAAGP,cAAc,gBAAiBW,EAAE2D,eAAe,GACnD/D,EAAGP,cAAc,WAAYW,EAAE4D,UAC/BhE,EAAGR,cAAc,YAAaY,EAAE6D,WAChCjE,EAAGR,cAAc,qBAAsBY,EAAE8D,oBACzClE,EAAGP,cAAc,qBAAsBW,EAAE+D,oBAAoB,GAC7DnE,EAAGP,cAAc,oBAAqBW,EAAEgE,mBAAmB,GAC3DpE,EAAGP,cAAc,oBAAqBW,EAAEiE,mBAAmB,GAC3DrE,EAAGP,cAAc,mBAAoBW,EAAEkE,kBAAkB,GACzDtE,EAAGP,cAAc,cAAeW,EAAEmE,aAClCvE,EAAGP,cAAc,sBAAuBW,EAAEoE,qBAAqB,MAjD/DC,CAA2B/I,EAA4B0E,GACvD,MAEJ,KAAKL,EAAEjE,8BACHJ,EAAEgB,OAAS,YAkDvB,SAAoChB,EAAoB0E,GACpD1E,EAAEiH,SACEjG,MAAO,kBACP4D,OACIN,EAAGR,cAAc,QAASY,EAAEsC,OAC5B1C,EAAGT,cAAc,qBAAsBa,EAAEwC,oBAAoB,GAC7D5C,EAAGT,cAAc,qBAAsBa,EAAEyC,oBAAoB,GAC7D7C,EAAGP,cAAc,aAAcW,EAAE0C,YAAY,GAC7C9C,EAAGP,cAAc,wBAAyBW,EAAE2C,uBAAuB,GACnE/C,EAAGP,cAAc,0BAA2BW,EAAE4C,yBAAyB,GACvEhD,EAAGP,cAAc,sBAAuBW,EAAE6C,qBAC1CjD,EAAGP,cAAc,aAAcW,EAAE8C,eAGrCxG,MAAO,sBACP4D,OACIN,EAAGN,cAAc,YAAaU,EAAEgD,WAChCpD,EAAGP,cAAc,mBAAoBW,EAAEiD,kBAAkB,GACzDrD,EAAGP,cAAc,gBAAiBW,EAAEkD,eAAe,GACnDtD,EAAGR,cAAc,8BAA+BY,EAAEmD,6BAA6B,GAC/EvD,EAAGR,cAAc,8BAA+BY,EAAEoD,6BAA6B,GAC/ExD,EAAGR,cAAc,oBAAqBY,EAAEqD,mBAAmB,GAC3DzD,EAAGR,cAAc,oBAAqBY,EAAEsD,mBAAmB,GAC3D1D,EAAGR,cAAc,wBAAyBY,EAAEuD,uBAAuB,GACnE3D,EAAGR,cAAc,wBAAyBY,EAAEwD,uBAAuB,GACnE5D,EAAGP,cAAc,oBAAqBW,EAAEyD,mBAAmB,GAC3D7D,EAAGP,cAAc,cAAeW,EAAE0D,aAAa,GAC/C9D,EAAGP,cAAc,gBAAiBW,EAAE2D,eAAe,GACnD/D,EAAGP,cAAc,WAAYW,EAAE4D,UAC/BhE,EAAGR,cAAc,YAAaY,EAAE6D,WAChCjE,EAAGR,cAAc,qBAAsBY,EAAE8D,oBACzClE,EAAGN,cAAc,qBAAsBU,EAAE+D,oBAAoB,GAC7DnE,EAAGN,cAAc,oBAAqBU,EAAEgE,mBAAmB,GAC3DpE,EAAGN,cAAc,oBAAqBU,EAAEiE,mBAAmB,GAC3DrE,EAAGN,cAAc,mBAAoBU,EAAEkE,kBAAkB,GACzDtE,EAAGP,cAAc,cAAeW,EAAEmE,aAClCvE,EAAGP,cAAc,sBAAuBW,EAAEoE,qBAAqB,MArF/DE,CAA2BhJ,EAA4B0E,GAI/D,OAAO1E,EAnGaiJ,CAAuBpI,GACvCqI,gBAwLR,SAAiCrI,GAC7B,IAAIb,GACAgB,MAAK,mBACLE,OAAM,YAGJwD,EAAI7D,EAAGsI,qBACb,OAAKzE,GAEL1E,EAAEiH,OAASvC,EAAEE,MAAMrC,IAAI,SAACmB,EAAGlF,GAAM,OAC7BwC,MAAO,IAAIxC,EAAC,MAAK6F,EAAE5D,oBAAoBjC,IAAM,IAC7CoG,OACIN,EAAGP,cAAc,iBAAkBL,EAAE0F,gBACrC9E,EAAGP,cAAc,OAAQL,EAAE2F,MAAM,OAIlCrJ,GAVQA,EA/LMsJ,CAAwBzI,GACzC0I,eA2MR,SAAgC1I,GAC5B,IAAIb,GACAgB,MAAK,kBACLE,OAAM,YAGJwD,EAAI7D,EAAG2I,oBACb,OAAK9E,GAEL1E,EAAEiH,OAASvC,EAAEE,MAAMrC,IAAI,SAACmB,EAAGlF,GAAM,OAC7BwC,MAAO,IAAIxC,EAAC,MAAMkF,EAAE+F,KAAKjK,MAAK,IAC9BoF,OACIN,EAAGF,kBAAkB,OAAQV,EAAE+F,MAC/BnF,EAAGP,cAAc,cAAeL,EAAEgG,aAAa,GAC/CpF,EAAGP,cAAc,iBAAkBL,EAAE0F,gBACrC9E,EAAGP,cAAc,gBAAiBL,EAAEiG,eAAe,GACnDrF,EAAGP,cAAc,mBAAoBL,EAAEkG,kBACvCtF,EAAGP,cAAc,uBAAwBL,EAAEmG,sBAC3CvF,EAAGP,cAAc,uBAAwBL,EAAEoG,sBAC3CxF,EAAGR,cAAc,sBAAuBJ,EAAEqG,qBAAqB,GAC/DzF,EAAGR,cAAc,sBAAuBJ,EAAEsG,qBAAqB,GAC/D1F,EAAGP,cAAc,kBAAmBL,EAAEkD,qBAIvC5G,GAlBQA,EAlNKiK,CAAuBpJ,mDChB/C,IAAAqJ,EAAA9L,EAAA,GAEAE,EAAA6L,iBAAA,SAAiCtJ,EAAaC,GAC1C,OAAQA,GACJ,cAAuB,OAAOoJ,EAAA3F,wBAAwB1D,GACtD,QAAS,OAAS2D,KAAO1D,OAAM,WAAqBE,MAAK,qXCEjE,IAAAoJ,EAAA,SAAAC,GACI,SAAAD,EACWE,EACAnH,EACAE,GAHX,IAAAkH,EAKIF,EAAA1L,KAAA6L,KAAMF,IAAKE,YAJJD,EAAAD,OACAC,EAAApH,SACAoH,EAAAlH,SAIf,OAR6BoH,EAAAL,EAAAC,GAQ7BD,EARA,CAA6BM,OAAhBpM,EAAA8L,wCCMb,SAAAO,EAA4B7L,EAAqBiB,GAC7C,OACIqD,QAASrD,EAAGuD,MAAO,EAAGE,KAAM1E,EAAE8L,QAAQ7K,EAAG,GAAIP,MAAOV,EAAE+L,MAAM9K,IAIpE,SAAA+K,EAA4BhM,EAAqBiB,GAC7C,OACIqD,QAASrD,EAAGuD,MAAO,EAAGE,KAAM1E,EAAE8L,QAAQ7K,EAAG,GAAIP,MAAOV,EAAEiM,MAAMhL,IAIpE,SAAAiL,EAA4BlM,EAAqBiB,GAC7C,OACIqD,QAASrD,EAAGuD,MAAO,EAAGE,KAAM1E,EAAE8L,QAAQ7K,EAAG,GAAIP,MAAOV,EAAEmM,MAAMlL,IAIpE,SAAAmL,EAA4BpM,EAAqBiB,GAC7C,IAAMmE,EAAMpF,EAAEmM,MAAMlL,GACdkE,EAAOnF,EAAEmM,MAAMlL,EAAI,GAEzB,OACIqD,QAASrD,EAAGuD,MAAO,EAAGE,KAAM1E,EAAE8L,QAAQ7K,EAAG,GAAImE,IAAGA,EAAED,KAAIA,GAU9D,SAAAkH,EAAmCrM,EAAqBiB,GACpD,OACIqD,QAASrD,EAAGuD,MAAO,EAAGE,KAAM1E,EAAE8L,QAAQ7K,EAAG,GAAIP,MAAOV,EAAEiM,MAAMhL,IAIpE,SAAAqL,EAAmCtM,EAAqBiB,GACpD,OACIqD,QAASrD,EAAGuD,MAAO,EAAGE,KAAM1E,EAAE8L,QAAQ7K,EAAG,GAAIP,MAAOV,EAAEmM,MAAMlL,IAIpE,SAAAsL,EAAuCvM,EAAqBiB,EAAWiD,GACnE,OACII,QAASrD,EAAGuD,MAAON,EAAIQ,KAAM1E,EAAE8L,QAAQ7K,EAAGiD,IAIlD,SAAAsI,EAA8CxM,EAAqBiB,EAAWiD,GAC1E,IAAMQ,EAAO1E,EAAE8L,QAAQ7K,EAAGiD,GAG1B,OACII,QAASrD,EAAGuD,MAAON,EAAIQ,KAAIA,EAAEhE,MAHnB+L,OAAOC,aAAaC,MAAM,KAAMrJ,MAAMC,KAAKmB,GAAMkI,OAAO,SAAAhI,GAAK,OAAK,GAALA,sBArD/EpF,EAAAqM,cAMArM,EAAAwM,cAMAxM,EAAA0M,cAMA1M,EAAA4M,cASA5M,EAAAqN,gBAAA,SAAmC7M,EAAqBiB,GACpD,OACIqD,QAASrD,EAAGuD,MAAO,EAAGE,KAAM1E,EAAE8L,QAAQ7K,EAAG,GAAIP,MAAOV,EAAE+L,MAAM9K,KAIpEzB,EAAA6M,kBAMA7M,EAAA8M,kBAMA9M,EAAA+M,yBAMA/M,EAAAgN,gCASAhN,EAAAsN,uBAAA,SACI9M,EACAiB,EACA8L,EACAC,GAIA,IAFA,IAAIlH,KACAmH,EAAMhM,EACDvB,EAAI,EAAGA,EAAIsN,EAAOtN,IAAK,CAC5B,IAAMwB,EAAI6L,EAAO/M,EAAGiN,GACpBnH,EAAMlC,KAAK1C,GACX+L,GAAO/L,EAAEsD,MAGb,OAASF,QAASrD,EAAGuD,MAAOyI,EAAMhM,EAAG6E,MAAKA,IAO9CtG,EAAA0N,mBAAA,SAAmClN,EAAqBiB,GACpD,IAAIgM,EAAMhM,EAEJ8E,EAAUiG,EAAYhM,EAAGiN,GAGzBjH,EAASgG,EAAYhM,EAF3BiN,GAAOlH,EAAQvB,OAKTyB,EAAO+F,EAAYhM,EAFzBiN,GAAOjH,EAAOxB,OAKR0B,EAAS8F,EAAYhM,EAF3BiN,GAAOhH,EAAKzB,OAKN2B,EAAY6F,EAAYhM,EAF9BiN,GAAO/G,EAAO1B,OAKR4B,EAAa4F,EAAYhM,EAF/BiN,GAAO9G,EAAU3B,OAKX6B,EAAa2F,EAAYhM,EAF/BiN,GAAO7G,EAAW5B,OAKZ8B,EAAO0F,EAAYhM,EAFzBiN,GAAO5G,EAAW7B,OAKZ+B,EAAOyF,EAAYhM,EAFzBiN,GAAO3G,EAAK9B,OAKNgC,EAASwF,EAAYhM,EAF3BiN,GAAO1G,EAAK/B,OAKNiC,EAAOuF,EAAYhM,EAFzBiN,GAAOzG,EAAOhC,OAKRkC,EAAOsF,EAAYhM,EAFzBiN,GAAOxG,EAAKjC,OAKNmC,EAAWqF,EAAYhM,EAF7BiN,GAAOvG,EAAKlC,OAKNoC,EAASoF,EAAYhM,EAF3BiN,GAAOtG,EAASnC,OAKVqC,EAAQ0F,EAAuBvM,EAFrCiN,GAAOrG,EAAOpC,MAE+B,GAGvCsC,EAAUkF,EAAYhM,EAF5BiN,GAAOpG,EAAMrC,OAKPuC,EAAYiF,EAAYhM,EAF9BiN,GAAOnG,EAAQtC,OAKTwC,EAASuF,EAAuBvM,EAFtCiN,GAAOlG,EAAUvC,MAE6B,IAGxCyC,EAAWiF,EAAYlM,EAF7BiN,GAAOjG,EAAOxC,OAKd,OACIF,QAASrD,EAAGuD,OAHhByI,GAAOhG,EAASzC,OAGavD,EACzB8E,QAAOA,EACPC,OAAMA,EACNC,KAAIA,EACJC,OAAMA,EACNC,UAASA,EACTC,WAAUA,EACVC,WAAUA,EACVC,KAAIA,EACJC,KAAIA,EACJC,OAAMA,EACNC,KAAIA,EACJC,KAAIA,EACJC,SAAQA,EACRC,OAAMA,EACNC,MAAKA,EACLC,QAAOA,EACPC,UAASA,EACTC,OAAMA,EACNC,SAAQA,IAIhBzH,EAAA2N,oBAAA,SAAoCnN,EAAqBiB,GACrD,IAAIgM,EAAMhM,EAEJuG,EAAUwE,EAAYhM,EAAGiN,GAGzBxF,EAAmBuE,EAAYhM,EAFrCiN,GAAOzF,EAAQhD,OAKTkD,EAAgBwE,EAAYlM,EAFlCiN,GAAOxF,EAAiBjD,OAKlBmD,EAAuBuE,EAAYlM,EAFzCiN,GAAOvF,EAAclD,OAKfoD,EAAkBsE,EAAYlM,EAFpCiN,GAAOtF,EAAqBnD,OAKtBqD,EAAuBmE,EAAYhM,EAFzCiN,GAAOrF,EAAgBpD,OAKjBsD,EAAkBuE,EAA6BrM,EAFrDiN,GAAOpF,EAAqBrD,OAK5B,OACIF,QAASrD,EAAGuD,OAHhByI,GAAOnF,EAAgBtD,OAGMvD,EACzBuG,QAAOA,EACPC,iBAAgBA,EAChBC,cAAaA,EACbC,qBAAoBA,EACpBC,gBAAeA,EACfC,qBAAoBA,EACpBC,gBAAeA,IAIvBtI,EAAA4N,0BAAA,SAA0CpN,EAAqBiB,GAC3D,IAAIgM,EAAMhM,EAEJiH,EAAQ8D,EAAYhM,EAAGiN,GAGvB7E,EAAqByD,EAAY7L,EAFvCiN,GAAO/E,EAAM1D,OAKP6D,EAAqBwD,EAAY7L,EAFvCiN,GAAO7E,EAAmB5D,OAKpB8D,EAAa4D,EAAYlM,EAF/BiN,GAAO5E,EAAmB7D,OAKpB+D,EAAwB2D,EAAYlM,EAF1CiN,GAAO3E,EAAW9D,OAKZgE,EAA0B0D,EAAYlM,EAF5CiN,GAAO1E,EAAsB/D,OAKvBiE,EAAsByD,EAAYlM,EAFxCiN,GAAOzE,EAAwBhE,OAKzBkE,EAAawD,EAAYlM,EAF/BiN,GAAOxE,EAAoBjE,OAKrBmE,EAAauD,EAAYlM,EAF/BiN,GAAOvE,EAAWlE,OAKZoE,EAAYsD,EAAYlM,EAF9BiN,GAAOtE,EAAWnE,OAKZqE,EAAmBqD,EAAYlM,EAFrCiN,GAAOrE,EAAUpE,OAKXsE,EAAgBoD,EAAYlM,EAFlCiN,GAAOpE,EAAiBrE,OAKlBuE,EAA8BiD,EAAYhM,EAFhDiN,GAAOnE,EAActE,OAKfwE,EAA8BgD,EAAYhM,EAFhDiN,GAAOlE,EAA4BvE,OAK7ByE,EAAoB+C,EAAYhM,EAFtCiN,GAAOjE,EAA4BxE,OAK7B0E,EAAoB8C,EAAYhM,EAFtCiN,GAAOhE,EAAkBzE,OAKnB2E,EAAwB6C,EAAYhM,EAF1CiN,GAAO/D,EAAkB1E,OAKnB4E,EAAwB4C,EAAYhM,EAF1CiN,GAAO9D,EAAsB3E,OAKvB6E,EAAoB6C,EAAYlM,EAFtCiN,GAAO7D,EAAsB5E,OAKvB8E,EAAc4C,EAAYlM,EAFhCiN,GAAO5D,EAAkB7E,OAKnB+E,EAAgB2C,EAAYlM,EAFlCiN,GAAO3D,EAAY9E,OAKbgF,EAAW0C,EAAYlM,EAF7BiN,GAAO1D,EAAc/E,OAKfiF,EAAY4C,EAAkCrM,EAFpDiN,GAAOzD,EAAShF,OAKVkF,EAAqB2C,EAA2CrM,EAFtEiN,GAAOxD,EAAUjF,OAKXmF,EAAqBuC,EAAYlM,EAFvCiN,GAAOvD,EAAmBlF,OAKpBoF,EAAoBsC,EAAYlM,EAFtCiN,GAAOtD,EAAmBnF,OAKpBqF,EAAoBqC,EAAYlM,EAFtCiN,GAAOrD,EAAkBpF,OAKnBsF,EAAmBoC,EAAYlM,EAFrCiN,GAAOpD,EAAkBrF,OAKnBuF,EAAcmC,EAAYlM,EAFhCiN,GAAOnD,EAAiBtF,OAKlBwF,EAAsBkC,EAAYlM,EAFxCiN,GAAOlD,EAAYvF,OAKnB,OACIF,QAASrD,EAAGuD,OAHhByI,GAAOjD,EAAoBxF,OAGEvD,EACzBiH,MAAKA,EACLE,mBAAkBA,EAClBC,mBAAkBA,EAClBC,WAAUA,EACVC,sBAAqBA,EACrBC,wBAAuBA,EACvBC,oBAAmBA,EACnBC,WAAUA,EACVC,WAAUA,EACVC,UAASA,EACTC,iBAAgBA,EAChBC,cAAaA,EACbC,4BAA2BA,EAC3BC,4BAA2BA,EAC3BC,kBAAiBA,EACjBC,kBAAiBA,EACjBC,sBAAqBA,EACrBC,sBAAqBA,EACrBC,kBAAiBA,EACjBC,YAAWA,EACXC,cAAaA,EACbC,SAAQA,EACRC,UAASA,EACTC,mBAAkBA,EAClBC,mBAAkBA,EAClBC,kBAAiBA,EACjBC,kBAAiBA,EACjBC,iBAAgBA,EAChBC,YAAWA,EACXC,oBAAmBA,IAI3BxK,EAAA6N,0BAAA,SAA0CrN,EAAqBiB,GAC3D,IAAIgM,EAAMhM,EAEJiH,EAAQ8D,EAAYhM,EAAGiN,GAGvB7E,EAAqByD,EAAY7L,EAFvCiN,GAAO/E,EAAM1D,OAKP6D,EAAqBwD,EAAY7L,EAFvCiN,GAAO7E,EAAmB5D,OAKpB8D,EAAa4D,EAAYlM,EAF/BiN,GAAO5E,EAAmB7D,OAKpB+D,EAAwB2D,EAAYlM,EAF1CiN,GAAO3E,EAAW9D,OAKZgE,EAA0B0D,EAAYlM,EAF5CiN,GAAO1E,EAAsB/D,OAKvBiE,EAAsByD,EAAYlM,EAFxCiN,GAAOzE,EAAwBhE,OAKzBkE,EAAawD,EAAYlM,EAF/BiN,GAAOxE,EAAoBjE,OAKrBoE,EAAYwD,EAAYpM,EAF9BiN,GAAOvE,EAAWlE,OAKZqE,EAAmBqD,EAAYlM,EAFrCiN,GAAOrE,EAAUpE,OAKXsE,EAAgBoD,EAAYlM,EAFlCiN,GAAOpE,EAAiBrE,OAKlBuE,EAA8BiD,EAAYhM,EAFhDiN,GAAOnE,EAActE,OAKfwE,EAA8BgD,EAAYhM,EAFhDiN,GAAOlE,EAA4BvE,OAK7ByE,EAAoB+C,EAAYhM,EAFtCiN,GAAOjE,EAA4BxE,OAK7B0E,EAAoB8C,EAAYhM,EAFtCiN,GAAOhE,EAAkBzE,OAKnB2E,EAAwB6C,EAAYhM,EAF1CiN,GAAO/D,EAAkB1E,OAKnB4E,EAAwB4C,EAAYhM,EAF1CiN,GAAO9D,EAAsB3E,OAKvB6E,EAAoB6C,EAAYlM,EAFtCiN,GAAO7D,EAAsB5E,OAKvB8E,EAAc4C,EAAYlM,EAFhCiN,GAAO5D,EAAkB7E,OAKnB+E,EAAgB2C,EAAYlM,EAFlCiN,GAAO3D,EAAY9E,OAKbgF,EAAW0C,EAAYlM,EAF7BiN,GAAO1D,EAAc/E,OAKfiF,EAAY4C,EAAkCrM,EAFpDiN,GAAOzD,EAAShF,OAKVkF,EAAqB2C,EAA2CrM,EAFtEiN,GAAOxD,EAAUjF,OAKXmF,EAAqByC,EAAYpM,EAFvCiN,GAAOvD,EAAmBlF,OAKpBoF,EAAoBwC,EAAYpM,EAFtCiN,GAAOtD,EAAmBnF,OAKpBqF,EAAoBuC,EAAYpM,EAFtCiN,GAAOrD,EAAkBpF,OAKnBsF,EAAmBsC,EAAYpM,EAFrCiN,GAAOpD,EAAkBrF,OAKnBuF,EAAcmC,EAAYlM,EAFhCiN,GAAOnD,EAAiBtF,OAKlBwF,EAAsBkC,EAAYlM,EAFxCiN,GAAOlD,EAAYvF,OAKnB,OACIF,QAASrD,EAAGuD,OAHhByI,GAAOjD,EAAoBxF,OAGEvD,EACzBiH,MAAKA,EACLE,mBAAkBA,EAClBC,mBAAkBA,EAClBC,WAAUA,EACVC,sBAAqBA,EACrBC,wBAAuBA,EACvBC,oBAAmBA,EACnBC,WAAUA,EACVE,UAASA,EACTC,iBAAgBA,EAChBC,cAAaA,EACbC,4BAA2BA,EAC3BC,4BAA2BA,EAC3BC,kBAAiBA,EACjBC,kBAAiBA,EACjBC,sBAAqBA,EACrBC,sBAAqBA,EACrBC,kBAAiBA,EACjBC,YAAWA,EACXC,cAAaA,EACbC,SAAQA,EACRC,UAASA,EACTC,mBAAkBA,EAClBC,mBAAkBA,EAClBC,kBAAiBA,EACjBC,kBAAiBA,EACjBC,iBAAgBA,EAChBC,YAAWA,EACXC,oBAAmBA,IAI3BxK,EAAA8N,uBAAA,SAAuCtN,EAAqBiB,GACxD,IAAIgM,EAAMhM,EAEJqJ,EAAiB4B,EAAYlM,EAAGiN,GAGhC1C,EAAO2B,EAAYlM,EAFzBiN,GAAO3C,EAAe9F,OAKtB,OACIF,QAASrD,EAAGuD,OAHhByI,GAAO1C,EAAK/F,OAGiBvD,EACzBqJ,eAAcA,EACdC,KAAIA,IAIZ/K,EAAA+N,uBAAA,SAAuCvN,EAAqBiB,GACxD,IAAIgM,EAAMhM,EAEJ0J,EAAO6B,EAA8BxM,EAAGiN,EAAK,GAG7CrC,EAAcsB,EAAYlM,EAFhCiN,GAAOtC,EAAKnG,OAKN8F,EAAiB4B,EAAYlM,EAFnCiN,GAAOrC,EAAYpG,OAKbqG,EAAgBqB,EAAYlM,EAFlCiN,GAAO3C,EAAe9F,OAKhBsG,EAAmBoB,EAAYlM,EAFrCiN,GAAOpC,EAAcrG,OAKfuG,EAAuBmB,EAAYlM,EAFzCiN,GAAOnC,EAAiBtG,OAKlBwG,EAAuBkB,EAAYlM,EAFzCiN,GAAOlC,EAAqBvG,OAKtByG,EAAsBe,EAAYhM,EAFxCiN,GAAOjC,EAAqBxG,OAKtB0G,EAAsBc,EAAYhM,EAFxCiN,GAAOhC,EAAoBzG,OAKrBsD,EAAkBwE,EAAgCtM,EAFxDiN,GAAO/B,EAAoB1G,OAK3B,OACIF,QAASrD,EAAGuD,OAHhByI,GAAOnF,EAAgBtD,OAGMvD,EACzB0J,KAAIA,EACJC,YAAWA,EACXN,eAAcA,EACdO,cAAaA,EACbC,iBAAgBA,EAChBC,qBAAoBA,EACpBC,qBAAoBA,EACpBC,oBAAmBA,EACnBC,oBAAmBA,EACnBpD,gBAAeA,kDC9gBvB,IAAA0F,EAAAlO,EAAA,GACAiG,EAAAjG,EAAA,GACAmO,EAAAnO,EAAA,GAEAoO,EAAA,WA+EI,SAAAA,EAAoBC,GAChBjC,KAAKhH,KAAO,IAAIkJ,SAASD,GACzBjC,KAAKmC,cA2Db,OA3IkBH,EAAAI,KAAd,SAAmBH,GACf,OAAO,IAAID,EAAQC,IAGhBD,EAAA3M,UAAAgL,MAAP,SAAa9K,GAET,OADAyK,KAAKqC,MAAM9M,EAAG,GACPyK,KAAKhH,KAAKsJ,SAAS/M,IAGvByM,EAAA3M,UAAAkL,MAAP,SAAahL,GAET,OADAyK,KAAKqC,MAAM9M,EAAG,GACPyK,KAAKhH,KAAKuJ,UAAUhN,GAAG,IAG3ByM,EAAA3M,UAAAoL,MAAP,SAAalL,GAET,OADAyK,KAAKqC,MAAM9M,EAAG,GACPyK,KAAKhH,KAAKwJ,UAAUjN,GAAG,IAG3ByM,EAAA3M,UAAA+K,QAAP,SAAe7K,EAAWiD,GAEtB,OADAwH,KAAKqC,MAAM9M,EAAGiD,GACP,IAAIiK,WAAWzC,KAAKhH,KAAK0J,OAAOC,MAAMpN,EAAGA,EAAIiD,KAGjDwJ,EAAA3M,UAAAuN,QAAP,WACI,IAAMC,EAAS7C,KAAKzD,oBACpB,GAAc,MAAVsG,EAIJ,OAAQA,EAAOrG,MAAMxH,OACjB,KAAK6E,EAAElE,8BAA+B,OAAO,EAC7C,KAAKkE,EAAEjE,8BAA+B,OAAO,EAC7C,QAAS,SAIVoM,EAAA3M,UAAAyN,UAAP,WACI,IAAMC,EAAK/C,KAAKrB,qBAChB,GAAU,MAANoE,EAAJ,CAIA,IAAMC,EAAQD,EAAG3I,MAAMP,EAAE5D,oBAAoBgN,sCAC7C,OAAOD,GAASA,EAAMpE,eAAe5J,MAAQ,GAAKgO,EAAMnE,KAAK7J,MAAQ,IAGlEgN,EAAA3M,UAAA8E,aAAP,WACI,OAAO6F,KAAK/F,WAGT+H,EAAA3M,UAAAqG,eAAP,WACI,OAAOsE,KAAKvE,aAGTuG,EAAA3M,UAAAwG,cAAP,WACI,OAAOmE,KAAKpE,YAGToG,EAAA3M,UAAAkH,kBAAP,WACI,OAAOyD,KAAK1D,gBAGT0F,EAAA3M,UAAAsJ,mBAAP,WACI,OAAOqB,KAAKtB,iBAGTsD,EAAA3M,UAAA2J,kBAAP,WACI,OAAOgB,KAAKjB,gBAGRiD,EAAA3M,UAAAgN,MAAR,SAAc9M,EAAWiD,GACrB,GAAIjD,EAAI,GAAKA,GAAKyK,KAAKhH,KAAKkK,YACrB1K,EAAK,GAAKjD,EAAIiD,EAAKwH,KAAKhH,KAAKkK,WAChC,MAAM,IAAInB,EAAEnC,QAAO,wBAAsCrK,EAAGiD,IAS5DwJ,EAAA3M,UAAA8M,YAAR,WACI,IAAIZ,EAAM,EAGV,GAFAvB,KAAK/F,UAAY6H,EAAEN,mBAAmBxB,KAAMuB,GAExCvB,KAAK/F,UAAUI,QAAQrF,OAAS6E,EAAEpE,oBAClC,MAAM,IAAIsM,EAAEnC,QAAO,wBAAsC2B,EAAK,GAMlE,GAHAA,EAAMvB,KAAK/F,UAAUsB,SAASvG,MAC9BgL,KAAKvE,YAAcqG,EAAEtB,YAAYR,KAAMuB,GAEnCvB,KAAKvE,YAAYzG,OAAS6E,EAAEnE,mBAC5B,MAAM,IAAIqM,EAAEnC,QAAO,uBAAqC2B,EAAK,GAQjE,OALAA,GAAOvB,KAAKvE,YAAY3C,MACxBkH,KAAKpE,WAAakG,EAAEL,oBAAoBzB,KAAMuB,GAE9CA,GAAOvB,KAAKpE,WAAW9C,MACTgJ,EAAExB,YAAYN,KAAMuB,GACpBvM,OACV,KAAK6E,EAAElE,8BACHqK,KAAK1D,eAAiBwF,EAAEJ,0BAA0B1B,KAAMuB,GACxD,MACJ,KAAK1H,EAAEjE,8BACHoK,KAAK1D,eAAiBwF,EAAEH,0BAA0B3B,KAAMuB,GACxD,MACJ,QACI,MAAM,IAAIQ,EAAEnC,QAAO,gCAA8C2B,EAAK,GAG9E,GAAIvB,KAAK1D,eAAegC,oBAAoBtJ,OAAS6E,EAAE3D,iCACnD,MAAM,IAAI6L,EAAEnC,QAAO,+BACfI,KAAK1D,eAAegC,oBAAoB1F,QACxCoH,KAAK1D,eAAegC,oBAAoBxF,OAGhDyI,GAAOvB,KAAK1D,eAAexD,MAC3BkH,KAAKtB,gBAAkBoD,EAAEV,uBAAuBpB,KAAMuB,EAClDO,EAAEF,uBACF5B,KAAK1D,eAAegC,oBAAoBtJ,OAE5CuM,GAAOvB,KAAKtB,gBAAgB5F,MAC5BkH,KAAKjB,eAAiB+C,EAAEV,uBAAuBpB,KAAMuB,EACjDO,EAAED,uBACF7B,KAAKpE,WAAWG,iBAAiB/G,QAW7CgN,EA5IA,GAAalO,EAAAkO,wDCLblO,EAAAqP,wBAAA,SAAwCC,GACpC,OACItD,KAAI,eACJsD,QAAOA,IAIftP,EAAAuP,yBAAA,SAAyCC,GACrC,OACIxD,KAAI,gBACJwD,SAAQA,IAIhBxP,EAAAyP,wBAAA,SAAwCX,EAAmBE,GACvD,OACIhD,KAAI,eACJ8C,QAAOA,EACPE,UAASA,IAIjBhP,EAAA0P,wBAAA,SAAwCC,GACpC,OACI3D,KAAI,eACJ2D,MAAKA,kDCzBb,IAAAC,EAAA9P,EAAA,GACA+P,EAAA/P,EAAA,GACAgQ,EAAAhQ,EAAA,GACAiQ,EAAAjQ,EAAA,GAEIyC,EAAqB,KAEzByN,UAAY,SAACC,GACT,IAAMC,EAAMD,EAAG/K,KACf,OAAQgL,EAAIlE,MACR,qBAMR,SAA2BkE,GACvB,IAAIC,EAAS,IAAIC,WAEjBD,EAAOE,OAAS,SAAAJ,GACZ,IACI,IAAM9B,EAAgC8B,EAAGxN,OAAQ6N,OACjD/N,EAAKsN,EAAA3B,QAAQI,KAAKH,GAGlB,IAAMqB,EAAWM,EAAAjE,iBAAiBtJ,EAAE,WAC9BgO,EAAcX,EAAEL,yBAAyBC,GAC/CgB,YAAYD,GAGZ,IAAMzB,EAAUvM,EAAGuM,UACbE,EAAYzM,EAAGyM,YACfyB,EAAab,EAAEH,wBAAwBX,EAASE,GACtDwB,YAAYC,GAGZ,IAAMnB,EAAUS,EAAAzN,gBAAgBC,GAC1BmO,EAASd,EAAEP,wBAAwBC,GACzCkB,YAAYE,GACd,MAAOC,GACL,IAAMC,EAAMhB,EAAEF,wBAAwBiB,EAAGE,SAClC,kBAAkBC,KAAKC,UAAUJ,IACxCH,YAAYI,KAIpBT,EAAOa,QAAU,SAAAf,GACb1N,EAAK,KACL,IAAM2N,EAAMN,EAAEF,wBAAwB,oBACtCc,YAAYN,IAGhBC,EAAOc,kBAAkBf,EAAIgB,MAzCrBC,CAAkBjB","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","export const IMAGE_DOS_SIGNATURE = 0x5A4D;  // MZ\r\n\r\nexport const IMAGE_NT_SIGNATURE = 0x00004550;  // PE00\r\n\r\nexport const IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\r\nexport const IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\r\n\r\nexport enum ImageFile {\r\n    IMAGE_FILE_RELOCS_STRIPPED = 0x0001,\r\n    IMAGE_FILE_EXECUTABLE_IMAGE = 0x0002,\r\n    IMAGE_FILE_LINE_NUMS_STRIPPED = 0x0004,\r\n    IMAGE_FILE_LOCAL_SYMS_STRIPPED = 0x0008,\r\n    IMAGE_FILE_AGGRESIVE_WS_TRIM = 0x0010,\r\n    IMAGE_FILE_LARGE_ADDRESS_AWARE = 0x0020,\r\n    IMAGE_FILE_BYTES_REVERSED_LO = 0x0080,\r\n    IMAGE_FILE_32BIT_MACHINE = 0x0100,\r\n    IMAGE_FILE_DEBUG_STRIPPED = 0x0200,\r\n    IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 0x0400,\r\n    IMAGE_FILE_NET_RUN_FROM_SWAP = 0x0800,\r\n    IMAGE_FILE_SYSTEM = 0x1000,\r\n    IMAGE_FILE_DLL = 0x2000,\r\n    IMAGE_FILE_UP_SYSTEM_ONLY = 0x4000,\r\n    IMAGE_FILE_BYTES_REVERSED_HI = 0x8000,\r\n}\r\n\r\nexport enum ImageFileMachine {\r\n    IMAGE_FILE_MACHINE_UNKNOWN = 0,\r\n    IMAGE_FILE_MACHINE_TARGET_HOST = 0x0001,\r\n    IMAGE_FILE_MACHINE_I386 = 0x014c,\r\n    IMAGE_FILE_MACHINE_R3000 = 0x0162,\r\n    IMAGE_FILE_MACHINE_R4000 = 0x0166,\r\n    IMAGE_FILE_MACHINE_R10000 = 0x0168,\r\n    IMAGE_FILE_MACHINE_WCEMIPSV2 = 0x0169,\r\n    IMAGE_FILE_MACHINE_ALPHA = 0x0184,\r\n    IMAGE_FILE_MACHINE_SH3 = 0x01a2,\r\n    IMAGE_FILE_MACHINE_SH3DSP = 0x01a3,\r\n    IMAGE_FILE_MACHINE_SH3E = 0x01a4,\r\n    IMAGE_FILE_MACHINE_SH4 = 0x01a6,\r\n    IMAGE_FILE_MACHINE_SH5 = 0x01a8,\r\n    IMAGE_FILE_MACHINE_ARM = 0x01c0,\r\n    IMAGE_FILE_MACHINE_THUMB = 0x01c2,\r\n    IMAGE_FILE_MACHINE_ARMNT = 0x01c4,\r\n    IMAGE_FILE_MACHINE_AM33 = 0x01d3,\r\n    IMAGE_FILE_MACHINE_POWERPC = 0x01F0,\r\n    IMAGE_FILE_MACHINE_POWERPCFP = 0x01f1,\r\n    IMAGE_FILE_MACHINE_IA64 = 0x0200,\r\n    IMAGE_FILE_MACHINE_MIPS16 = 0x0266,\r\n    IMAGE_FILE_MACHINE_ALPHA64 = 0x0284,\r\n    IMAGE_FILE_MACHINE_MIPSFPU = 0x0366,\r\n    IMAGE_FILE_MACHINE_MIPSFPU16 = 0x0466,\r\n    IMAGE_FILE_MACHINE_AXP64 = IMAGE_FILE_MACHINE_ALPHA64,\r\n    IMAGE_FILE_MACHINE_TRICORE = 0x0520,\r\n    IMAGE_FILE_MACHINE_CEF = 0x0CEF,\r\n    IMAGE_FILE_MACHINE_EBC = 0x0EBC,\r\n    IMAGE_FILE_MACHINE_AMD64 = 0x8664,\r\n    IMAGE_FILE_MACHINE_M32R = 0x9041,\r\n    IMAGE_FILE_MACHINE_ARM64 = 0xAA64,\r\n    IMAGE_FILE_MACHINE_CEE = 0xC0EE,\r\n}\r\n\r\nexport enum ImageSubsystem {\r\n    IMAGE_SUBSYSTEM_UNKNOWN = 0,\r\n    IMAGE_SUBSYSTEM_NATIVE = 1,\r\n    IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,\r\n    IMAGE_SUBSYSTEM_OS2_CUI = 5,\r\n    IMAGE_SUBSYSTEM_POSIX_CUI = 7,\r\n    IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9,\r\n    IMAGE_SUBSYSTEM_EFI_APPLICATION = 10,\r\n    IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11,\r\n    IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12,\r\n    IMAGE_SUBSYSTEM_EFI_ROM = 13,\r\n    IMAGE_SUBSYSTEM_XBOX = 14,\r\n    IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16,\r\n    IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 17,\r\n}\r\n\r\nexport enum ImageDllCharacteristics {\r\n    IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020,\r\n    IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 0x0040,\r\n    IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 0x0080,\r\n    IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 0x0100,\r\n    IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 0x0200,\r\n    IMAGE_DLLCHARACTERISTICS_NO_SEH = 0x0400,\r\n    IMAGE_DLLCHARACTERISTICS_NO_BIND = 0x0800,\r\n    IMAGE_DLLCHARACTERISTICS_APPCONTAINER = 0x1000,\r\n    IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 0x2000,\r\n    IMAGE_DLLCHARACTERISTICS_GUARD_CF = 0x4000,\r\n    IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 0x8000,\r\n}\r\n\r\nexport enum ImageDirectoryEntry {\r\n    IMAGE_DIRECTORY_ENTRY_EXPORT = 0,\r\n    IMAGE_DIRECTORY_ENTRY_IMPORT = 1,\r\n    IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,\r\n    IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,\r\n    IMAGE_DIRECTORY_ENTRY_SECURITY = 4,\r\n    IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,\r\n    IMAGE_DIRECTORY_ENTRY_DEBUG = 6,\r\n    IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7,\r\n    IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,\r\n    IMAGE_DIRECTORY_ENTRY_TLS = 9,\r\n    IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,\r\n    IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,\r\n    IMAGE_DIRECTORY_ENTRY_IAT = 12,\r\n    IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13,\r\n    IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14,\r\n}\r\n\r\nexport const IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16;\r\n\r\nexport enum ImageSection {\r\n    IMAGE_SCN_TYPE_NO_PAD = 0x00000008,\r\n\r\n    IMAGE_SCN_CNT_CODE = 0x00000020,\r\n    IMAGE_SCN_CNT_INITIALIZED_DATA = 0x00000040,\r\n    IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x00000080,\r\n\r\n    IMAGE_SCN_LNK_OTHER = 0x00000100,\r\n    IMAGE_SCN_LNK_INFO = 0x00000200,\r\n    IMAGE_SCN_LNK_REMOVE = 0x00000800,\r\n    IMAGE_SCN_LNK_COMDAT = 0x00001000,\r\n\r\n    IMAGE_SCN_NO_DEFER_SPEC_EXC = 0x00004000,\r\n    IMAGE_SCN_GPREL = 0x00008000,\r\n\r\n    IMAGE_SCN_MEM_PURGEABLE = 0x00020000,\r\n    IMAGE_SCN_MEM_16BIT = 0x00020000,\r\n    IMAGE_SCN_MEM_LOCKED = 0x00040000,\r\n    IMAGE_SCN_MEM_PRELOAD = 0x00080000,\r\n\r\n    IMAGE_SCN_ALIGN_1BYTES = 0x00100000,\r\n    IMAGE_SCN_ALIGN_2BYTES = 0x00200000,\r\n    IMAGE_SCN_ALIGN_4BYTES = 0x00300000,\r\n    IMAGE_SCN_ALIGN_8BYTES = 0x00400000,\r\n    IMAGE_SCN_ALIGN_16BYTES = 0x00500000,\r\n    IMAGE_SCN_ALIGN_32BYTES = 0x00600000,\r\n    IMAGE_SCN_ALIGN_64BYTES = 0x00700000,\r\n    IMAGE_SCN_ALIGN_128BYTES = 0x00800000,\r\n    IMAGE_SCN_ALIGN_256BYTES = 0x00900000,\r\n    IMAGE_SCN_ALIGN_512BYTES = 0x00A00000,\r\n    IMAGE_SCN_ALIGN_1024BYTES = 0x00B00000,\r\n    IMAGE_SCN_ALIGN_2048BYTES = 0x00C00000,\r\n    IMAGE_SCN_ALIGN_4096BYTES = 0x00D00000,\r\n    IMAGE_SCN_ALIGN_8192BYTES = 0x00E00000,\r\n\r\n    IMAGE_SCN_LNK_NRELOC_OVFL = 0x01000000,\r\n    IMAGE_SCN_MEM_DISCARDABLE = 0x02000000,\r\n    IMAGE_SCN_MEM_NOT_CACHED = 0x04000000,\r\n    IMAGE_SCN_MEM_NOT_PAGED = 0x08000000,\r\n    IMAGE_SCN_MEM_SHARED = 0x10000000,\r\n    IMAGE_SCN_MEM_EXECUTE = 0x20000000,\r\n    IMAGE_SCN_MEM_READ = 0x40000000,\r\n    IMAGE_SCN_MEM_WRITE = 0x80000000,\r\n\r\n    IMAGE_SCN_SCALE_INDEX = 0x00000001,\r\n}","import { PEImage } from \"../pe/image\";\r\n\r\nexport function generateNavList(pe: PEImage): W.NavData[] {\r\n    return [\r\n        generateHeadersNavData(pe)\r\n    ];\r\n}\r\n\r\nfunction generateHeadersNavData(pe: PEImage): W.NavData {\r\n    const pageID = W.PageID.HEADERS;\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.HEADERS },\r\n        children: [{\r\n            target: { pageID, title: W.KnownTitle.DOS_HEADER, elemID: W.KnownElemID.DOS_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.PE_SIGNATURE, elemID: W.KnownElemID.PE_SIGNATURE }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.FILE_HEADER, elemID: W.KnownElemID.FILE_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.OPTIONAL_HEADER, elemID: W.KnownElemID.OPTIONAL_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.DATA_DIRECTORIES, elemID: W.KnownElemID.DATA_DIRECTORIES }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.SECTION_HEADERS, elemID: W.KnownElemID.SECTION_HEADERS }\r\n        }]\r\n    };\r\n}","import * as S from \"../pe/structures\";\r\nimport { format } from \"url\";\r\n\r\nexport function formatU1RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 2);\r\n}\r\n\r\nexport function formatU2RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 4);\r\n}\r\n\r\nexport function formatU4RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 8);\r\n}\r\n\r\nexport function formatU1Hex(d: number): string {\r\n    return `${formatU1RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU2Hex(d: number): string {\r\n    return `${formatU2RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU4Hex(d: number): string {\r\n    return `${formatU4RawHex(d)}h`;\r\n}\r\n\r\nexport function formatHexDec(d: number): string {\r\n    return `${d.toString(16).toUpperCase()}h (${d})`;\r\n}\r\n\r\nexport function formatBytes(bytes: Uint8Array, lineWidth: number = 16): string[] {\r\n    let lines: string[] = [];\r\n    for (let start = 0; start < bytes.length; start += lineWidth) {\r\n        const line = Array.from(bytes.subarray(start, start + lineWidth))\r\n            .map(b => formatU1RawHex(b)).join(\"-\");\r\n        lines.push(line);\r\n    }\r\n    return lines;\r\n}\r\n\r\nexport function formatStructTitle(s: S.FileData, title: string): string {\r\n    return `${title} [${formatU4Hex(s._offset)} - ${formatU4Hex(s._offset + s._size)} : ${formatHexDec(s._size)}]`;\r\n}\r\n\r\nexport function formatU1Field(name: string, f: S.U1Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 1, showDec);\r\n}\r\n\r\nexport function formatU2Field(name: string, f: S.U2Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 2, showDec);\r\n}\r\n\r\nexport function formatU4Field(name: string, f: S.U4Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 4, showDec);\r\n}\r\n\r\nexport function formatU8Field(name: string, f: S.U8Field, showDec?: boolean): W.StructItem {\r\n    let value = `${formatU4RawHex(f.high)} ${formatU4Hex(f.low)}`;\r\n\r\n    if (showDec && f.high < 0x1FFFFF) {\r\n        const long = f.high * 0x100000000 + f.low;\r\n        value += ` (${formatDec(long)})`;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value,\r\n    };\r\n}\r\n\r\nexport function formatBytesField(name: string, f: S.Field): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: \"\",\r\n    }\r\n}\r\n\r\nexport function formatStringField(name: string, f: S.StringField): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: `\"${f.value}\"`,\r\n    }\r\n}\r\n\r\nfunction padZeroLeft(str: string, len: number): string {\r\n    if (str.length < len) {\r\n        return \"0\".repeat(len - str.length) + str;\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n\r\nfunction formatUIntField(name: string, f: S.UIntField, sz: number, showDec?: boolean): W.StructItem {\r\n    let hex: string;\r\n    switch (sz) {\r\n        case 1: hex = formatU1Hex(f.value); break;\r\n        case 2: hex = formatU2Hex(f.value); break;\r\n        case 4: hex = formatU4Hex(f.value); break;\r\n        default: hex = f.value.toString(16).toUpperCase(); break;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: showDec ? `${hex} (${formatDec(f.value)})` : hex,\r\n    }\r\n}\r\n\r\nfunction formatDec(v: number): string {\r\n    return v.toLocaleString();\r\n}\r\n","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\nimport { Z_UNKNOWN } from \"zlib\";\r\n\r\nexport function generateHeadersPageData(pe: PEImage): W.HeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.HEADERS,\r\n            title: W.KnownTitle.HEADERS,\r\n        },\r\n        dosHeader: generateDosHeader(pe),\r\n        peSignature: generatePESignature(pe),\r\n        fileHeader: generateFileHeader(pe),\r\n        optionalHeader: generateOptionalHeader(pe),\r\n        dataDirectories: generateDataDirectories(pe),\r\n        sectionHeaders: generateSectionHeaders(pe),\r\n    };\r\n}\r\n\r\nfunction generateDosHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.DOS_HEADER,\r\n        elemID: W.KnownElemID.DOS_HEADER,\r\n    };\r\n\r\n    const h = pe.getDosHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"e_magic\", h.e_magic),\r\n        FM.formatU2Field(\"e_cblp\", h.e_cblp),\r\n        FM.formatU2Field(\"e_cp\", h.e_cp),\r\n        FM.formatU2Field(\"e_crlc\", h.e_crlc),\r\n        FM.formatU2Field(\"e_cparhdr\", h.e_cparhdr),\r\n        FM.formatU2Field(\"e_minalloc\", h.e_minalloc),\r\n        FM.formatU2Field(\"e_maxalloc\", h.e_maxalloc),\r\n        FM.formatU2Field(\"e_ss\", h.e_ss),\r\n        FM.formatU2Field(\"e_sp\", h.e_sp),\r\n        FM.formatU2Field(\"e_csum\", h.e_csum),\r\n        FM.formatU2Field(\"e_ip\", h.e_ip),\r\n        FM.formatU2Field(\"e_cs\", h.e_cs),\r\n        FM.formatU2Field(\"e_lfarlc\", h.e_lfarlc),\r\n        FM.formatU2Field(\"e_ovno\", h.e_ovno),\r\n        FM.formatBytesField(\"e_res\", h.e_res),\r\n        FM.formatU2Field(\"e_oemid\", h.e_oemid),\r\n        FM.formatU2Field(\"e_oeminfo\", h.e_oeminfo),\r\n        FM.formatBytesField(\"e_res2\", h.e_res2),\r\n        FM.formatU4Field(\"e_lfanew\", h.e_lfanew),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generatePESignature(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.PE_SIGNATURE,\r\n        elemID: W.KnownElemID.PE_SIGNATURE,\r\n    };\r\n\r\n    const h = pe.getPESignature();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"PE Signature\", h),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateFileHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.FILE_HEADER,\r\n        elemID: W.KnownElemID.FILE_HEADER,\r\n    };\r\n\r\n    const h = pe.getFileHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"Machine\", h.Machine),\r\n        FM.formatU2Field(\"NumberOfSections\", h.NumberOfSections, true),\r\n        FM.formatU4Field(\"TimeDateStamp\", h.TimeDateStamp),\r\n        FM.formatU4Field(\"PointerToSymbolTable\", h.PointerToSymbolTable),\r\n        FM.formatU4Field(\"NumberOfSymbols\", h.NumberOfSymbols, true),\r\n        FM.formatU2Field(\"SizeOfOptionalHeader\", h.SizeOfOptionalHeader, true),\r\n        FM.formatU2Field(\"Characteristics\", h.Characteristics),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateOptionalHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.OPTIONAL_HEADER,\r\n        elemID: W.KnownElemID.OPTIONAL_HEADER,\r\n    };\r\n\r\n    const h = pe.getOptionalHeader();\r\n    if (!h) return s;\r\n\r\n    switch (h.Magic.value) {\r\n        case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n            s.title += \" (32-bit)\";\r\n            fillOptionalHeader32Fields(s, <S.ImageOptionalHeader32>h);\r\n            break;\r\n\r\n        case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n            s.title += \" (64-bit)\";\r\n            fillOptionalHeader64Fields(s, <S.ImageOptionalHeader64>h);\r\n            break;\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nfunction fillOptionalHeader32Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader32): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n            FM.formatU4Field(\"BaseOfData\", h.BaseOfData),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU4Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU4Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU4Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU4Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU4Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction fillOptionalHeader64Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader64): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU8Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU8Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU8Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU8Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU8Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction generateDataDirectories(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.DATA_DIRECTORIES,\r\n        elemID: W.KnownElemID.DATA_DIRECTORIES,\r\n    };\r\n\r\n    const h = pe.getDataDirectories();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] ${F.ImageDirectoryEntry[i] || \"\"}`,\r\n        items: [\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"Size\", v.Size, true),\r\n        ]\r\n    } as W.SimpleStruct));\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSectionHeaders(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.SECTION_HEADERS,\r\n        elemID: W.KnownElemID.SECTION_HEADERS,\r\n    };\r\n\r\n    const h = pe.getSectionHeaders();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] (${v.Name.value})`,\r\n        items: [\r\n            FM.formatStringField(\"Name\", v.Name),\r\n            FM.formatU4Field(\"VirtualSize\", v.VirtualSize, true),\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"SizeOfRawData\", v.SizeOfRawData, true),\r\n            FM.formatU4Field(\"PointerToRawData\", v.PointerToRawData),\r\n            FM.formatU4Field(\"PointerToRelocations\", v.PointerToRelocations),\r\n            FM.formatU4Field(\"PointerToLinenumbers\", v.PointerToLinenumbers),\r\n            FM.formatU2Field(\"NumberOfRelocations\", v.NumberOfRelocations, true),\r\n            FM.formatU2Field(\"NumberOfLinenumbers\", v.NumberOfLinenumbers, true),\r\n            FM.formatU4Field(\"Characteristics\", v.Characteristics),\r\n        ]\r\n    } as W.GroupedStruct));\r\n\r\n    return s;\r\n}\r\n","import { PEImage } from \"../pe/image\";\r\nimport { generateHeadersPageData } from \"./headers\";\r\n\r\nexport function generatePageData(pe: PEImage, pageID: W.PageID): W.PageData {\r\n    switch (pageID) {\r\n        case W.PageID.HEADERS: return generateHeadersPageData(pe);\r\n        default: return { nav: { pageID: W.PageID.NOTFOUND, title: W.KnownTitle.NOTFOUND } };\r\n    }\r\n}","export const enum PEErrorType {\r\n    INVALID_DATA_POSITION = \"INVALID_DATA_POSITION\",\r\n    INVALID_DOS_SIGNATURE = \"INVALID_DOS_SIGNATURE\",\r\n    INVALID_PE_SIGNATURE = \"INVALID_PE_SIGNATURE\",\r\n    INVALID_OPTIONAL_HEADER_MAGIC = \"INVALID_OPTIONAL_HEADER_MAGIC\",\r\n    INVALID_DATA_DIRECTORY_COUNT = \"INVALID_DATA_DIRECTORY_COUNT\",\r\n}\r\n\r\nexport class PEError extends Error {\r\n    constructor(\r\n        public type: PEErrorType,\r\n        public offset?: number,\r\n        public size?: number\r\n    ) {\r\n        super(type);\r\n    }\r\n}\r\n","import * as S from \"./structures\";\r\nimport * as F from \"./image-flags\";\r\n\r\nexport interface FileDataProvider {\r\n    getU1(p: number): number;\r\n    getU2(p: number): number;\r\n    getU4(p: number): number;\r\n    getData(p: number, sz: number): Uint8Array;\r\n}\r\n\r\n//\r\n// Basic structures.\r\n//\r\n\r\nexport function loadU1Field(d: FileDataProvider, p: number): S.U1Field {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p)\r\n    };\r\n}\r\n\r\nexport function loadU2Field(d: FileDataProvider, p: number): S.U2Field {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p)\r\n    };\r\n}\r\n\r\nexport function loadU4Field(d: FileDataProvider, p: number): S.U4Field {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p)\r\n    };\r\n}\r\n\r\nexport function loadU8Field(d: FileDataProvider, p: number): S.U8Field {\r\n    const low = d.getU4(p);\r\n    const high = d.getU4(p + 4);\r\n\r\n    return {\r\n        _offset: p, _size: 8, data: d.getData(p, 8), low, high\r\n    };\r\n}\r\n\r\nexport function loadU1EnumField<T>(d: FileDataProvider, p: number): S.U1EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU2EnumField<T>(d: FileDataProvider, p: number): S.U2EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU4EnumField<T>(d: FileDataProvider, p: number): S.U4EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeByteArray(d: FileDataProvider, p: number, sz: number): S.Field {\r\n    return {\r\n        _offset: p, _size: sz, data: d.getData(p, sz)\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeAsciiStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const value = String.fromCharCode.apply(null, Array.from(data).filter(v => v != 0));\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadStructArrayByCount<T extends S.FileData>(\r\n    d: FileDataProvider,\r\n    p: number,\r\n    loader: (d: FileDataProvider, p: number) => T,\r\n    count: number): S.StructArray<T> {\r\n\r\n    let items: T[] = [];\r\n    let ptr = p;\r\n    for (let i = 0; i < count; i++) {\r\n        const s = loader(d, ptr);\r\n        items.push(s);\r\n        ptr += s._size;\r\n    }\r\n\r\n    return { _offset: p, _size: ptr - p, items };\r\n}\r\n\r\n//\r\n// Image headers.\r\n//\r\n\r\nexport function loadImageDosHeader(d: FileDataProvider, p: number): S.ImageDosHeader {\r\n    let ptr = p;\r\n\r\n    const e_magic = loadU2Field(d, ptr);\r\n    ptr += e_magic._size;\r\n\r\n    const e_cblp = loadU2Field(d, ptr);\r\n    ptr += e_cblp._size;\r\n\r\n    const e_cp = loadU2Field(d, ptr);\r\n    ptr += e_cp._size;\r\n\r\n    const e_crlc = loadU2Field(d, ptr);\r\n    ptr += e_crlc._size;\r\n\r\n    const e_cparhdr = loadU2Field(d, ptr);\r\n    ptr += e_cparhdr._size;\r\n\r\n    const e_minalloc = loadU2Field(d, ptr);\r\n    ptr += e_minalloc._size;\r\n\r\n    const e_maxalloc = loadU2Field(d, ptr);\r\n    ptr += e_maxalloc._size;\r\n\r\n    const e_ss = loadU2Field(d, ptr);\r\n    ptr += e_ss._size;\r\n\r\n    const e_sp = loadU2Field(d, ptr);\r\n    ptr += e_sp._size;\r\n\r\n    const e_csum = loadU2Field(d, ptr);\r\n    ptr += e_csum._size;\r\n\r\n    const e_ip = loadU2Field(d, ptr);\r\n    ptr += e_ip._size;\r\n\r\n    const e_cs = loadU2Field(d, ptr);\r\n    ptr += e_cs._size;\r\n\r\n    const e_lfarlc = loadU2Field(d, ptr);\r\n    ptr += e_lfarlc._size;\r\n\r\n    const e_ovno = loadU2Field(d, ptr);\r\n    ptr += e_ovno._size;\r\n\r\n    const e_res = loadFixedSizeByteArray(d, ptr, 4 * 2);\r\n    ptr += e_res._size;\r\n\r\n    const e_oemid = loadU2Field(d, ptr);\r\n    ptr += e_oemid._size;\r\n\r\n    const e_oeminfo = loadU2Field(d, ptr);\r\n    ptr += e_oeminfo._size;\r\n\r\n    const e_res2 = loadFixedSizeByteArray(d, ptr, 10 * 2);\r\n    ptr += e_res2._size;\r\n\r\n    const e_lfanew = loadU4Field(d, ptr);\r\n    ptr += e_lfanew._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        e_magic,\r\n        e_cblp,\r\n        e_cp,\r\n        e_crlc,\r\n        e_cparhdr,\r\n        e_minalloc,\r\n        e_maxalloc,\r\n        e_ss,\r\n        e_sp,\r\n        e_csum,\r\n        e_ip,\r\n        e_cs,\r\n        e_lfarlc,\r\n        e_ovno,\r\n        e_res,\r\n        e_oemid,\r\n        e_oeminfo,\r\n        e_res2,\r\n        e_lfanew,\r\n    };\r\n}\r\n\r\nexport function loadImageFileHeader(d: FileDataProvider, p: number): S.ImageFileHeader {\r\n    let ptr = p;\r\n\r\n    const Machine = loadU2Field(d, ptr);\r\n    ptr += Machine._size;\r\n\r\n    const NumberOfSections = loadU2Field(d, ptr);\r\n    ptr += NumberOfSections._size;\r\n\r\n    const TimeDateStamp = loadU4Field(d, ptr);\r\n    ptr += TimeDateStamp._size;\r\n\r\n    const PointerToSymbolTable = loadU4Field(d, ptr);\r\n    ptr += PointerToSymbolTable._size;\r\n\r\n    const NumberOfSymbols = loadU4Field(d, ptr);\r\n    ptr += NumberOfSymbols._size;\r\n\r\n    const SizeOfOptionalHeader = loadU2Field(d, ptr);\r\n    ptr += SizeOfOptionalHeader._size;\r\n\r\n    const Characteristics = loadU2EnumField<F.ImageFile>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Machine,\r\n        NumberOfSections,\r\n        TimeDateStamp,\r\n        PointerToSymbolTable,\r\n        NumberOfSymbols,\r\n        SizeOfOptionalHeader,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader32(d: FileDataProvider, p: number): S.ImageOptionalHeader32 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const BaseOfData = loadU4Field(d, ptr);\r\n    ptr += BaseOfData._size;\r\n\r\n    const ImageBase = loadU4Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        BaseOfData,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader64(d: FileDataProvider, p: number): S.ImageOptionalHeader64 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const ImageBase = loadU8Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageDataDirectory(d: FileDataProvider, p: number): S.ImageDataDirectory {\r\n    let ptr = p;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        VirtualAddress,\r\n        Size,\r\n    };\r\n}\r\n\r\nexport function loadImageSectionHeader(d: FileDataProvider, p: number): S.ImageSectionHeader {\r\n    let ptr = p;\r\n\r\n    const Name = loadFixedSizeAsciiStringField(d, ptr, 8);\r\n    ptr += Name._size;\r\n\r\n    const VirtualSize = loadU4Field(d, ptr);\r\n    ptr += VirtualSize._size;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const SizeOfRawData = loadU4Field(d, ptr);\r\n    ptr += SizeOfRawData._size;\r\n\r\n    const PointerToRawData = loadU4Field(d, ptr);\r\n    ptr += PointerToRawData._size;\r\n\r\n    const PointerToRelocations = loadU4Field(d, ptr);\r\n    ptr += PointerToRelocations._size;\r\n\r\n    const PointerToLinenumbers = loadU4Field(d, ptr);\r\n    ptr += PointerToLinenumbers._size;\r\n\r\n    const NumberOfRelocations = loadU2Field(d, ptr);\r\n    ptr += NumberOfRelocations._size;\r\n\r\n    const NumberOfLinenumbers = loadU2Field(d, ptr);\r\n    ptr += NumberOfLinenumbers._size;\r\n\r\n    const Characteristics = loadU4EnumField<F.ImageSection>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Name,\r\n        VirtualSize,\r\n        VirtualAddress,\r\n        SizeOfRawData,\r\n        PointerToRawData,\r\n        PointerToRelocations,\r\n        PointerToLinenumbers,\r\n        NumberOfRelocations,\r\n        NumberOfLinenumbers,\r\n        Characteristics,\r\n    };\r\n}","import * as S from \"./structures\";\r\nimport * as L from \"./loader\";\r\nimport * as F from \"./image-flags\";\r\nimport * as E from \"./error\";\r\n\r\nexport class PEImage implements L.FileDataProvider {\r\n    public static load(buf: ArrayBuffer): PEImage {\r\n        return new PEImage(buf);\r\n    }\r\n\r\n    public getU1(p: number): number {\r\n        this.check(p, 1);\r\n        return this.data.getUint8(p);\r\n    }\r\n\r\n    public getU2(p: number): number {\r\n        this.check(p, 2);\r\n        return this.data.getUint16(p, true);\r\n    }\r\n\r\n    public getU4(p: number): number {\r\n        this.check(p, 3);\r\n        return this.data.getUint32(p, true);\r\n    }\r\n\r\n    public getData(p: number, sz: number): Uint8Array {\r\n        this.check(p, sz);\r\n        return new Uint8Array(this.data.buffer.slice(p, p + sz));\r\n    }\r\n\r\n    public is32Bit(): boolean | undefined {\r\n        const optHdr = this.getOptionalHeader();\r\n        if (optHdr == null) {\r\n            return undefined;\r\n        }\r\n\r\n        switch (optHdr.Magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC: return true;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC: return false;\r\n            default: return undefined;\r\n        }\r\n    }\r\n\r\n    public isManaged(): boolean | undefined {\r\n        const dd = this.getDataDirectories();\r\n        if (dd == null) {\r\n            return undefined;\r\n        }\r\n\r\n        const ddCom = dd.items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR];\r\n        return ddCom && ddCom.VirtualAddress.value > 0 && ddCom.Size.value > 0;\r\n    }\r\n\r\n    public getDosHeader(): S.ImageDosHeader | undefined {\r\n        return this.dosHeader;\r\n    }\r\n\r\n    public getPESignature(): S.U4Field | undefined {\r\n        return this.peSignature;\r\n    }\r\n\r\n    public getFileHeader(): S.ImageFileHeader | undefined {\r\n        return this.fileHeader;\r\n    }\r\n\r\n    public getOptionalHeader(): S.ImageOptionalHeader32 | S.ImageOptionalHeader64 | undefined {\r\n        return this.optionalHeader;\r\n    }\r\n\r\n    public getDataDirectories(): S.StructArray<S.ImageDataDirectory> | undefined {\r\n        return this.dataDirectories;\r\n    }\r\n\r\n    public getSectionHeaders(): S.StructArray<S.ImageSectionHeader> | undefined {\r\n        return this.sectionHeaders;\r\n    }\r\n\r\n    private check(p: number, sz: number): void {\r\n        if (p < 0 || p >= this.data.byteLength\r\n            || sz < 0 || p + sz > this.data.byteLength) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_POSITION, p, sz);\r\n        }\r\n    }\r\n\r\n    private constructor(buf: ArrayBuffer) {\r\n        this.data = new DataView(buf);\r\n        this.loadHeaders();\r\n    }\r\n\r\n    private loadHeaders(): void {\r\n        let ptr = 0;\r\n        this.dosHeader = L.loadImageDosHeader(this, ptr);\r\n\r\n        if (this.dosHeader.e_magic.value != F.IMAGE_DOS_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DOS_SIGNATURE, ptr, 2);\r\n        }\r\n\r\n        ptr = this.dosHeader.e_lfanew.value;\r\n        this.peSignature = L.loadU4Field(this, ptr);\r\n\r\n        if (this.peSignature.value != F.IMAGE_NT_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_PE_SIGNATURE, ptr, 4);\r\n        }\r\n\r\n        ptr += this.peSignature._size;\r\n        this.fileHeader = L.loadImageFileHeader(this, ptr);\r\n\r\n        ptr += this.fileHeader._size;\r\n        const magic = L.loadU2Field(this, ptr);\r\n        switch (magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader32(this, ptr);\r\n                break;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader64(this, ptr);\r\n                break;\r\n            default:\r\n                throw new E.PEError(E.PEErrorType.INVALID_OPTIONAL_HEADER_MAGIC, ptr, 2);\r\n        }\r\n\r\n        if (this.optionalHeader.NumberOfRvaAndSizes.value != F.IMAGE_NUMBEROF_DIRECTORY_ENTRIES) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_DIRECTORY_COUNT,\r\n                this.optionalHeader.NumberOfRvaAndSizes._offset,\r\n                this.optionalHeader.NumberOfRvaAndSizes._size);\r\n        }\r\n\r\n        ptr += this.optionalHeader._size;\r\n        this.dataDirectories = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageDataDirectory,\r\n            this.optionalHeader.NumberOfRvaAndSizes.value);\r\n\r\n        ptr += this.dataDirectories._size;\r\n        this.sectionHeaders = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageSectionHeader,\r\n            this.fileHeader.NumberOfSections.value);\r\n    }\r\n\r\n    private readonly data: DataView;\r\n\r\n    private dosHeader?: S.ImageDosHeader;\r\n    private peSignature?: S.U4Field;\r\n    private fileHeader?: S.ImageFileHeader;\r\n    private optionalHeader?: S.ImageOptionalHeader32 | S.ImageOptionalHeader64;\r\n    private dataDirectories?: S.StructArray<S.ImageDataDirectory>;\r\n    private sectionHeaders?: S.StructArray<S.ImageSectionHeader>;\r\n}\r\n","export function createResNavDataMessage(navList: W.NavData[]): W.ResNavDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_NAV_DATA,\r\n        navList\r\n    };\r\n}\r\n\r\nexport function createResPageDataMessage(pageData: W.PageData): W.ResPageDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PAGE_DATA,\r\n        pageData\r\n    };\r\n}\r\n\r\nexport function createResPEPropsMessage(is32Bit?: boolean, isManaged?: boolean): W.ResPEPropsMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_PROPS,\r\n        is32Bit,\r\n        isManaged\r\n    };\r\n}\r\n\r\nexport function createResPEErrorMessage(error: string): W.ResPEErrorMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_ERROR,\r\n        error\r\n    };\r\n}\r\n","import * as M from \"./message\";\r\nimport { PEImage } from \"./pe/image\";\r\nimport { generatePageData } from \"./page-data/generator\";\r\nimport { generateNavList } from \"./page-data/nav-data\";\r\n\r\nlet pe: PEImage | null = null;\r\n\r\nonmessage = (ev) => {\r\n    const msg = ev.data as W.WorkerMessage;\r\n    switch (msg.type) {\r\n        case W.WorkerMessageType.REQ_OPEN_FILE:\r\n            handleReqOpenFile(msg as W.ReqOpenFileMessage);\r\n            break;\r\n    }\r\n};\r\n\r\nfunction handleReqOpenFile(msg: W.ReqOpenFileMessage): void {\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = ev => {\r\n        try {\r\n            const buf = <ArrayBuffer>(<FileReader>ev.target).result;\r\n            pe = PEImage.load(buf);\r\n\r\n            // Response with page data.\r\n            const pageData = generatePageData(pe, W.PageID.HEADERS);\r\n            const pageDataMsg = M.createResPageDataMessage(pageData);\r\n            postMessage(pageDataMsg);\r\n\r\n            // Response with PE properties.\r\n            const is32Bit = pe.is32Bit();\r\n            const isManaged = pe.isManaged();\r\n            const pePropsMsg = M.createResPEPropsMessage(is32Bit, isManaged);\r\n            postMessage(pePropsMsg);\r\n\r\n            // Response with navigation data.\r\n            const navList = generateNavList(pe);\r\n            const navMsg = M.createResNavDataMessage(navList);\r\n            postMessage(navMsg);\r\n        } catch (ex) {\r\n            const msg = M.createResPEErrorMessage(ex.message\r\n                || `Unknown error: ${JSON.stringify(ex)}`);\r\n            postMessage(msg);\r\n        }\r\n    };\r\n\r\n    reader.onerror = ev => {\r\n        pe = null;\r\n        const msg = M.createResPEErrorMessage(\"Can't open file.\");\r\n        postMessage(msg);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(msg.file);\r\n}\r\n"],"sourceRoot":""}