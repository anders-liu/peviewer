{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker/page-data/formatter.ts","webpack:///./src/worker/page-data/headers.ts","webpack:///./src/worker/page-data/generator.ts","webpack:///./src/worker/pe/error.ts","webpack:///./src/worker/pe/image-flags.ts","webpack:///./src/worker/pe/loader.ts","webpack:///./src/worker/pe/image.ts","webpack:///./src/worker/message.ts","webpack:///./src/worker/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","formatU1RawHex","padZeroLeft","toString","toUpperCase","formatU2RawHex","formatU4RawHex","formatU1Hex","formatU2Hex","formatU4Hex","formatHexDec","formatBytes","bytes","lineWidth","lines","start","length","line","Array","from","subarray","map","b","join","push","str","len","repeat","formatUIntField","f","sz","showDec","hex","offset","_offset","size","_size","rawData","data","formatStructTitle","title","formatU1Field","formatU2Field","formatU4Field","formatU8Field","high","low","formatBytesField","FM","generateHeadersPageData","pe","id","dosHeader","elemID","h","getDosHeader","items","e_magic","e_cblp","e_cp","e_crlc","e_cparhdr","e_minalloc","e_maxalloc","e_ss","e_sp","e_csum","e_ip","e_cs","e_lfarlc","e_ovno","e_res","e_oemid","e_oeminfo","e_res2","e_lfanew","generateDosHeader","peSignature","getPESignature","generatePESignature","fileHeader","optionalHeader","sectionHeaders","headers_1","generatePageData","pageID","PEError","_super","type","_this","this","__extends","Error","IMAGE_DOS_SIGNATURE","IMAGE_NT_SIGNATURE","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_OPTIONAL_HDR64_MAGIC","ImageFile","ImageFileMachine","ImageSubsystem","ImageDllCharacteristics","ImageDirectoryEntry","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","ImageSection","loadU1Field","getData","getU1","loadU2Field","getU2","loadU4Field","getU4","loadU8Field","loadU2EnumField","loadU4EnumField","loadFixedSizeByteArray","loadFixedSizeAsciiStringField","String","fromCharCode","apply","loadU1EnumField","loadStructArrayByCount","loader","count","ptr","loadImageDosHeader","loadImageFileHeader","Machine","NumberOfSections","TimeDateStamp","PointerToSymbolTable","NumberOfSymbols","SizeOfOptionalHeader","Characteristics","loadImageOptionalHeader32","Magic","MajorLinkerVersion","MinorLinkerVersion","SizeOfCode","SizeOfInitializedData","SizeOfUninitializedData","AddressOfEntryPoint","BaseOfCode","BaseOfData","ImageBase","SectionAlignment","FileAlignment","MajorOperatingSystemVersion","MinorOperatingSystemVersion","MajorImageVersion","MinorImageVersion","MajorSubsystemVersion","MinorSubsystemVersion","Win32VersionValue","SizeOfImage","SizeOfHeaders","CheckSum","Subsystem","DllCharacteristics","SizeOfStackReserve","SizeOfStackCommit","SizeOfHeapReserve","SizeOfHeapCommit","LoaderFlags","NumberOfRvaAndSizes","loadImageOptionalHeader64","loadImageDataDirectory","VirtualAddress","Size","loadImageSectionHeader","Name","VirtualSize","SizeOfRawData","PointerToRawData","PointerToRelocations","PointerToLinenumbers","NumberOfRelocations","NumberOfLinenumbers","L","F","E","PEImage","buf","DataView","loadHeaders","load","check","getUint8","getUint16","getUint32","Uint8Array","buffer","slice","getFileHeader","getOptionalHeader","getDataDirectories","dataDirectories","getSectionHeaders","byteLength","createResNavDataMessage","navList","createResPageDataMessage","pageData","createResPEErrorMessage","error","M","image_1","generator_1","onmessage","ev","msg","reader","FileReader","onload","target","result","msg_1","postMessage","ex","msg_2","message","JSON","stringify","onerror","readAsArrayBuffer","file","handleReqOpenFile"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import * as S from \"../pe/structures\";\r\nimport { format } from \"url\";\r\n\r\nexport function formatU1RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 2);\r\n}\r\n\r\nexport function formatU2RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 4);\r\n}\r\n\r\nexport function formatU4RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 8);\r\n}\r\n\r\nexport function formatU1Hex(d: number): string {\r\n    return `${formatU1RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU2Hex(d: number): string {\r\n    return `${formatU2RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU4Hex(d: number): string {\r\n    return `${formatU4RawHex(d)}h`;\r\n}\r\n\r\nexport function formatHexDec(d: number): string {\r\n    return `${d.toString(16).toUpperCase()}h (${d})`;\r\n}\r\n\r\nexport function formatBytes(bytes: Uint8Array, lineWidth: number = 16): string[] {\r\n    let lines: string[] = [];\r\n    for (let start = 0; start < bytes.length; start += lineWidth) {\r\n        const line = Array.from(bytes.subarray(start, start + lineWidth))\r\n            .map(b => formatU1RawHex(b)).join(\"-\");\r\n        lines.push(line);\r\n    }\r\n    return lines;\r\n}\r\n\r\nexport function formatStructTitle(s: S.FileData, title: string): string {\r\n    return `${title} [${formatU4Hex(s._offset)} - ${formatU4Hex(s._offset + s._size)} : ${formatHexDec(s._size)}]`;\r\n}\r\n\r\nexport function formatU1Field(name: string, f: S.U1Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 1, showDec);\r\n}\r\n\r\nexport function formatU2Field(name: string, f: S.U2Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 2, showDec);\r\n}\r\n\r\nexport function formatU4Field(name: string, f: S.U4Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 4, showDec);\r\n}\r\n\r\nexport function formatU8Field(name: string, f: S.U8Field): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: `${formatU4RawHex(f.high)} ${formatU4Hex(f.low)}`,\r\n    }\r\n}\r\n\r\nexport function formatBytesField(name: string, f: S.Field): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: \"\",\r\n    }\r\n}\r\n\r\nfunction padZeroLeft(str: string, len: number): string {\r\n    if (str.length < len) {\r\n        return \"0\".repeat(len - str.length) + str;\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n\r\nfunction formatUIntField(name: string, f: S.UIntField, sz: number, showDec?: boolean): W.StructItem {\r\n    let hex: string;\r\n    switch (sz) {\r\n        case 1: hex = formatU1Hex(f.value); break;\r\n        case 2: hex = formatU2Hex(f.value); break;\r\n        case 4: hex = formatU4Hex(f.value); break;\r\n        default: hex = f.value.toString(16).toUpperCase(); break;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: showDec ? `${hex} (${f.value})` : hex,\r\n    }\r\n}\r\n","import { PEImage } from \"../pe/image\";\r\nimport * as FM from \"./formatter\";\r\nimport { Z_UNKNOWN } from \"zlib\";\r\n\r\nexport function generateHeadersPageData(pe: PEImage): W.HeadersPageData {\r\n    return {\r\n        id: W.PageID.HEADERS,\r\n        title: \"Headers\",\r\n        dosHeader: generateDosHeader(pe),\r\n        peSignature: generatePESignature(pe),\r\n        fileHeader: generateFileHeader(pe),\r\n        optionalHeader: generateOptionalHeader(pe),\r\n        sectionHeaders: generateSectionHeaders(pe),\r\n    };\r\n}\r\n\r\nfunction generateDosHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: \"DOS Header\",\r\n        elemID: W.KnownElemID.DOS_HEADER,\r\n    };\r\n\r\n    const h = pe.getDosHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"e_magic\", h.e_magic),\r\n        FM.formatU2Field(\"e_cblp\", h.e_cblp),\r\n        FM.formatU2Field(\"e_cp\", h.e_cp),\r\n        FM.formatU2Field(\"e_crlc\", h.e_crlc),\r\n        FM.formatU2Field(\"e_cparhdr\", h.e_cparhdr),\r\n        FM.formatU2Field(\"e_minalloc\", h.e_minalloc),\r\n        FM.formatU2Field(\"e_maxalloc\", h.e_maxalloc),\r\n        FM.formatU2Field(\"e_ss\", h.e_ss),\r\n        FM.formatU2Field(\"e_sp\", h.e_sp),\r\n        FM.formatU2Field(\"e_csum\", h.e_csum),\r\n        FM.formatU2Field(\"e_ip\", h.e_ip),\r\n        FM.formatU2Field(\"e_cs\", h.e_cs),\r\n        FM.formatU2Field(\"e_lfarlc\", h.e_lfarlc),\r\n        FM.formatU2Field(\"e_ovno\", h.e_ovno),\r\n        FM.formatBytesField(\"e_res\", h.e_res),\r\n        FM.formatU2Field(\"e_oemid\", h.e_oemid),\r\n        FM.formatU2Field(\"e_oeminfo\", h.e_oeminfo),\r\n        FM.formatBytesField(\"e_res2\", h.e_res2),\r\n        FM.formatU4Field(\"e_lfanew\", h.e_lfanew),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generatePESignature(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: \"PE Signature\",\r\n        elemID: W.KnownElemID.PE_SIGNATURE,\r\n    };\r\n\r\n    const h = pe.getPESignature();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"PE Signature\", h),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateFileHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: \"File Header\",\r\n        elemID: W.KnownElemID.FILE_HEADER,\r\n    };\r\n\r\n    // TODO\r\n    return s;\r\n}\r\n\r\nfunction generateOptionalHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: \"Optional Header\",\r\n        elemID: W.KnownElemID.OPTIONAL_HEADER,\r\n    };\r\n\r\n    // TODO\r\n    return s;\r\n}\r\n\r\nfunction generateSectionHeaders(pe: PEImage): W.GroupedStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: \"Section headers\",\r\n        elemID: W.KnownElemID.SECTION_HEADERS,\r\n    };\r\n\r\n    // TODO\r\n    return s;\r\n}\r\n","import { PEImage } from \"../pe/image\";\r\nimport { generateHeadersPageData } from \"./headers\";\r\n\r\nexport function generatePageData(pe: PEImage, pageID: W.PageID): W.PageData {\r\n    switch (pageID) {\r\n        case W.PageID.HEADERS: return generateHeadersPageData(pe);\r\n        default: return { id: W.PageID.NOTFOUND, title: \"Page Not Found\" };\r\n    }\r\n}","export const enum PEErrorType {\r\n    INVALID_DATA_POSITION = \"INVALID_DATA_POSITION\",\r\n    INVALID_DOS_SIGNATURE = \"INVALID_DOS_SIGNATURE\",\r\n    INVALID_PE_SIGNATURE = \"INVALID_PE_SIGNATURE\",\r\n    INVALID_OPTIONAL_HEADER_MAGIC = \"INVALID_OPTIONAL_HEADER_MAGIC\",\r\n    INVALID_DATA_DIRECTORY_COUNT = \"INVALID_DATA_DIRECTORY_COUNT\",\r\n}\r\n\r\nexport class PEError extends Error {\r\n    constructor(\r\n        public type: PEErrorType,\r\n        public offset?: number,\r\n        public size?: number\r\n    ) {\r\n        super(type);\r\n    }\r\n}\r\n","export const IMAGE_DOS_SIGNATURE = 0x5A4D;  // MZ\r\n\r\nexport const IMAGE_NT_SIGNATURE = 0x00004550;  // PE00\r\n\r\nexport const IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\r\nexport const IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\r\n\r\nexport enum ImageFile {\r\n    IMAGE_FILE_RELOCS_STRIPPED = 0x0001,\r\n    IMAGE_FILE_EXECUTABLE_IMAGE = 0x0002,\r\n    IMAGE_FILE_LINE_NUMS_STRIPPED = 0x0004,\r\n    IMAGE_FILE_LOCAL_SYMS_STRIPPED = 0x0008,\r\n    IMAGE_FILE_AGGRESIVE_WS_TRIM = 0x0010,\r\n    IMAGE_FILE_LARGE_ADDRESS_AWARE = 0x0020,\r\n    IMAGE_FILE_BYTES_REVERSED_LO = 0x0080,\r\n    IMAGE_FILE_32BIT_MACHINE = 0x0100,\r\n    IMAGE_FILE_DEBUG_STRIPPED = 0x0200,\r\n    IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 0x0400,\r\n    IMAGE_FILE_NET_RUN_FROM_SWAP = 0x0800,\r\n    IMAGE_FILE_SYSTEM = 0x1000,\r\n    IMAGE_FILE_DLL = 0x2000,\r\n    IMAGE_FILE_UP_SYSTEM_ONLY = 0x4000,\r\n    IMAGE_FILE_BYTES_REVERSED_HI = 0x8000,\r\n}\r\n\r\nexport enum ImageFileMachine {\r\n    IMAGE_FILE_MACHINE_UNKNOWN = 0,\r\n    IMAGE_FILE_MACHINE_TARGET_HOST = 0x0001,\r\n    IMAGE_FILE_MACHINE_I386 = 0x014c,\r\n    IMAGE_FILE_MACHINE_R3000 = 0x0162,\r\n    IMAGE_FILE_MACHINE_R4000 = 0x0166,\r\n    IMAGE_FILE_MACHINE_R10000 = 0x0168,\r\n    IMAGE_FILE_MACHINE_WCEMIPSV2 = 0x0169,\r\n    IMAGE_FILE_MACHINE_ALPHA = 0x0184,\r\n    IMAGE_FILE_MACHINE_SH3 = 0x01a2,\r\n    IMAGE_FILE_MACHINE_SH3DSP = 0x01a3,\r\n    IMAGE_FILE_MACHINE_SH3E = 0x01a4,\r\n    IMAGE_FILE_MACHINE_SH4 = 0x01a6,\r\n    IMAGE_FILE_MACHINE_SH5 = 0x01a8,\r\n    IMAGE_FILE_MACHINE_ARM = 0x01c0,\r\n    IMAGE_FILE_MACHINE_THUMB = 0x01c2,\r\n    IMAGE_FILE_MACHINE_ARMNT = 0x01c4,\r\n    IMAGE_FILE_MACHINE_AM33 = 0x01d3,\r\n    IMAGE_FILE_MACHINE_POWERPC = 0x01F0,\r\n    IMAGE_FILE_MACHINE_POWERPCFP = 0x01f1,\r\n    IMAGE_FILE_MACHINE_IA64 = 0x0200,\r\n    IMAGE_FILE_MACHINE_MIPS16 = 0x0266,\r\n    IMAGE_FILE_MACHINE_ALPHA64 = 0x0284,\r\n    IMAGE_FILE_MACHINE_MIPSFPU = 0x0366,\r\n    IMAGE_FILE_MACHINE_MIPSFPU16 = 0x0466,\r\n    IMAGE_FILE_MACHINE_AXP64 = IMAGE_FILE_MACHINE_ALPHA64,\r\n    IMAGE_FILE_MACHINE_TRICORE = 0x0520,\r\n    IMAGE_FILE_MACHINE_CEF = 0x0CEF,\r\n    IMAGE_FILE_MACHINE_EBC = 0x0EBC,\r\n    IMAGE_FILE_MACHINE_AMD64 = 0x8664,\r\n    IMAGE_FILE_MACHINE_M32R = 0x9041,\r\n    IMAGE_FILE_MACHINE_ARM64 = 0xAA64,\r\n    IMAGE_FILE_MACHINE_CEE = 0xC0EE,\r\n}\r\n\r\nexport enum ImageSubsystem {\r\n    IMAGE_SUBSYSTEM_UNKNOWN = 0,\r\n    IMAGE_SUBSYSTEM_NATIVE = 1,\r\n    IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,\r\n    IMAGE_SUBSYSTEM_OS2_CUI = 5,\r\n    IMAGE_SUBSYSTEM_POSIX_CUI = 7,\r\n    IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9,\r\n    IMAGE_SUBSYSTEM_EFI_APPLICATION = 10,\r\n    IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11,\r\n    IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12,\r\n    IMAGE_SUBSYSTEM_EFI_ROM = 13,\r\n    IMAGE_SUBSYSTEM_XBOX = 14,\r\n    IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16,\r\n    IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 17,\r\n}\r\n\r\nexport enum ImageDllCharacteristics {\r\n    IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020,\r\n    IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 0x0040,\r\n    IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 0x0080,\r\n    IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 0x0100,\r\n    IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 0x0200,\r\n    IMAGE_DLLCHARACTERISTICS_NO_SEH = 0x0400,\r\n    IMAGE_DLLCHARACTERISTICS_NO_BIND = 0x0800,\r\n    IMAGE_DLLCHARACTERISTICS_APPCONTAINER = 0x1000,\r\n    IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 0x2000,\r\n    IMAGE_DLLCHARACTERISTICS_GUARD_CF = 0x4000,\r\n    IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 0x8000,\r\n}\r\n\r\nexport enum ImageDirectoryEntry {\r\n    IMAGE_DIRECTORY_ENTRY_EXPORT = 0,\r\n    IMAGE_DIRECTORY_ENTRY_IMPORT = 1,\r\n    IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,\r\n    IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,\r\n    IMAGE_DIRECTORY_ENTRY_SECURITY = 4,\r\n    IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,\r\n    IMAGE_DIRECTORY_ENTRY_DEBUG = 6,\r\n    IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7,\r\n    IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,\r\n    IMAGE_DIRECTORY_ENTRY_TLS = 9,\r\n    IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,\r\n    IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,\r\n    IMAGE_DIRECTORY_ENTRY_IAT = 12,\r\n    IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13,\r\n    IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14,\r\n}\r\n\r\nexport const IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16;\r\n\r\nexport enum ImageSection {\r\n    IMAGE_SCN_TYPE_NO_PAD = 0x00000008,\r\n\r\n    IMAGE_SCN_CNT_CODE = 0x00000020,\r\n    IMAGE_SCN_CNT_INITIALIZED_DATA = 0x00000040,\r\n    IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x00000080,\r\n\r\n    IMAGE_SCN_LNK_OTHER = 0x00000100,\r\n    IMAGE_SCN_LNK_INFO = 0x00000200,\r\n    IMAGE_SCN_LNK_REMOVE = 0x00000800,\r\n    IMAGE_SCN_LNK_COMDAT = 0x00001000,\r\n\r\n    IMAGE_SCN_NO_DEFER_SPEC_EXC = 0x00004000,\r\n    IMAGE_SCN_GPREL = 0x00008000,\r\n\r\n    IMAGE_SCN_MEM_PURGEABLE = 0x00020000,\r\n    IMAGE_SCN_MEM_16BIT = 0x00020000,\r\n    IMAGE_SCN_MEM_LOCKED = 0x00040000,\r\n    IMAGE_SCN_MEM_PRELOAD = 0x00080000,\r\n\r\n    IMAGE_SCN_ALIGN_1BYTES = 0x00100000,\r\n    IMAGE_SCN_ALIGN_2BYTES = 0x00200000,\r\n    IMAGE_SCN_ALIGN_4BYTES = 0x00300000,\r\n    IMAGE_SCN_ALIGN_8BYTES = 0x00400000,\r\n    IMAGE_SCN_ALIGN_16BYTES = 0x00500000,\r\n    IMAGE_SCN_ALIGN_32BYTES = 0x00600000,\r\n    IMAGE_SCN_ALIGN_64BYTES = 0x00700000,\r\n    IMAGE_SCN_ALIGN_128BYTES = 0x00800000,\r\n    IMAGE_SCN_ALIGN_256BYTES = 0x00900000,\r\n    IMAGE_SCN_ALIGN_512BYTES = 0x00A00000,\r\n    IMAGE_SCN_ALIGN_1024BYTES = 0x00B00000,\r\n    IMAGE_SCN_ALIGN_2048BYTES = 0x00C00000,\r\n    IMAGE_SCN_ALIGN_4096BYTES = 0x00D00000,\r\n    IMAGE_SCN_ALIGN_8192BYTES = 0x00E00000,\r\n\r\n    IMAGE_SCN_LNK_NRELOC_OVFL = 0x01000000,\r\n    IMAGE_SCN_MEM_DISCARDABLE = 0x02000000,\r\n    IMAGE_SCN_MEM_NOT_CACHED = 0x04000000,\r\n    IMAGE_SCN_MEM_NOT_PAGED = 0x08000000,\r\n    IMAGE_SCN_MEM_SHARED = 0x10000000,\r\n    IMAGE_SCN_MEM_EXECUTE = 0x20000000,\r\n    IMAGE_SCN_MEM_READ = 0x40000000,\r\n    IMAGE_SCN_MEM_WRITE = 0x80000000,\r\n\r\n    IMAGE_SCN_SCALE_INDEX = 0x00000001,\r\n}","import * as S from \"./structures\";\r\nimport * as F from \"./image-flags\";\r\n\r\nexport interface FileDataProvider {\r\n    getU1(p: number): number;\r\n    getU2(p: number): number;\r\n    getU4(p: number): number;\r\n    getData(p: number, sz: number): Uint8Array;\r\n}\r\n\r\n//\r\n// Basic structures.\r\n//\r\n\r\nexport function loadU1Field(d: FileDataProvider, p: number): S.U1Field {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p)\r\n    };\r\n}\r\n\r\nexport function loadU2Field(d: FileDataProvider, p: number): S.U2Field {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p)\r\n    };\r\n}\r\n\r\nexport function loadU4Field(d: FileDataProvider, p: number): S.U4Field {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p)\r\n    };\r\n}\r\n\r\nexport function loadU8Field(d: FileDataProvider, p: number): S.U8Field {\r\n    const low = d.getU4(p);\r\n    const high = d.getU4(p + 4);\r\n\r\n    return {\r\n        _offset: p, _size: 8, data: d.getData(p, 8), low, high\r\n    };\r\n}\r\n\r\nexport function loadU1EnumField<T>(d: FileDataProvider, p: number): S.U1EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU2EnumField<T>(d: FileDataProvider, p: number): S.U2EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU4EnumField<T>(d: FileDataProvider, p: number): S.U4EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeByteArray(d: FileDataProvider, p: number, sz: number): S.Field {\r\n    return {\r\n        _offset: p, _size: sz, data: d.getData(p, sz)\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeAsciiStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const value = String.fromCharCode.apply(null, Array.from(data));\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadStructArrayByCount<T extends S.FileData>(\r\n    d: FileDataProvider,\r\n    p: number,\r\n    loader: (d: FileDataProvider, p: number) => T,\r\n    count: number): S.StructArray<T> {\r\n\r\n    let items: T[] = [];\r\n    let ptr = p;\r\n    for (let i = 0; i < count; i++) {\r\n        const s = loader(d, ptr);\r\n        items.push(s);\r\n        ptr += s._size;\r\n    }\r\n\r\n    return { _offset: p, _size: ptr - p, items };\r\n}\r\n\r\n//\r\n// Image headers.\r\n//\r\n\r\nexport function loadImageDosHeader(d: FileDataProvider, p: number): S.ImageDosHeader {\r\n    let ptr = p;\r\n\r\n    const e_magic = loadU2Field(d, ptr);\r\n    ptr += e_magic._size;\r\n\r\n    const e_cblp = loadU2Field(d, ptr);\r\n    ptr += e_cblp._size;\r\n\r\n    const e_cp = loadU2Field(d, ptr);\r\n    ptr += e_cp._size;\r\n\r\n    const e_crlc = loadU2Field(d, ptr);\r\n    ptr += e_crlc._size;\r\n\r\n    const e_cparhdr = loadU2Field(d, ptr);\r\n    ptr += e_cparhdr._size;\r\n\r\n    const e_minalloc = loadU2Field(d, ptr);\r\n    ptr += e_minalloc._size;\r\n\r\n    const e_maxalloc = loadU2Field(d, ptr);\r\n    ptr += e_maxalloc._size;\r\n\r\n    const e_ss = loadU2Field(d, ptr);\r\n    ptr += e_ss._size;\r\n\r\n    const e_sp = loadU2Field(d, ptr);\r\n    ptr += e_sp._size;\r\n\r\n    const e_csum = loadU2Field(d, ptr);\r\n    ptr += e_csum._size;\r\n\r\n    const e_ip = loadU2Field(d, ptr);\r\n    ptr += e_ip._size;\r\n\r\n    const e_cs = loadU2Field(d, ptr);\r\n    ptr += e_cs._size;\r\n\r\n    const e_lfarlc = loadU2Field(d, ptr);\r\n    ptr += e_lfarlc._size;\r\n\r\n    const e_ovno = loadU2Field(d, ptr);\r\n    ptr += e_ovno._size;\r\n\r\n    const e_res = loadFixedSizeByteArray(d, ptr, 4 * 2);\r\n    ptr += e_res._size;\r\n\r\n    const e_oemid = loadU2Field(d, ptr);\r\n    ptr += e_oemid._size;\r\n\r\n    const e_oeminfo = loadU2Field(d, ptr);\r\n    ptr += e_oeminfo._size;\r\n\r\n    const e_res2 = loadFixedSizeByteArray(d, ptr, 10 * 2);\r\n    ptr += e_res2._size;\r\n\r\n    const e_lfanew = loadU4Field(d, ptr);\r\n    ptr += e_lfanew._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        e_magic,\r\n        e_cblp,\r\n        e_cp,\r\n        e_crlc,\r\n        e_cparhdr,\r\n        e_minalloc,\r\n        e_maxalloc,\r\n        e_ss,\r\n        e_sp,\r\n        e_csum,\r\n        e_ip,\r\n        e_cs,\r\n        e_lfarlc,\r\n        e_ovno,\r\n        e_res,\r\n        e_oemid,\r\n        e_oeminfo,\r\n        e_res2,\r\n        e_lfanew,\r\n    };\r\n}\r\n\r\nexport function loadImageFileHeader(d: FileDataProvider, p: number): S.ImageFileHeader {\r\n    let ptr = p;\r\n\r\n    const Machine = loadU2Field(d, ptr);\r\n    ptr += Machine._size;\r\n\r\n    const NumberOfSections = loadU2Field(d, ptr);\r\n    ptr += NumberOfSections._size;\r\n\r\n    const TimeDateStamp = loadU4Field(d, ptr);\r\n    ptr += TimeDateStamp._size;\r\n\r\n    const PointerToSymbolTable = loadU4Field(d, ptr);\r\n    ptr += PointerToSymbolTable._size;\r\n\r\n    const NumberOfSymbols = loadU4Field(d, ptr);\r\n    ptr += NumberOfSymbols._size;\r\n\r\n    const SizeOfOptionalHeader = loadU2Field(d, ptr);\r\n    ptr += SizeOfOptionalHeader._size;\r\n\r\n    const Characteristics = loadU2EnumField<F.ImageFile>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Machine,\r\n        NumberOfSections,\r\n        TimeDateStamp,\r\n        PointerToSymbolTable,\r\n        NumberOfSymbols,\r\n        SizeOfOptionalHeader,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader32(d: FileDataProvider, p: number): S.ImageOptionalHeader32 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const BaseOfData = loadU4Field(d, ptr);\r\n    ptr += BaseOfData._size;\r\n\r\n    const ImageBase = loadU4Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        BaseOfData,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader64(d: FileDataProvider, p: number): S.ImageOptionalHeader64 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const ImageBase = loadU8Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageDataDirectory(d: FileDataProvider, p: number): S.ImageDataDirectory {\r\n    let ptr = p;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        VirtualAddress,\r\n        Size,\r\n    };\r\n}\r\n\r\nexport function loadImageSectionHeader(d: FileDataProvider, p: number): S.ImageSectionHeader {\r\n    let ptr = p;\r\n\r\n    const Name = loadFixedSizeAsciiStringField(d, ptr, 8);\r\n    ptr += Name._size;\r\n\r\n    const VirtualSize = loadU4Field(d, ptr);\r\n    ptr += VirtualSize._size;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const SizeOfRawData = loadU4Field(d, ptr);\r\n    ptr += SizeOfRawData._size;\r\n\r\n    const PointerToRawData = loadU4Field(d, ptr);\r\n    ptr += PointerToRawData._size;\r\n\r\n    const PointerToRelocations = loadU4Field(d, ptr);\r\n    ptr += PointerToRelocations._size;\r\n\r\n    const PointerToLinenumbers = loadU4Field(d, ptr);\r\n    ptr += PointerToLinenumbers._size;\r\n\r\n    const NumberOfRelocations = loadU2Field(d, ptr);\r\n    ptr += NumberOfRelocations._size;\r\n\r\n    const NumberOfLinenumbers = loadU2Field(d, ptr);\r\n    ptr += NumberOfLinenumbers._size;\r\n\r\n    const Characteristics = loadU4EnumField<F.ImageSection>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Name,\r\n        VirtualSize,\r\n        VirtualAddress,\r\n        SizeOfRawData,\r\n        PointerToRawData,\r\n        PointerToRelocations,\r\n        PointerToLinenumbers,\r\n        NumberOfRelocations,\r\n        NumberOfLinenumbers,\r\n        Characteristics,\r\n    };\r\n}","import * as S from \"./structures\";\r\nimport * as L from \"./loader\";\r\nimport * as F from \"./image-flags\";\r\nimport * as E from \"./error\";\r\n\r\nexport class PEImage implements L.FileDataProvider {\r\n    public static load(buf: ArrayBuffer): PEImage {\r\n        return new PEImage(buf);\r\n    }\r\n\r\n    public getU1(p: number): number {\r\n        this.check(p, 1);\r\n        return this.data.getUint8(p);\r\n    }\r\n\r\n    public getU2(p: number): number {\r\n        this.check(p, 2);\r\n        return this.data.getUint16(p, true);\r\n    }\r\n\r\n    public getU4(p: number): number {\r\n        this.check(p, 3);\r\n        return this.data.getUint32(p, true);\r\n    }\r\n\r\n    public getData(p: number, sz: number): Uint8Array {\r\n        this.check(p, sz);\r\n        return new Uint8Array(this.data.buffer.slice(p, p + sz));\r\n    }\r\n\r\n    public getDosHeader(): S.ImageDosHeader | undefined {\r\n        return this.dosHeader;\r\n    }\r\n\r\n    public getPESignature(): S.U4Field | undefined {\r\n        return this.peSignature;\r\n    }\r\n\r\n    public getFileHeader(): S.ImageFileHeader | undefined {\r\n        return this.fileHeader;\r\n    }\r\n\r\n    public getOptionalHeader(): S.ImageOptionalHeader32 | S.ImageOptionalHeader64 | undefined {\r\n        return this.optionalHeader;\r\n    }\r\n\r\n    public getDataDirectories(): S.StructArray<S.ImageDataDirectory> | undefined {\r\n        return this.dataDirectories;\r\n    }\r\n\r\n    public getSectionHeaders(): S.StructArray<S.ImageSectionHeader> | undefined {\r\n        return this.sectionHeaders;\r\n    }\r\n\r\n    private check(p: number, sz: number): void {\r\n        if (p < 0 || p >= this.data.byteLength\r\n            || sz < 0 || p + sz > this.data.byteLength) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_POSITION, p, sz);\r\n        }\r\n    }\r\n\r\n    private constructor(buf: ArrayBuffer) {\r\n        this.data = new DataView(buf);\r\n        this.loadHeaders();\r\n    }\r\n\r\n    private loadHeaders(): void {\r\n        let ptr = 0;\r\n        this.dosHeader = L.loadImageDosHeader(this, ptr);\r\n\r\n        if (this.dosHeader.e_magic.value != F.IMAGE_DOS_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DOS_SIGNATURE, ptr, 2);\r\n        }\r\n\r\n        ptr = this.dosHeader.e_lfanew.value;\r\n        this.peSignature = L.loadU4Field(this, ptr);\r\n\r\n        if (this.peSignature.value != F.IMAGE_NT_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_PE_SIGNATURE, ptr, 4);\r\n        }\r\n\r\n        ptr += this.peSignature._size;\r\n        this.fileHeader = L.loadImageFileHeader(this, ptr);\r\n\r\n        ptr += this.fileHeader._size;\r\n        const magic = L.loadU2Field(this, ptr);\r\n        switch (magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader32(this, ptr);\r\n                break;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader64(this, ptr);\r\n                break;\r\n            default:\r\n                throw new E.PEError(E.PEErrorType.INVALID_OPTIONAL_HEADER_MAGIC, ptr, 2);\r\n        }\r\n\r\n        if (this.optionalHeader.NumberOfRvaAndSizes.value != F.IMAGE_NUMBEROF_DIRECTORY_ENTRIES) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_DIRECTORY_COUNT,\r\n                this.optionalHeader.NumberOfRvaAndSizes._offset,\r\n                this.optionalHeader.NumberOfRvaAndSizes._size);\r\n        }\r\n\r\n        ptr += this.optionalHeader._size;\r\n        this.dataDirectories = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageDataDirectory,\r\n            this.optionalHeader.NumberOfRvaAndSizes.value);\r\n\r\n        ptr += this.dataDirectories._size;\r\n        this.sectionHeaders = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageSectionHeader,\r\n            this.fileHeader.NumberOfSections.value);\r\n    }\r\n\r\n    private readonly data: DataView;\r\n\r\n    private dosHeader?: S.ImageDosHeader;\r\n    private peSignature?: S.U4Field;\r\n    private fileHeader?: S.ImageFileHeader;\r\n    private optionalHeader?: S.ImageOptionalHeader32 | S.ImageOptionalHeader64;\r\n    private dataDirectories?: S.StructArray<S.ImageDataDirectory>;\r\n    private sectionHeaders?: S.StructArray<S.ImageSectionHeader>;\r\n}\r\n","export function createResNavDataMessage(navList: W.NavData[]): W.ResNavDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_NAV_DATA,\r\n        navList\r\n    };\r\n}\r\n\r\nexport function createResPageDataMessage(pageData: W.PageData): W.ResPageDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PAGE_DATA,\r\n        pageData\r\n    };\r\n}\r\n\r\nexport function createResPEErrorMessage(error: string): W.ResPEErrorMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_ERROR,\r\n        error\r\n    };\r\n}\r\n","import * as M from \"./message\";\r\nimport { PEImage } from \"./pe/image\";\r\nimport { generatePageData } from \"./page-data/generator\";\r\n\r\nlet pe: PEImage | null = null;\r\n\r\nonmessage = (ev) => {\r\n    const msg = ev.data as W.WorkerMessage;\r\n    switch (msg.type) {\r\n        case W.WorkerMessageType.REQ_OPEN_FILE:\r\n            handleReqOpenFile(msg as W.ReqOpenFileMessage);\r\n            break;\r\n    }\r\n};\r\n\r\nfunction handleReqOpenFile(msg: W.ReqOpenFileMessage): void {\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = ev => {\r\n        try {\r\n            const buf = <ArrayBuffer>(<FileReader>ev.target).result;\r\n            pe = PEImage.load(buf);\r\n            const pageData = generatePageData(pe, W.PageID.HEADERS);\r\n            const msg = M.createResPageDataMessage(pageData);\r\n            postMessage(msg);\r\n        } catch (ex) {\r\n            const msg = M.createResPEErrorMessage(ex.message\r\n                || `Unknown error: ${JSON.stringify(ex)}`);\r\n            postMessage(msg);\r\n        }\r\n    };\r\n\r\n    reader.onerror = ev => {\r\n        pe = null;\r\n        const msg = M.createResPEErrorMessage(\"Can't open file.\");\r\n        postMessage(msg);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(msg.file);\r\n}\r\n"],"sourceRoot":""}