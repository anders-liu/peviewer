{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker/pe/image-flags.ts","webpack:///./src/worker/page-data/formatter.ts","webpack:///./src/worker/page-data/headers.ts","webpack:///./src/worker/page-data/generator.ts","webpack:///./src/worker/pe/error.ts","webpack:///./src/worker/pe/loader.ts","webpack:///./src/worker/pe/image.ts","webpack:///./src/worker/message.ts","webpack:///./src/worker/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","IMAGE_DOS_SIGNATURE","IMAGE_NT_SIGNATURE","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_OPTIONAL_HDR64_MAGIC","ImageFile","ImageFileMachine","ImageSubsystem","ImageDllCharacteristics","ImageDirectoryEntry","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","ImageSection","formatU1RawHex","padZeroLeft","toString","toUpperCase","formatU2RawHex","formatU4RawHex","formatU1Hex","formatU2Hex","formatU4Hex","formatHexDec","formatBytes","bytes","lineWidth","lines","start","length","line","Array","from","subarray","map","b","join","push","str","len","repeat","formatUIntField","f","sz","showDec","hex","offset","_offset","size","_size","rawData","data","formatDec","v","toLocaleString","formatStructTitle","title","formatU1Field","formatU2Field","formatU4Field","formatU8Field","high","low","formatBytesField","formatStringField","F","FM","generateHeadersPageData","pe","id","dosHeader","elemID","h","getDosHeader","items","e_magic","e_cblp","e_cp","e_crlc","e_cparhdr","e_minalloc","e_maxalloc","e_ss","e_sp","e_csum","e_ip","e_cs","e_lfarlc","e_ovno","e_res","e_oemid","e_oeminfo","e_res2","e_lfanew","generateDosHeader","peSignature","getPESignature","generatePESignature","fileHeader","getFileHeader","Machine","NumberOfSections","TimeDateStamp","PointerToSymbolTable","NumberOfSymbols","SizeOfOptionalHeader","Characteristics","generateFileHeader","optionalHeader","getOptionalHeader","Magic","groups","MajorLinkerVersion","MinorLinkerVersion","SizeOfCode","SizeOfInitializedData","SizeOfUninitializedData","AddressOfEntryPoint","BaseOfCode","BaseOfData","ImageBase","SectionAlignment","FileAlignment","MajorOperatingSystemVersion","MinorOperatingSystemVersion","MajorImageVersion","MinorImageVersion","MajorSubsystemVersion","MinorSubsystemVersion","Win32VersionValue","SizeOfImage","SizeOfHeaders","CheckSum","Subsystem","DllCharacteristics","SizeOfStackReserve","SizeOfStackCommit","SizeOfHeapReserve","SizeOfHeapCommit","LoaderFlags","NumberOfRvaAndSizes","fillOptionalHeader32Fields","fillOptionalHeader64Fields","generateOptionalHeader","dataDirectories","getDataDirectories","VirtualAddress","Size","generateDataDirectories","sectionHeaders","getSectionHeaders","Name","VirtualSize","SizeOfRawData","PointerToRawData","PointerToRelocations","PointerToLinenumbers","NumberOfRelocations","NumberOfLinenumbers","generateSectionHeaders","headers_1","generatePageData","pageID","PEError","_super","type","_this","this","__extends","Error","loadU1Field","getData","getU1","loadU2Field","getU2","loadU4Field","getU4","loadU8Field","loadU2EnumField","loadU4EnumField","loadFixedSizeByteArray","loadFixedSizeAsciiStringField","String","fromCharCode","apply","filter","loadU1EnumField","loadStructArrayByCount","loader","count","ptr","loadImageDosHeader","loadImageFileHeader","loadImageOptionalHeader32","loadImageOptionalHeader64","loadImageDataDirectory","loadImageSectionHeader","L","E","PEImage","buf","DataView","loadHeaders","load","check","getUint8","getUint16","getUint32","Uint8Array","buffer","slice","is32Bit","optHdr","isManaged","dd","ddCom","IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","byteLength","createResNavDataMessage","navList","createResPageDataMessage","pageData","createResPEPropsMessage","createResPEErrorMessage","error","M","image_1","generator_1","onmessage","ev","msg","reader","FileReader","onload","target","result","pageDataMsg","postMessage","pePropsMsg","ex","msg_1","message","JSON","stringify","onerror","readAsArrayBuffer","file","handleReqOpenFile"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","export const IMAGE_DOS_SIGNATURE = 0x5A4D;  // MZ\r\n\r\nexport const IMAGE_NT_SIGNATURE = 0x00004550;  // PE00\r\n\r\nexport const IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\r\nexport const IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\r\n\r\nexport enum ImageFile {\r\n    IMAGE_FILE_RELOCS_STRIPPED = 0x0001,\r\n    IMAGE_FILE_EXECUTABLE_IMAGE = 0x0002,\r\n    IMAGE_FILE_LINE_NUMS_STRIPPED = 0x0004,\r\n    IMAGE_FILE_LOCAL_SYMS_STRIPPED = 0x0008,\r\n    IMAGE_FILE_AGGRESIVE_WS_TRIM = 0x0010,\r\n    IMAGE_FILE_LARGE_ADDRESS_AWARE = 0x0020,\r\n    IMAGE_FILE_BYTES_REVERSED_LO = 0x0080,\r\n    IMAGE_FILE_32BIT_MACHINE = 0x0100,\r\n    IMAGE_FILE_DEBUG_STRIPPED = 0x0200,\r\n    IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 0x0400,\r\n    IMAGE_FILE_NET_RUN_FROM_SWAP = 0x0800,\r\n    IMAGE_FILE_SYSTEM = 0x1000,\r\n    IMAGE_FILE_DLL = 0x2000,\r\n    IMAGE_FILE_UP_SYSTEM_ONLY = 0x4000,\r\n    IMAGE_FILE_BYTES_REVERSED_HI = 0x8000,\r\n}\r\n\r\nexport enum ImageFileMachine {\r\n    IMAGE_FILE_MACHINE_UNKNOWN = 0,\r\n    IMAGE_FILE_MACHINE_TARGET_HOST = 0x0001,\r\n    IMAGE_FILE_MACHINE_I386 = 0x014c,\r\n    IMAGE_FILE_MACHINE_R3000 = 0x0162,\r\n    IMAGE_FILE_MACHINE_R4000 = 0x0166,\r\n    IMAGE_FILE_MACHINE_R10000 = 0x0168,\r\n    IMAGE_FILE_MACHINE_WCEMIPSV2 = 0x0169,\r\n    IMAGE_FILE_MACHINE_ALPHA = 0x0184,\r\n    IMAGE_FILE_MACHINE_SH3 = 0x01a2,\r\n    IMAGE_FILE_MACHINE_SH3DSP = 0x01a3,\r\n    IMAGE_FILE_MACHINE_SH3E = 0x01a4,\r\n    IMAGE_FILE_MACHINE_SH4 = 0x01a6,\r\n    IMAGE_FILE_MACHINE_SH5 = 0x01a8,\r\n    IMAGE_FILE_MACHINE_ARM = 0x01c0,\r\n    IMAGE_FILE_MACHINE_THUMB = 0x01c2,\r\n    IMAGE_FILE_MACHINE_ARMNT = 0x01c4,\r\n    IMAGE_FILE_MACHINE_AM33 = 0x01d3,\r\n    IMAGE_FILE_MACHINE_POWERPC = 0x01F0,\r\n    IMAGE_FILE_MACHINE_POWERPCFP = 0x01f1,\r\n    IMAGE_FILE_MACHINE_IA64 = 0x0200,\r\n    IMAGE_FILE_MACHINE_MIPS16 = 0x0266,\r\n    IMAGE_FILE_MACHINE_ALPHA64 = 0x0284,\r\n    IMAGE_FILE_MACHINE_MIPSFPU = 0x0366,\r\n    IMAGE_FILE_MACHINE_MIPSFPU16 = 0x0466,\r\n    IMAGE_FILE_MACHINE_AXP64 = IMAGE_FILE_MACHINE_ALPHA64,\r\n    IMAGE_FILE_MACHINE_TRICORE = 0x0520,\r\n    IMAGE_FILE_MACHINE_CEF = 0x0CEF,\r\n    IMAGE_FILE_MACHINE_EBC = 0x0EBC,\r\n    IMAGE_FILE_MACHINE_AMD64 = 0x8664,\r\n    IMAGE_FILE_MACHINE_M32R = 0x9041,\r\n    IMAGE_FILE_MACHINE_ARM64 = 0xAA64,\r\n    IMAGE_FILE_MACHINE_CEE = 0xC0EE,\r\n}\r\n\r\nexport enum ImageSubsystem {\r\n    IMAGE_SUBSYSTEM_UNKNOWN = 0,\r\n    IMAGE_SUBSYSTEM_NATIVE = 1,\r\n    IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,\r\n    IMAGE_SUBSYSTEM_OS2_CUI = 5,\r\n    IMAGE_SUBSYSTEM_POSIX_CUI = 7,\r\n    IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9,\r\n    IMAGE_SUBSYSTEM_EFI_APPLICATION = 10,\r\n    IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11,\r\n    IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12,\r\n    IMAGE_SUBSYSTEM_EFI_ROM = 13,\r\n    IMAGE_SUBSYSTEM_XBOX = 14,\r\n    IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16,\r\n    IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 17,\r\n}\r\n\r\nexport enum ImageDllCharacteristics {\r\n    IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020,\r\n    IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 0x0040,\r\n    IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 0x0080,\r\n    IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 0x0100,\r\n    IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 0x0200,\r\n    IMAGE_DLLCHARACTERISTICS_NO_SEH = 0x0400,\r\n    IMAGE_DLLCHARACTERISTICS_NO_BIND = 0x0800,\r\n    IMAGE_DLLCHARACTERISTICS_APPCONTAINER = 0x1000,\r\n    IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 0x2000,\r\n    IMAGE_DLLCHARACTERISTICS_GUARD_CF = 0x4000,\r\n    IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 0x8000,\r\n}\r\n\r\nexport enum ImageDirectoryEntry {\r\n    IMAGE_DIRECTORY_ENTRY_EXPORT = 0,\r\n    IMAGE_DIRECTORY_ENTRY_IMPORT = 1,\r\n    IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,\r\n    IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,\r\n    IMAGE_DIRECTORY_ENTRY_SECURITY = 4,\r\n    IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,\r\n    IMAGE_DIRECTORY_ENTRY_DEBUG = 6,\r\n    IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7,\r\n    IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,\r\n    IMAGE_DIRECTORY_ENTRY_TLS = 9,\r\n    IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,\r\n    IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,\r\n    IMAGE_DIRECTORY_ENTRY_IAT = 12,\r\n    IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13,\r\n    IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14,\r\n}\r\n\r\nexport const IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16;\r\n\r\nexport enum ImageSection {\r\n    IMAGE_SCN_TYPE_NO_PAD = 0x00000008,\r\n\r\n    IMAGE_SCN_CNT_CODE = 0x00000020,\r\n    IMAGE_SCN_CNT_INITIALIZED_DATA = 0x00000040,\r\n    IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x00000080,\r\n\r\n    IMAGE_SCN_LNK_OTHER = 0x00000100,\r\n    IMAGE_SCN_LNK_INFO = 0x00000200,\r\n    IMAGE_SCN_LNK_REMOVE = 0x00000800,\r\n    IMAGE_SCN_LNK_COMDAT = 0x00001000,\r\n\r\n    IMAGE_SCN_NO_DEFER_SPEC_EXC = 0x00004000,\r\n    IMAGE_SCN_GPREL = 0x00008000,\r\n\r\n    IMAGE_SCN_MEM_PURGEABLE = 0x00020000,\r\n    IMAGE_SCN_MEM_16BIT = 0x00020000,\r\n    IMAGE_SCN_MEM_LOCKED = 0x00040000,\r\n    IMAGE_SCN_MEM_PRELOAD = 0x00080000,\r\n\r\n    IMAGE_SCN_ALIGN_1BYTES = 0x00100000,\r\n    IMAGE_SCN_ALIGN_2BYTES = 0x00200000,\r\n    IMAGE_SCN_ALIGN_4BYTES = 0x00300000,\r\n    IMAGE_SCN_ALIGN_8BYTES = 0x00400000,\r\n    IMAGE_SCN_ALIGN_16BYTES = 0x00500000,\r\n    IMAGE_SCN_ALIGN_32BYTES = 0x00600000,\r\n    IMAGE_SCN_ALIGN_64BYTES = 0x00700000,\r\n    IMAGE_SCN_ALIGN_128BYTES = 0x00800000,\r\n    IMAGE_SCN_ALIGN_256BYTES = 0x00900000,\r\n    IMAGE_SCN_ALIGN_512BYTES = 0x00A00000,\r\n    IMAGE_SCN_ALIGN_1024BYTES = 0x00B00000,\r\n    IMAGE_SCN_ALIGN_2048BYTES = 0x00C00000,\r\n    IMAGE_SCN_ALIGN_4096BYTES = 0x00D00000,\r\n    IMAGE_SCN_ALIGN_8192BYTES = 0x00E00000,\r\n\r\n    IMAGE_SCN_LNK_NRELOC_OVFL = 0x01000000,\r\n    IMAGE_SCN_MEM_DISCARDABLE = 0x02000000,\r\n    IMAGE_SCN_MEM_NOT_CACHED = 0x04000000,\r\n    IMAGE_SCN_MEM_NOT_PAGED = 0x08000000,\r\n    IMAGE_SCN_MEM_SHARED = 0x10000000,\r\n    IMAGE_SCN_MEM_EXECUTE = 0x20000000,\r\n    IMAGE_SCN_MEM_READ = 0x40000000,\r\n    IMAGE_SCN_MEM_WRITE = 0x80000000,\r\n\r\n    IMAGE_SCN_SCALE_INDEX = 0x00000001,\r\n}","import * as S from \"../pe/structures\";\r\nimport { format } from \"url\";\r\n\r\nexport function formatU1RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 2);\r\n}\r\n\r\nexport function formatU2RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 4);\r\n}\r\n\r\nexport function formatU4RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 8);\r\n}\r\n\r\nexport function formatU1Hex(d: number): string {\r\n    return `${formatU1RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU2Hex(d: number): string {\r\n    return `${formatU2RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU4Hex(d: number): string {\r\n    return `${formatU4RawHex(d)}h`;\r\n}\r\n\r\nexport function formatHexDec(d: number): string {\r\n    return `${d.toString(16).toUpperCase()}h (${d})`;\r\n}\r\n\r\nexport function formatBytes(bytes: Uint8Array, lineWidth: number = 16): string[] {\r\n    let lines: string[] = [];\r\n    for (let start = 0; start < bytes.length; start += lineWidth) {\r\n        const line = Array.from(bytes.subarray(start, start + lineWidth))\r\n            .map(b => formatU1RawHex(b)).join(\"-\");\r\n        lines.push(line);\r\n    }\r\n    return lines;\r\n}\r\n\r\nexport function formatStructTitle(s: S.FileData, title: string): string {\r\n    return `${title} [${formatU4Hex(s._offset)} - ${formatU4Hex(s._offset + s._size)} : ${formatHexDec(s._size)}]`;\r\n}\r\n\r\nexport function formatU1Field(name: string, f: S.U1Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 1, showDec);\r\n}\r\n\r\nexport function formatU2Field(name: string, f: S.U2Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 2, showDec);\r\n}\r\n\r\nexport function formatU4Field(name: string, f: S.U4Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 4, showDec);\r\n}\r\n\r\nexport function formatU8Field(name: string, f: S.U8Field, showDec?: boolean): W.StructItem {\r\n    let value = `${formatU4RawHex(f.high)} ${formatU4Hex(f.low)}`;\r\n\r\n    if (showDec && f.high < 0x1FFFFF) {\r\n        const long = f.high * 0x100000000 + f.low;\r\n        value += ` (${formatDec(long)})`;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value,\r\n    };\r\n}\r\n\r\nexport function formatBytesField(name: string, f: S.Field): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: \"\",\r\n    }\r\n}\r\n\r\nexport function formatStringField(name: string, f: S.StringField): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: `\"${f.value}\"`,\r\n    }\r\n}\r\n\r\nfunction padZeroLeft(str: string, len: number): string {\r\n    if (str.length < len) {\r\n        return \"0\".repeat(len - str.length) + str;\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n\r\nfunction formatUIntField(name: string, f: S.UIntField, sz: number, showDec?: boolean): W.StructItem {\r\n    let hex: string;\r\n    switch (sz) {\r\n        case 1: hex = formatU1Hex(f.value); break;\r\n        case 2: hex = formatU2Hex(f.value); break;\r\n        case 4: hex = formatU4Hex(f.value); break;\r\n        default: hex = f.value.toString(16).toUpperCase(); break;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: showDec ? `${hex} (${formatDec(f.value)})` : hex,\r\n    }\r\n}\r\n\r\nfunction formatDec(v: number): string {\r\n    return v.toLocaleString();\r\n}\r\n","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\nimport { Z_UNKNOWN } from \"zlib\";\r\n\r\nexport function generateHeadersPageData(pe: PEImage): W.HeadersPageData {\r\n    return {\r\n        id: W.PageID.HEADERS,\r\n        title: \"Headers\",\r\n        dosHeader: generateDosHeader(pe),\r\n        peSignature: generatePESignature(pe),\r\n        fileHeader: generateFileHeader(pe),\r\n        optionalHeader: generateOptionalHeader(pe),\r\n        dataDirectories: generateDataDirectories(pe),\r\n        sectionHeaders: generateSectionHeaders(pe),\r\n    };\r\n}\r\n\r\nfunction generateDosHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: \"DOS Header\",\r\n        elemID: W.KnownElemID.DOS_HEADER,\r\n    };\r\n\r\n    const h = pe.getDosHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"e_magic\", h.e_magic),\r\n        FM.formatU2Field(\"e_cblp\", h.e_cblp),\r\n        FM.formatU2Field(\"e_cp\", h.e_cp),\r\n        FM.formatU2Field(\"e_crlc\", h.e_crlc),\r\n        FM.formatU2Field(\"e_cparhdr\", h.e_cparhdr),\r\n        FM.formatU2Field(\"e_minalloc\", h.e_minalloc),\r\n        FM.formatU2Field(\"e_maxalloc\", h.e_maxalloc),\r\n        FM.formatU2Field(\"e_ss\", h.e_ss),\r\n        FM.formatU2Field(\"e_sp\", h.e_sp),\r\n        FM.formatU2Field(\"e_csum\", h.e_csum),\r\n        FM.formatU2Field(\"e_ip\", h.e_ip),\r\n        FM.formatU2Field(\"e_cs\", h.e_cs),\r\n        FM.formatU2Field(\"e_lfarlc\", h.e_lfarlc),\r\n        FM.formatU2Field(\"e_ovno\", h.e_ovno),\r\n        FM.formatBytesField(\"e_res\", h.e_res),\r\n        FM.formatU2Field(\"e_oemid\", h.e_oemid),\r\n        FM.formatU2Field(\"e_oeminfo\", h.e_oeminfo),\r\n        FM.formatBytesField(\"e_res2\", h.e_res2),\r\n        FM.formatU4Field(\"e_lfanew\", h.e_lfanew),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generatePESignature(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: \"PE Signature\",\r\n        elemID: W.KnownElemID.PE_SIGNATURE,\r\n    };\r\n\r\n    const h = pe.getPESignature();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"PE Signature\", h),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateFileHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: \"File Header\",\r\n        elemID: W.KnownElemID.FILE_HEADER,\r\n    };\r\n\r\n    const h = pe.getFileHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"Machine\", h.Machine),\r\n        FM.formatU2Field(\"NumberOfSections\", h.NumberOfSections, true),\r\n        FM.formatU4Field(\"TimeDateStamp\", h.TimeDateStamp),\r\n        FM.formatU4Field(\"PointerToSymbolTable\", h.PointerToSymbolTable),\r\n        FM.formatU4Field(\"NumberOfSymbols\", h.NumberOfSymbols, true),\r\n        FM.formatU2Field(\"SizeOfOptionalHeader\", h.SizeOfOptionalHeader, true),\r\n        FM.formatU2Field(\"Characteristics\", h.Characteristics),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateOptionalHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: \"Optional Header\",\r\n        elemID: W.KnownElemID.OPTIONAL_HEADER,\r\n    };\r\n\r\n    const h = pe.getOptionalHeader();\r\n    if (!h) return s;\r\n\r\n    switch (h.Magic.value) {\r\n        case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n            s.title += \" (32-bit)\";\r\n            fillOptionalHeader32Fields(s, <S.ImageOptionalHeader32>h);\r\n            break;\r\n\r\n        case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n            s.title += \" (64-bit)\";\r\n            fillOptionalHeader64Fields(s, <S.ImageOptionalHeader64>h);\r\n            break;\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nfunction fillOptionalHeader32Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader32): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n            FM.formatU4Field(\"BaseOfData\", h.BaseOfData),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU4Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU4Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU4Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU4Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU4Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction fillOptionalHeader64Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader64): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU8Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU8Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU8Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU8Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU8Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction generateDataDirectories(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: \"Data Dreictories\",\r\n        elemID: W.KnownElemID.DATA_DIRECTORIES,\r\n    };\r\n\r\n    const h = pe.getDataDirectories();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] ${F.ImageDirectoryEntry[i] || \"\"}`,\r\n        items: [\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"Size\", v.Size, true),\r\n        ]\r\n    } as W.SimpleStruct));\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSectionHeaders(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: \"Section headers\",\r\n        elemID: W.KnownElemID.SECTION_HEADERS,\r\n    };\r\n\r\n    const h = pe.getSectionHeaders();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] (${v.Name.value})`,\r\n        items: [\r\n            FM.formatStringField(\"Name\", v.Name),\r\n            FM.formatU4Field(\"VirtualSize\", v.VirtualSize, true),\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"SizeOfRawData\", v.SizeOfRawData, true),\r\n            FM.formatU4Field(\"PointerToRawData\", v.PointerToRawData),\r\n            FM.formatU4Field(\"PointerToRelocations\", v.PointerToRelocations),\r\n            FM.formatU4Field(\"PointerToLinenumbers\", v.PointerToLinenumbers),\r\n            FM.formatU2Field(\"NumberOfRelocations\", v.NumberOfRelocations, true),\r\n            FM.formatU2Field(\"NumberOfLinenumbers\", v.NumberOfLinenumbers, true),\r\n            FM.formatU4Field(\"Characteristics\", v.Characteristics),\r\n        ]\r\n    } as W.GroupedStruct));\r\n\r\n    return s;\r\n}\r\n","import { PEImage } from \"../pe/image\";\r\nimport { generateHeadersPageData } from \"./headers\";\r\n\r\nexport function generatePageData(pe: PEImage, pageID: W.PageID): W.PageData {\r\n    switch (pageID) {\r\n        case W.PageID.HEADERS: return generateHeadersPageData(pe);\r\n        default: return { id: W.PageID.NOTFOUND, title: \"Page Not Found\" };\r\n    }\r\n}","export const enum PEErrorType {\r\n    INVALID_DATA_POSITION = \"INVALID_DATA_POSITION\",\r\n    INVALID_DOS_SIGNATURE = \"INVALID_DOS_SIGNATURE\",\r\n    INVALID_PE_SIGNATURE = \"INVALID_PE_SIGNATURE\",\r\n    INVALID_OPTIONAL_HEADER_MAGIC = \"INVALID_OPTIONAL_HEADER_MAGIC\",\r\n    INVALID_DATA_DIRECTORY_COUNT = \"INVALID_DATA_DIRECTORY_COUNT\",\r\n}\r\n\r\nexport class PEError extends Error {\r\n    constructor(\r\n        public type: PEErrorType,\r\n        public offset?: number,\r\n        public size?: number\r\n    ) {\r\n        super(type);\r\n    }\r\n}\r\n","import * as S from \"./structures\";\r\nimport * as F from \"./image-flags\";\r\n\r\nexport interface FileDataProvider {\r\n    getU1(p: number): number;\r\n    getU2(p: number): number;\r\n    getU4(p: number): number;\r\n    getData(p: number, sz: number): Uint8Array;\r\n}\r\n\r\n//\r\n// Basic structures.\r\n//\r\n\r\nexport function loadU1Field(d: FileDataProvider, p: number): S.U1Field {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p)\r\n    };\r\n}\r\n\r\nexport function loadU2Field(d: FileDataProvider, p: number): S.U2Field {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p)\r\n    };\r\n}\r\n\r\nexport function loadU4Field(d: FileDataProvider, p: number): S.U4Field {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p)\r\n    };\r\n}\r\n\r\nexport function loadU8Field(d: FileDataProvider, p: number): S.U8Field {\r\n    const low = d.getU4(p);\r\n    const high = d.getU4(p + 4);\r\n\r\n    return {\r\n        _offset: p, _size: 8, data: d.getData(p, 8), low, high\r\n    };\r\n}\r\n\r\nexport function loadU1EnumField<T>(d: FileDataProvider, p: number): S.U1EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU2EnumField<T>(d: FileDataProvider, p: number): S.U2EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU4EnumField<T>(d: FileDataProvider, p: number): S.U4EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeByteArray(d: FileDataProvider, p: number, sz: number): S.Field {\r\n    return {\r\n        _offset: p, _size: sz, data: d.getData(p, sz)\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeAsciiStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const value = String.fromCharCode.apply(null, Array.from(data).filter(v => v != 0));\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadStructArrayByCount<T extends S.FileData>(\r\n    d: FileDataProvider,\r\n    p: number,\r\n    loader: (d: FileDataProvider, p: number) => T,\r\n    count: number): S.StructArray<T> {\r\n\r\n    let items: T[] = [];\r\n    let ptr = p;\r\n    for (let i = 0; i < count; i++) {\r\n        const s = loader(d, ptr);\r\n        items.push(s);\r\n        ptr += s._size;\r\n    }\r\n\r\n    return { _offset: p, _size: ptr - p, items };\r\n}\r\n\r\n//\r\n// Image headers.\r\n//\r\n\r\nexport function loadImageDosHeader(d: FileDataProvider, p: number): S.ImageDosHeader {\r\n    let ptr = p;\r\n\r\n    const e_magic = loadU2Field(d, ptr);\r\n    ptr += e_magic._size;\r\n\r\n    const e_cblp = loadU2Field(d, ptr);\r\n    ptr += e_cblp._size;\r\n\r\n    const e_cp = loadU2Field(d, ptr);\r\n    ptr += e_cp._size;\r\n\r\n    const e_crlc = loadU2Field(d, ptr);\r\n    ptr += e_crlc._size;\r\n\r\n    const e_cparhdr = loadU2Field(d, ptr);\r\n    ptr += e_cparhdr._size;\r\n\r\n    const e_minalloc = loadU2Field(d, ptr);\r\n    ptr += e_minalloc._size;\r\n\r\n    const e_maxalloc = loadU2Field(d, ptr);\r\n    ptr += e_maxalloc._size;\r\n\r\n    const e_ss = loadU2Field(d, ptr);\r\n    ptr += e_ss._size;\r\n\r\n    const e_sp = loadU2Field(d, ptr);\r\n    ptr += e_sp._size;\r\n\r\n    const e_csum = loadU2Field(d, ptr);\r\n    ptr += e_csum._size;\r\n\r\n    const e_ip = loadU2Field(d, ptr);\r\n    ptr += e_ip._size;\r\n\r\n    const e_cs = loadU2Field(d, ptr);\r\n    ptr += e_cs._size;\r\n\r\n    const e_lfarlc = loadU2Field(d, ptr);\r\n    ptr += e_lfarlc._size;\r\n\r\n    const e_ovno = loadU2Field(d, ptr);\r\n    ptr += e_ovno._size;\r\n\r\n    const e_res = loadFixedSizeByteArray(d, ptr, 4 * 2);\r\n    ptr += e_res._size;\r\n\r\n    const e_oemid = loadU2Field(d, ptr);\r\n    ptr += e_oemid._size;\r\n\r\n    const e_oeminfo = loadU2Field(d, ptr);\r\n    ptr += e_oeminfo._size;\r\n\r\n    const e_res2 = loadFixedSizeByteArray(d, ptr, 10 * 2);\r\n    ptr += e_res2._size;\r\n\r\n    const e_lfanew = loadU4Field(d, ptr);\r\n    ptr += e_lfanew._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        e_magic,\r\n        e_cblp,\r\n        e_cp,\r\n        e_crlc,\r\n        e_cparhdr,\r\n        e_minalloc,\r\n        e_maxalloc,\r\n        e_ss,\r\n        e_sp,\r\n        e_csum,\r\n        e_ip,\r\n        e_cs,\r\n        e_lfarlc,\r\n        e_ovno,\r\n        e_res,\r\n        e_oemid,\r\n        e_oeminfo,\r\n        e_res2,\r\n        e_lfanew,\r\n    };\r\n}\r\n\r\nexport function loadImageFileHeader(d: FileDataProvider, p: number): S.ImageFileHeader {\r\n    let ptr = p;\r\n\r\n    const Machine = loadU2Field(d, ptr);\r\n    ptr += Machine._size;\r\n\r\n    const NumberOfSections = loadU2Field(d, ptr);\r\n    ptr += NumberOfSections._size;\r\n\r\n    const TimeDateStamp = loadU4Field(d, ptr);\r\n    ptr += TimeDateStamp._size;\r\n\r\n    const PointerToSymbolTable = loadU4Field(d, ptr);\r\n    ptr += PointerToSymbolTable._size;\r\n\r\n    const NumberOfSymbols = loadU4Field(d, ptr);\r\n    ptr += NumberOfSymbols._size;\r\n\r\n    const SizeOfOptionalHeader = loadU2Field(d, ptr);\r\n    ptr += SizeOfOptionalHeader._size;\r\n\r\n    const Characteristics = loadU2EnumField<F.ImageFile>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Machine,\r\n        NumberOfSections,\r\n        TimeDateStamp,\r\n        PointerToSymbolTable,\r\n        NumberOfSymbols,\r\n        SizeOfOptionalHeader,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader32(d: FileDataProvider, p: number): S.ImageOptionalHeader32 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const BaseOfData = loadU4Field(d, ptr);\r\n    ptr += BaseOfData._size;\r\n\r\n    const ImageBase = loadU4Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        BaseOfData,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader64(d: FileDataProvider, p: number): S.ImageOptionalHeader64 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const ImageBase = loadU8Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageDataDirectory(d: FileDataProvider, p: number): S.ImageDataDirectory {\r\n    let ptr = p;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        VirtualAddress,\r\n        Size,\r\n    };\r\n}\r\n\r\nexport function loadImageSectionHeader(d: FileDataProvider, p: number): S.ImageSectionHeader {\r\n    let ptr = p;\r\n\r\n    const Name = loadFixedSizeAsciiStringField(d, ptr, 8);\r\n    ptr += Name._size;\r\n\r\n    const VirtualSize = loadU4Field(d, ptr);\r\n    ptr += VirtualSize._size;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const SizeOfRawData = loadU4Field(d, ptr);\r\n    ptr += SizeOfRawData._size;\r\n\r\n    const PointerToRawData = loadU4Field(d, ptr);\r\n    ptr += PointerToRawData._size;\r\n\r\n    const PointerToRelocations = loadU4Field(d, ptr);\r\n    ptr += PointerToRelocations._size;\r\n\r\n    const PointerToLinenumbers = loadU4Field(d, ptr);\r\n    ptr += PointerToLinenumbers._size;\r\n\r\n    const NumberOfRelocations = loadU2Field(d, ptr);\r\n    ptr += NumberOfRelocations._size;\r\n\r\n    const NumberOfLinenumbers = loadU2Field(d, ptr);\r\n    ptr += NumberOfLinenumbers._size;\r\n\r\n    const Characteristics = loadU4EnumField<F.ImageSection>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Name,\r\n        VirtualSize,\r\n        VirtualAddress,\r\n        SizeOfRawData,\r\n        PointerToRawData,\r\n        PointerToRelocations,\r\n        PointerToLinenumbers,\r\n        NumberOfRelocations,\r\n        NumberOfLinenumbers,\r\n        Characteristics,\r\n    };\r\n}","import * as S from \"./structures\";\r\nimport * as L from \"./loader\";\r\nimport * as F from \"./image-flags\";\r\nimport * as E from \"./error\";\r\n\r\nexport class PEImage implements L.FileDataProvider {\r\n    public static load(buf: ArrayBuffer): PEImage {\r\n        return new PEImage(buf);\r\n    }\r\n\r\n    public getU1(p: number): number {\r\n        this.check(p, 1);\r\n        return this.data.getUint8(p);\r\n    }\r\n\r\n    public getU2(p: number): number {\r\n        this.check(p, 2);\r\n        return this.data.getUint16(p, true);\r\n    }\r\n\r\n    public getU4(p: number): number {\r\n        this.check(p, 3);\r\n        return this.data.getUint32(p, true);\r\n    }\r\n\r\n    public getData(p: number, sz: number): Uint8Array {\r\n        this.check(p, sz);\r\n        return new Uint8Array(this.data.buffer.slice(p, p + sz));\r\n    }\r\n\r\n    public is32Bit(): boolean | undefined {\r\n        const optHdr = this.getOptionalHeader();\r\n        if (optHdr == null) {\r\n            return undefined;\r\n        }\r\n\r\n        switch (optHdr.Magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC: return true;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC: return false;\r\n            default: return undefined;\r\n        }\r\n    }\r\n\r\n    public isManaged(): boolean | undefined {\r\n        const dd = this.getDataDirectories();\r\n        if (dd == null) {\r\n            return undefined;\r\n        }\r\n\r\n        const ddCom = dd.items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR];\r\n        return ddCom && ddCom.VirtualAddress.value > 0 && ddCom.Size.value > 0;\r\n    }\r\n\r\n    public getDosHeader(): S.ImageDosHeader | undefined {\r\n        return this.dosHeader;\r\n    }\r\n\r\n    public getPESignature(): S.U4Field | undefined {\r\n        return this.peSignature;\r\n    }\r\n\r\n    public getFileHeader(): S.ImageFileHeader | undefined {\r\n        return this.fileHeader;\r\n    }\r\n\r\n    public getOptionalHeader(): S.ImageOptionalHeader32 | S.ImageOptionalHeader64 | undefined {\r\n        return this.optionalHeader;\r\n    }\r\n\r\n    public getDataDirectories(): S.StructArray<S.ImageDataDirectory> | undefined {\r\n        return this.dataDirectories;\r\n    }\r\n\r\n    public getSectionHeaders(): S.StructArray<S.ImageSectionHeader> | undefined {\r\n        return this.sectionHeaders;\r\n    }\r\n\r\n    private check(p: number, sz: number): void {\r\n        if (p < 0 || p >= this.data.byteLength\r\n            || sz < 0 || p + sz > this.data.byteLength) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_POSITION, p, sz);\r\n        }\r\n    }\r\n\r\n    private constructor(buf: ArrayBuffer) {\r\n        this.data = new DataView(buf);\r\n        this.loadHeaders();\r\n    }\r\n\r\n    private loadHeaders(): void {\r\n        let ptr = 0;\r\n        this.dosHeader = L.loadImageDosHeader(this, ptr);\r\n\r\n        if (this.dosHeader.e_magic.value != F.IMAGE_DOS_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DOS_SIGNATURE, ptr, 2);\r\n        }\r\n\r\n        ptr = this.dosHeader.e_lfanew.value;\r\n        this.peSignature = L.loadU4Field(this, ptr);\r\n\r\n        if (this.peSignature.value != F.IMAGE_NT_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_PE_SIGNATURE, ptr, 4);\r\n        }\r\n\r\n        ptr += this.peSignature._size;\r\n        this.fileHeader = L.loadImageFileHeader(this, ptr);\r\n\r\n        ptr += this.fileHeader._size;\r\n        const magic = L.loadU2Field(this, ptr);\r\n        switch (magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader32(this, ptr);\r\n                break;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader64(this, ptr);\r\n                break;\r\n            default:\r\n                throw new E.PEError(E.PEErrorType.INVALID_OPTIONAL_HEADER_MAGIC, ptr, 2);\r\n        }\r\n\r\n        if (this.optionalHeader.NumberOfRvaAndSizes.value != F.IMAGE_NUMBEROF_DIRECTORY_ENTRIES) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_DIRECTORY_COUNT,\r\n                this.optionalHeader.NumberOfRvaAndSizes._offset,\r\n                this.optionalHeader.NumberOfRvaAndSizes._size);\r\n        }\r\n\r\n        ptr += this.optionalHeader._size;\r\n        this.dataDirectories = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageDataDirectory,\r\n            this.optionalHeader.NumberOfRvaAndSizes.value);\r\n\r\n        ptr += this.dataDirectories._size;\r\n        this.sectionHeaders = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageSectionHeader,\r\n            this.fileHeader.NumberOfSections.value);\r\n    }\r\n\r\n    private readonly data: DataView;\r\n\r\n    private dosHeader?: S.ImageDosHeader;\r\n    private peSignature?: S.U4Field;\r\n    private fileHeader?: S.ImageFileHeader;\r\n    private optionalHeader?: S.ImageOptionalHeader32 | S.ImageOptionalHeader64;\r\n    private dataDirectories?: S.StructArray<S.ImageDataDirectory>;\r\n    private sectionHeaders?: S.StructArray<S.ImageSectionHeader>;\r\n}\r\n","export function createResNavDataMessage(navList: W.NavData[]): W.ResNavDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_NAV_DATA,\r\n        navList\r\n    };\r\n}\r\n\r\nexport function createResPageDataMessage(pageData: W.PageData): W.ResPageDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PAGE_DATA,\r\n        pageData\r\n    };\r\n}\r\n\r\nexport function createResPEPropsMessage(is32Bit?: boolean, isManaged?: boolean): W.ResPEPropsMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_PROPS,\r\n        is32Bit,\r\n        isManaged\r\n    };\r\n}\r\n\r\nexport function createResPEErrorMessage(error: string): W.ResPEErrorMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_ERROR,\r\n        error\r\n    };\r\n}\r\n","import * as M from \"./message\";\r\nimport { PEImage } from \"./pe/image\";\r\nimport { generatePageData } from \"./page-data/generator\";\r\n\r\nlet pe: PEImage | null = null;\r\n\r\nonmessage = (ev) => {\r\n    const msg = ev.data as W.WorkerMessage;\r\n    switch (msg.type) {\r\n        case W.WorkerMessageType.REQ_OPEN_FILE:\r\n            handleReqOpenFile(msg as W.ReqOpenFileMessage);\r\n            break;\r\n    }\r\n};\r\n\r\nfunction handleReqOpenFile(msg: W.ReqOpenFileMessage): void {\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = ev => {\r\n        try {\r\n            const buf = <ArrayBuffer>(<FileReader>ev.target).result;\r\n            pe = PEImage.load(buf);\r\n\r\n            // Response with page data.\r\n            const pageData = generatePageData(pe, W.PageID.HEADERS);\r\n            const pageDataMsg = M.createResPageDataMessage(pageData);\r\n            postMessage(pageDataMsg);\r\n\r\n            // Response with PE properties.\r\n            const pePropsMsg = M.createResPEPropsMessage(pe.is32Bit(), pe.isManaged());\r\n            postMessage(pePropsMsg);\r\n\r\n            // TODO: Response with navigation data.\r\n        } catch (ex) {\r\n            const msg = M.createResPEErrorMessage(ex.message\r\n                || `Unknown error: ${JSON.stringify(ex)}`);\r\n            postMessage(msg);\r\n        }\r\n    };\r\n\r\n    reader.onerror = ev => {\r\n        pe = null;\r\n        const msg = M.createResPEErrorMessage(\"Can't open file.\");\r\n        postMessage(msg);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(msg.file);\r\n}\r\n"],"sourceRoot":""}