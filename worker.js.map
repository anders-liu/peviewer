{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker/pe/error.ts","webpack:///./src/worker/pe/image-flags.ts","webpack:///./src/worker/pe/loader.ts","webpack:///./src/worker/pe/image.ts","webpack:///./src/worker/message.ts","webpack:///./src/worker/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","PEError","_super","type","offset","size","_this","this","__extends","Error","IMAGE_DOS_SIGNATURE","IMAGE_NT_SIGNATURE","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_OPTIONAL_HDR64_MAGIC","ImageFile","ImageFileMachine","ImageSubsystem","ImageDllCharacteristics","ImageDirectoryEntry","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","ImageSection","loadU1Field","_offset","_size","data","getData","getU1","loadU2Field","getU2","loadU4Field","getU4","loadU8Field","low","high","loadU2EnumField","loadU4EnumField","loadFixedSizeByteArray","sz","loadFixedSizeAsciiStringField","String","fromCharCode","apply","Array","from","loadU1EnumField","loadStructArrayByCount","loader","count","items","ptr","push","loadImageDosHeader","e_magic","e_cblp","e_cp","e_crlc","e_cparhdr","e_minalloc","e_maxalloc","e_ss","e_sp","e_csum","e_ip","e_cs","e_lfarlc","e_ovno","e_res","e_oemid","e_oeminfo","e_res2","e_lfanew","loadImageFileHeader","Machine","NumberOfSections","TimeDateStamp","PointerToSymbolTable","NumberOfSymbols","SizeOfOptionalHeader","Characteristics","loadImageOptionalHeader32","Magic","MajorLinkerVersion","MinorLinkerVersion","SizeOfCode","SizeOfInitializedData","SizeOfUninitializedData","AddressOfEntryPoint","BaseOfCode","BaseOfData","ImageBase","SectionAlignment","FileAlignment","MajorOperatingSystemVersion","MinorOperatingSystemVersion","MajorImageVersion","MinorImageVersion","MajorSubsystemVersion","MinorSubsystemVersion","Win32VersionValue","SizeOfImage","SizeOfHeaders","CheckSum","Subsystem","DllCharacteristics","SizeOfStackReserve","SizeOfStackCommit","SizeOfHeapReserve","SizeOfHeapCommit","LoaderFlags","NumberOfRvaAndSizes","loadImageOptionalHeader64","loadImageDataDirectory","VirtualAddress","Size","loadImageSectionHeader","Name","VirtualSize","SizeOfRawData","PointerToRawData","PointerToRelocations","PointerToLinenumbers","NumberOfRelocations","NumberOfLinenumbers","L","F","E","PEImage","buf","DataView","loadHeaders","load","check","getUint8","getUint16","getUint32","Uint8Array","buffer","slice","byteLength","dosHeader","peSignature","fileHeader","optionalHeader","dataDirectories","sectionHeaders","createResNavDataMessage","navList","createResPageDataMessage","pageData","createResPEErrorMessage","error","M","image_1","onmessage","ev","msg","reader","FileReader","onload","target","result","onerror","postMessage","readAsArrayBuffer","file","handleReqOpenFile"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","export const enum PEErrorType {\r\n    INVALID_DATA_POSITION = \"INVALID_DATA_POSITION\",\r\n    INVALID_DOS_SIGNATURE = \"INVALID_DOS_SIGNATURE\",\r\n    INVALID_PE_SIGNATURE = \"INVALID_PE_SIGNATURE\",\r\n    INVALID_OPTIONAL_HEADER_MAGIC = \"INVALID_OPTIONAL_HEADER_MAGIC\",\r\n    INVALID_DATA_DIRECTORY_COUNT = \"INVALID_DATA_DIRECTORY_COUNT\",\r\n}\r\n\r\nexport class PEError extends Error {\r\n    constructor(\r\n        public type: PEErrorType,\r\n        public offset?: number,\r\n        public size?: number\r\n    ) {\r\n        super(type);\r\n    }\r\n}\r\n","export const IMAGE_DOS_SIGNATURE = 0x5A4D;  // MZ\r\n\r\nexport const IMAGE_NT_SIGNATURE = 0x00004550;  // PE00\r\n\r\nexport const IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\r\nexport const IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\r\n\r\nexport enum ImageFile {\r\n    IMAGE_FILE_RELOCS_STRIPPED = 0x0001,\r\n    IMAGE_FILE_EXECUTABLE_IMAGE = 0x0002,\r\n    IMAGE_FILE_LINE_NUMS_STRIPPED = 0x0004,\r\n    IMAGE_FILE_LOCAL_SYMS_STRIPPED = 0x0008,\r\n    IMAGE_FILE_AGGRESIVE_WS_TRIM = 0x0010,\r\n    IMAGE_FILE_LARGE_ADDRESS_AWARE = 0x0020,\r\n    IMAGE_FILE_BYTES_REVERSED_LO = 0x0080,\r\n    IMAGE_FILE_32BIT_MACHINE = 0x0100,\r\n    IMAGE_FILE_DEBUG_STRIPPED = 0x0200,\r\n    IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 0x0400,\r\n    IMAGE_FILE_NET_RUN_FROM_SWAP = 0x0800,\r\n    IMAGE_FILE_SYSTEM = 0x1000,\r\n    IMAGE_FILE_DLL = 0x2000,\r\n    IMAGE_FILE_UP_SYSTEM_ONLY = 0x4000,\r\n    IMAGE_FILE_BYTES_REVERSED_HI = 0x8000,\r\n}\r\n\r\nexport enum ImageFileMachine {\r\n    IMAGE_FILE_MACHINE_UNKNOWN = 0,\r\n    IMAGE_FILE_MACHINE_TARGET_HOST = 0x0001,\r\n    IMAGE_FILE_MACHINE_I386 = 0x014c,\r\n    IMAGE_FILE_MACHINE_R3000 = 0x0162,\r\n    IMAGE_FILE_MACHINE_R4000 = 0x0166,\r\n    IMAGE_FILE_MACHINE_R10000 = 0x0168,\r\n    IMAGE_FILE_MACHINE_WCEMIPSV2 = 0x0169,\r\n    IMAGE_FILE_MACHINE_ALPHA = 0x0184,\r\n    IMAGE_FILE_MACHINE_SH3 = 0x01a2,\r\n    IMAGE_FILE_MACHINE_SH3DSP = 0x01a3,\r\n    IMAGE_FILE_MACHINE_SH3E = 0x01a4,\r\n    IMAGE_FILE_MACHINE_SH4 = 0x01a6,\r\n    IMAGE_FILE_MACHINE_SH5 = 0x01a8,\r\n    IMAGE_FILE_MACHINE_ARM = 0x01c0,\r\n    IMAGE_FILE_MACHINE_THUMB = 0x01c2,\r\n    IMAGE_FILE_MACHINE_ARMNT = 0x01c4,\r\n    IMAGE_FILE_MACHINE_AM33 = 0x01d3,\r\n    IMAGE_FILE_MACHINE_POWERPC = 0x01F0,\r\n    IMAGE_FILE_MACHINE_POWERPCFP = 0x01f1,\r\n    IMAGE_FILE_MACHINE_IA64 = 0x0200,\r\n    IMAGE_FILE_MACHINE_MIPS16 = 0x0266,\r\n    IMAGE_FILE_MACHINE_ALPHA64 = 0x0284,\r\n    IMAGE_FILE_MACHINE_MIPSFPU = 0x0366,\r\n    IMAGE_FILE_MACHINE_MIPSFPU16 = 0x0466,\r\n    IMAGE_FILE_MACHINE_AXP64 = IMAGE_FILE_MACHINE_ALPHA64,\r\n    IMAGE_FILE_MACHINE_TRICORE = 0x0520,\r\n    IMAGE_FILE_MACHINE_CEF = 0x0CEF,\r\n    IMAGE_FILE_MACHINE_EBC = 0x0EBC,\r\n    IMAGE_FILE_MACHINE_AMD64 = 0x8664,\r\n    IMAGE_FILE_MACHINE_M32R = 0x9041,\r\n    IMAGE_FILE_MACHINE_ARM64 = 0xAA64,\r\n    IMAGE_FILE_MACHINE_CEE = 0xC0EE,\r\n}\r\n\r\nexport enum ImageSubsystem {\r\n    IMAGE_SUBSYSTEM_UNKNOWN = 0,\r\n    IMAGE_SUBSYSTEM_NATIVE = 1,\r\n    IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,\r\n    IMAGE_SUBSYSTEM_OS2_CUI = 5,\r\n    IMAGE_SUBSYSTEM_POSIX_CUI = 7,\r\n    IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9,\r\n    IMAGE_SUBSYSTEM_EFI_APPLICATION = 10,\r\n    IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11,\r\n    IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12,\r\n    IMAGE_SUBSYSTEM_EFI_ROM = 13,\r\n    IMAGE_SUBSYSTEM_XBOX = 14,\r\n    IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16,\r\n    IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 17,\r\n}\r\n\r\nexport enum ImageDllCharacteristics {\r\n    IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020,\r\n    IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 0x0040,\r\n    IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 0x0080,\r\n    IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 0x0100,\r\n    IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 0x0200,\r\n    IMAGE_DLLCHARACTERISTICS_NO_SEH = 0x0400,\r\n    IMAGE_DLLCHARACTERISTICS_NO_BIND = 0x0800,\r\n    IMAGE_DLLCHARACTERISTICS_APPCONTAINER = 0x1000,\r\n    IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 0x2000,\r\n    IMAGE_DLLCHARACTERISTICS_GUARD_CF = 0x4000,\r\n    IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 0x8000,\r\n}\r\n\r\nexport enum ImageDirectoryEntry {\r\n    IMAGE_DIRECTORY_ENTRY_EXPORT = 0,\r\n    IMAGE_DIRECTORY_ENTRY_IMPORT = 1,\r\n    IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,\r\n    IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,\r\n    IMAGE_DIRECTORY_ENTRY_SECURITY = 4,\r\n    IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,\r\n    IMAGE_DIRECTORY_ENTRY_DEBUG = 6,\r\n    IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7,\r\n    IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,\r\n    IMAGE_DIRECTORY_ENTRY_TLS = 9,\r\n    IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,\r\n    IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,\r\n    IMAGE_DIRECTORY_ENTRY_IAT = 12,\r\n    IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13,\r\n    IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14,\r\n}\r\n\r\nexport const IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16;\r\n\r\nexport enum ImageSection {\r\n    IMAGE_SCN_TYPE_NO_PAD = 0x00000008,\r\n\r\n    IMAGE_SCN_CNT_CODE = 0x00000020,\r\n    IMAGE_SCN_CNT_INITIALIZED_DATA = 0x00000040,\r\n    IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x00000080,\r\n\r\n    IMAGE_SCN_LNK_OTHER = 0x00000100,\r\n    IMAGE_SCN_LNK_INFO = 0x00000200,\r\n    IMAGE_SCN_LNK_REMOVE = 0x00000800,\r\n    IMAGE_SCN_LNK_COMDAT = 0x00001000,\r\n\r\n    IMAGE_SCN_NO_DEFER_SPEC_EXC = 0x00004000,\r\n    IMAGE_SCN_GPREL = 0x00008000,\r\n\r\n    IMAGE_SCN_MEM_PURGEABLE = 0x00020000,\r\n    IMAGE_SCN_MEM_16BIT = 0x00020000,\r\n    IMAGE_SCN_MEM_LOCKED = 0x00040000,\r\n    IMAGE_SCN_MEM_PRELOAD = 0x00080000,\r\n\r\n    IMAGE_SCN_ALIGN_1BYTES = 0x00100000,\r\n    IMAGE_SCN_ALIGN_2BYTES = 0x00200000,\r\n    IMAGE_SCN_ALIGN_4BYTES = 0x00300000,\r\n    IMAGE_SCN_ALIGN_8BYTES = 0x00400000,\r\n    IMAGE_SCN_ALIGN_16BYTES = 0x00500000,\r\n    IMAGE_SCN_ALIGN_32BYTES = 0x00600000,\r\n    IMAGE_SCN_ALIGN_64BYTES = 0x00700000,\r\n    IMAGE_SCN_ALIGN_128BYTES = 0x00800000,\r\n    IMAGE_SCN_ALIGN_256BYTES = 0x00900000,\r\n    IMAGE_SCN_ALIGN_512BYTES = 0x00A00000,\r\n    IMAGE_SCN_ALIGN_1024BYTES = 0x00B00000,\r\n    IMAGE_SCN_ALIGN_2048BYTES = 0x00C00000,\r\n    IMAGE_SCN_ALIGN_4096BYTES = 0x00D00000,\r\n    IMAGE_SCN_ALIGN_8192BYTES = 0x00E00000,\r\n\r\n    IMAGE_SCN_LNK_NRELOC_OVFL = 0x01000000,\r\n    IMAGE_SCN_MEM_DISCARDABLE = 0x02000000,\r\n    IMAGE_SCN_MEM_NOT_CACHED = 0x04000000,\r\n    IMAGE_SCN_MEM_NOT_PAGED = 0x08000000,\r\n    IMAGE_SCN_MEM_SHARED = 0x10000000,\r\n    IMAGE_SCN_MEM_EXECUTE = 0x20000000,\r\n    IMAGE_SCN_MEM_READ = 0x40000000,\r\n    IMAGE_SCN_MEM_WRITE = 0x80000000,\r\n\r\n    IMAGE_SCN_SCALE_INDEX = 0x00000001,\r\n}","import * as S from \"./structures\";\r\nimport * as F from \"./image-flags\";\r\n\r\nexport interface FileDataProvider {\r\n    getU1(p: number): number;\r\n    getU2(p: number): number;\r\n    getU4(p: number): number;\r\n    getData(p: number, sz: number): Uint8Array;\r\n}\r\n\r\n//\r\n// Basic structures.\r\n//\r\n\r\nexport function loadU1Field(d: FileDataProvider, p: number): S.U1Field {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p)\r\n    };\r\n}\r\n\r\nexport function loadU2Field(d: FileDataProvider, p: number): S.U2Field {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p)\r\n    };\r\n}\r\n\r\nexport function loadU4Field(d: FileDataProvider, p: number): S.U4Field {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p)\r\n    };\r\n}\r\n\r\nexport function loadU8Field(d: FileDataProvider, p: number): S.U8Field {\r\n    const low = d.getU4(p);\r\n    const high = d.getU4(p + 4);\r\n\r\n    return {\r\n        _offset: p, _size: 8, data: d.getData(p, 8), low, high\r\n    };\r\n}\r\n\r\nexport function loadU1EnumField<T>(d: FileDataProvider, p: number): S.U1EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU2EnumField<T>(d: FileDataProvider, p: number): S.U2EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU4EnumField<T>(d: FileDataProvider, p: number): S.U4EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeByteArray(d: FileDataProvider, p: number, sz: number): S.Field {\r\n    return {\r\n        _offset: p, _size: sz, data: d.getData(p, sz)\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeAsciiStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const value = String.fromCharCode.apply(null, Array.from(data));\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadStructArrayByCount<T extends S.FileData>(\r\n    d: FileDataProvider,\r\n    p: number,\r\n    loader: (d: FileDataProvider, p: number) => T,\r\n    count: number): S.StructArray<T> {\r\n\r\n    let items: T[] = [];\r\n    let ptr = p;\r\n    for (let i = 0; i < count; i++) {\r\n        const s = loader(d, ptr);\r\n        items.push(s);\r\n        ptr += s._size;\r\n    }\r\n\r\n    return { _offset: p, _size: ptr - p, items };\r\n}\r\n\r\n//\r\n// Image headers.\r\n//\r\n\r\nexport function loadImageDosHeader(d: FileDataProvider, p: number): S.ImageDosHeader {\r\n    let ptr = p;\r\n\r\n    const e_magic = loadU2Field(d, ptr);\r\n    ptr += e_magic._size;\r\n\r\n    const e_cblp = loadU2Field(d, ptr);\r\n    ptr += e_cblp._size;\r\n\r\n    const e_cp = loadU2Field(d, ptr);\r\n    ptr += e_cp._size;\r\n\r\n    const e_crlc = loadU2Field(d, ptr);\r\n    ptr += e_crlc._size;\r\n\r\n    const e_cparhdr = loadU2Field(d, ptr);\r\n    ptr += e_cparhdr._size;\r\n\r\n    const e_minalloc = loadU2Field(d, ptr);\r\n    ptr += e_minalloc._size;\r\n\r\n    const e_maxalloc = loadU2Field(d, ptr);\r\n    ptr += e_maxalloc._size;\r\n\r\n    const e_ss = loadU2Field(d, ptr);\r\n    ptr += e_ss._size;\r\n\r\n    const e_sp = loadU2Field(d, ptr);\r\n    ptr += e_sp._size;\r\n\r\n    const e_csum = loadU2Field(d, ptr);\r\n    ptr += e_csum._size;\r\n\r\n    const e_ip = loadU2Field(d, ptr);\r\n    ptr += e_ip._size;\r\n\r\n    const e_cs = loadU2Field(d, ptr);\r\n    ptr += e_cs._size;\r\n\r\n    const e_lfarlc = loadU2Field(d, ptr);\r\n    ptr += e_lfarlc._size;\r\n\r\n    const e_ovno = loadU2Field(d, ptr);\r\n    ptr += e_ovno._size;\r\n\r\n    const e_res = loadFixedSizeByteArray(d, ptr, 4 * 2);\r\n    ptr += e_res._size;\r\n\r\n    const e_oemid = loadU2Field(d, ptr);\r\n    ptr += e_oemid._size;\r\n\r\n    const e_oeminfo = loadU2Field(d, ptr);\r\n    ptr += e_oeminfo._size;\r\n\r\n    const e_res2 = loadFixedSizeByteArray(d, ptr, 10 * 2);\r\n    ptr += e_res2._size;\r\n\r\n    const e_lfanew = loadU4Field(d, ptr);\r\n    ptr += e_lfanew._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        e_magic,\r\n        e_cblp,\r\n        e_cp,\r\n        e_crlc,\r\n        e_cparhdr,\r\n        e_minalloc,\r\n        e_maxalloc,\r\n        e_ss,\r\n        e_sp,\r\n        e_csum,\r\n        e_ip,\r\n        e_cs,\r\n        e_lfarlc,\r\n        e_ovno,\r\n        e_res,\r\n        e_oemid,\r\n        e_oeminfo,\r\n        e_res2,\r\n        e_lfanew,\r\n    };\r\n}\r\n\r\nexport function loadImageFileHeader(d: FileDataProvider, p: number): S.ImageFileHeader {\r\n    let ptr = p;\r\n\r\n    const Machine = loadU2Field(d, ptr);\r\n    ptr += Machine._size;\r\n\r\n    const NumberOfSections = loadU2Field(d, ptr);\r\n    ptr += NumberOfSections._size;\r\n\r\n    const TimeDateStamp = loadU4Field(d, ptr);\r\n    ptr += TimeDateStamp._size;\r\n\r\n    const PointerToSymbolTable = loadU4Field(d, ptr);\r\n    ptr += PointerToSymbolTable._size;\r\n\r\n    const NumberOfSymbols = loadU4Field(d, ptr);\r\n    ptr += NumberOfSymbols._size;\r\n\r\n    const SizeOfOptionalHeader = loadU2Field(d, ptr);\r\n    ptr += SizeOfOptionalHeader._size;\r\n\r\n    const Characteristics = loadU2EnumField<F.ImageFile>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Machine,\r\n        NumberOfSections,\r\n        TimeDateStamp,\r\n        PointerToSymbolTable,\r\n        NumberOfSymbols,\r\n        SizeOfOptionalHeader,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader32(d: FileDataProvider, p: number): S.ImageOptionalHeader32 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const BaseOfData = loadU4Field(d, ptr);\r\n    ptr += BaseOfData._size;\r\n\r\n    const ImageBase = loadU4Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        BaseOfData,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader64(d: FileDataProvider, p: number): S.ImageOptionalHeader64 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const ImageBase = loadU8Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageDataDirectory(d: FileDataProvider, p: number): S.ImageDataDirectory {\r\n    let ptr = p;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        VirtualAddress,\r\n        Size,\r\n    };\r\n}\r\n\r\nexport function loadImageSectionHeader(d: FileDataProvider, p: number): S.ImageSectionHeader {\r\n    let ptr = p;\r\n\r\n    const Name = loadFixedSizeAsciiStringField(d, ptr, 8);\r\n    ptr += Name._size;\r\n\r\n    const VirtualSize = loadU4Field(d, ptr);\r\n    ptr += VirtualSize._size;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const SizeOfRawData = loadU4Field(d, ptr);\r\n    ptr += SizeOfRawData._size;\r\n\r\n    const PointerToRawData = loadU4Field(d, ptr);\r\n    ptr += PointerToRawData._size;\r\n\r\n    const PointerToRelocations = loadU4Field(d, ptr);\r\n    ptr += PointerToRelocations._size;\r\n\r\n    const PointerToLinenumbers = loadU4Field(d, ptr);\r\n    ptr += PointerToLinenumbers._size;\r\n\r\n    const NumberOfRelocations = loadU2Field(d, ptr);\r\n    ptr += NumberOfRelocations._size;\r\n\r\n    const NumberOfLinenumbers = loadU2Field(d, ptr);\r\n    ptr += NumberOfLinenumbers._size;\r\n\r\n    const Characteristics = loadU4EnumField<F.ImageSection>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Name,\r\n        VirtualSize,\r\n        VirtualAddress,\r\n        SizeOfRawData,\r\n        PointerToRawData,\r\n        PointerToRelocations,\r\n        PointerToLinenumbers,\r\n        NumberOfRelocations,\r\n        NumberOfLinenumbers,\r\n        Characteristics,\r\n    };\r\n}","import * as S from \"./structures\";\r\nimport * as L from \"./loader\";\r\nimport * as F from \"./image-flags\";\r\nimport * as E from \"./error\";\r\n\r\nexport class PEImage implements L.FileDataProvider {\r\n    public static load(buf: ArrayBuffer): PEImage {\r\n        return new PEImage(buf);\r\n    }\r\n\r\n    public getU1(p: number): number {\r\n        this.check(p, 1);\r\n        return this.data.getUint8(p);\r\n    }\r\n\r\n    public getU2(p: number): number {\r\n        this.check(p, 2);\r\n        return this.data.getUint16(p, true);\r\n    }\r\n\r\n    public getU4(p: number): number {\r\n        this.check(p, 3);\r\n        return this.data.getUint32(p, true);\r\n    }\r\n\r\n    public getData(p: number, sz: number): Uint8Array {\r\n        this.check(p, sz);\r\n        return new Uint8Array(this.data.buffer.slice(p, p + sz));\r\n    }\r\n\r\n    private check(p: number, sz: number): void {\r\n        if (p < 0 || p >= this.data.byteLength\r\n            || sz < 0 || p + sz > this.data.byteLength) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_POSITION, p, sz);\r\n        }\r\n    }\r\n\r\n    private constructor(buf: ArrayBuffer) {\r\n        this.data = new DataView(buf);\r\n        this.loadHeaders();\r\n    }\r\n\r\n    private loadHeaders(): void {\r\n        let ptr = 0;\r\n        this.dosHeader = L.loadImageDosHeader(this, ptr);\r\n\r\n        if (this.dosHeader.e_magic.value != F.IMAGE_DOS_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DOS_SIGNATURE, ptr, 2);\r\n        }\r\n\r\n        ptr = this.dosHeader.e_lfanew.value;\r\n        this.peSignature = L.loadU4Field(this, ptr);\r\n\r\n        if (this.peSignature.value != F.IMAGE_NT_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_PE_SIGNATURE, ptr, 4);\r\n        }\r\n\r\n        ptr += this.peSignature._size;\r\n        this.fileHeader = L.loadImageFileHeader(this, ptr);\r\n\r\n        ptr += this.fileHeader._size;\r\n        const magic = L.loadU2Field(this, ptr);\r\n        switch (magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader32(this, ptr);\r\n                break;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader64(this, ptr);\r\n                break;\r\n            default:\r\n                throw new E.PEError(E.PEErrorType.INVALID_OPTIONAL_HEADER_MAGIC, ptr, 2);\r\n        }\r\n\r\n        if (this.optionalHeader.NumberOfRvaAndSizes.value != F.IMAGE_NUMBEROF_DIRECTORY_ENTRIES) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_DIRECTORY_COUNT,\r\n                this.optionalHeader.NumberOfRvaAndSizes._offset,\r\n                this.optionalHeader.NumberOfRvaAndSizes._size);\r\n        }\r\n\r\n        ptr += this.optionalHeader._size;\r\n        this.dataDirectories = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageDataDirectory,\r\n            this.optionalHeader.NumberOfRvaAndSizes.value);\r\n\r\n        ptr += this.dataDirectories._size;\r\n        this.sectionHeaders = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageSectionHeader,\r\n            this.fileHeader.NumberOfSections.value);\r\n    }\r\n\r\n    private readonly data: DataView;\r\n\r\n    private dosHeader?: S.ImageDosHeader;\r\n    private peSignature?: S.U4Field;\r\n    private fileHeader?: S.ImageFileHeader;\r\n    private optionalHeader?: S.ImageOptionalHeader32 | S.ImageOptionalHeader64;\r\n    private dataDirectories?: S.StructArray<S.ImageDataDirectory>;\r\n    private sectionHeaders?: S.StructArray<S.ImageSectionHeader>;\r\n}\r\n","export function createResNavDataMessage(navList: W.NavData[]): W.ResNavDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_NAV_DATA,\r\n        navList\r\n    };\r\n}\r\n\r\nexport function createResPageDataMessage(pageData: W.PageData): W.ResPageDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PAGE_DATA,\r\n        pageData\r\n    };\r\n}\r\n\r\nexport function createResPEErrorMessage(error: string): W.ResPEErrorMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_ERROR,\r\n        error\r\n    };\r\n}\r\n","import * as M from \"./message\";\r\nimport { PEImage } from \"./pe/image\";\r\n\r\nlet pe: PEImage | null = null;\r\n\r\nonmessage = (ev) => {\r\n    const msg = ev.data as W.WorkerMessage;\r\n    switch (msg.type) {\r\n        case W.WorkerMessageType.REQ_OPEN_FILE:\r\n            handleReqOpenFile(msg as W.ReqOpenFileMessage);\r\n            break;\r\n    }\r\n};\r\n\r\nfunction handleReqOpenFile(msg: W.ReqOpenFileMessage): void {\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = ev => {\r\n        const buf = <ArrayBuffer>(<FileReader>ev.target).result;\r\n        pe = PEImage.load(buf);\r\n    };\r\n\r\n    reader.onerror = ev => {\r\n        pe = null;\r\n        const msg = M.createResPEErrorMessage(\"Can't open file.\");\r\n        postMessage(msg);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(msg.file);\r\n}\r\n"],"sourceRoot":""}