{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker/page-data/formatter.ts","webpack:///./src/worker/pe/image-flags.ts","webpack:///./src/worker/pe/utils.ts","webpack:///./src/worker/page-data/nav-data.ts","webpack:///./src/worker/page-data/mds-table.ts","webpack:///./src/worker/page-data/metadata-headers.ts","webpack:///./src/worker/page-data/headers.ts","webpack:///./src/worker/page-data/generator.ts","webpack:///./src/worker/pe/error.ts","webpack:///./src/worker/pe/loader.ts","webpack:///./src/worker/pe/image.ts","webpack:///./src/worker/message.ts","webpack:///./src/worker/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","formatU1RawHex","padZeroLeft","toString","toUpperCase","formatU2RawHex","formatU4RawHex","formatU1Hex","formatU2Hex","formatU4Hex","formatHexDec","formatDec","v","toLocaleString","formatBytes","bytes","lineWidth","lines","start","length","line","Array","from","subarray","map","b","join","push","str","len","repeat","formatUIntField","f","sz","showDec","hex","offset","_offset","size","_size","rawData","data","formatStructTitle","title","formatU1Field","formatU2Field","formatU4Field","formatU8Field","high","low","formatBytesField","formatStringField","IMAGE_DOS_SIGNATURE","IMAGE_NT_SIGNATURE","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_OPTIONAL_HDR64_MAGIC","ImageFile","ImageFileMachine","ImageSubsystem","ImageDllCharacteristics","ImageDirectoryEntry","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","ImageSection","ComImageFlags","MetadataSignature","MetadataTableIndex","NumberOfMdTables","calculatePadding","dataSize","align","count1","mask","isSetLong","bit","generateNavList","pe","pageID","navList","target","children","elemID","navMD","isManaged","hasMetadata","hasStrongNameSignature","generateMDHeadersNavData","navMDT","getMetadataTableHeader","generateMDTablesNavData","F","FM","generateMdsTablePageData","nav","tableHeader","h","groups","items","Reserved","MajorVersion","MinorVersion","HeapSizes","Reserved2","Valid","Sorted","Rows","generateMDTableHeader","tableInfo","id","index","valid","isMetadataTableValid","sorted","isMetadataTableSorted","rows","getMetadataTableRows","generateMDTableList","generateMetadataHeadersPageData","cliHeader","getCliHeader","cb","MajorRuntimeVersion","MinorRuntimeVersion","MetaData","VirtualAddress","Size","Flags","EntryPointToken","Resources","StrongNameSignature","CodeManagerTable","VTableFixups","ExportAddressTableJumps","ManagedNativeHeader","generateCliHeader","metadataRoot","getMetadataRoot","Signature","VersionLength","VersionString","VersionPadding","Streams","generateMetadataRoot","streamHeaders","getMetadataStreamHeaders","Name","Offset","Padding","generateMetadataStreamHeader","snSignature","getStrongNameSignature","generateSNSignature","generateHeadersPageData","dosHeader","getDosHeader","e_magic","e_cblp","e_cp","e_crlc","e_cparhdr","e_minalloc","e_maxalloc","e_ss","e_sp","e_csum","e_ip","e_cs","e_lfarlc","e_ovno","e_res","e_oemid","e_oeminfo","e_res2","e_lfanew","generateDosHeader","peSignature","getPESignature","generatePESignature","fileHeader","getFileHeader","Machine","NumberOfSections","TimeDateStamp","PointerToSymbolTable","NumberOfSymbols","SizeOfOptionalHeader","Characteristics","generateFileHeader","optionalHeader","getOptionalHeader","Magic","MajorLinkerVersion","MinorLinkerVersion","SizeOfCode","SizeOfInitializedData","SizeOfUninitializedData","AddressOfEntryPoint","BaseOfCode","BaseOfData","ImageBase","SectionAlignment","FileAlignment","MajorOperatingSystemVersion","MinorOperatingSystemVersion","MajorImageVersion","MinorImageVersion","MajorSubsystemVersion","MinorSubsystemVersion","Win32VersionValue","SizeOfImage","SizeOfHeaders","CheckSum","Subsystem","DllCharacteristics","SizeOfStackReserve","SizeOfStackCommit","SizeOfHeapReserve","SizeOfHeapCommit","LoaderFlags","NumberOfRvaAndSizes","fillOptionalHeader32Fields","fillOptionalHeader64Fields","generateOptionalHeader","dataDirectories","getDataDirectories","generateDataDirectories","sectionHeaders","getSectionHeaders","VirtualSize","SizeOfRawData","PointerToRawData","PointerToRelocations","PointerToLinenumbers","NumberOfRelocations","NumberOfLinenumbers","generateSectionHeaders","headers_1","metadata_headers_1","mds_table_1","generatePageData","PEError","_super","type","_this","this","__extends","Error","U","loadU1Field","getData","getU1","loadU2Field","getU2","loadU4Field","getU4","loadU8Field","loadU2EnumField","loadU4EnumField","loadFixedSizeByteArrayField","loadFixedSizeAsciiStringField","String","fromCharCode","apply","filter","loadNullTerminatedStringField","ptr","slice","Uint8Array","loadStructArrayByCount","loader","count","loadImageDataDirectory","loadU1EnumField","loadImageDosHeader","loadImageFileHeader","loadImageOptionalHeader32","loadImageOptionalHeader64","loadImageSectionHeader","loadCliHeader","loadMetadataRoot","loadMetadataStreamHeader","loadMetadataTableHeader","L","E","PEImage","buf","DataView","loadHeaders","load","check","getUint8","getUint16","getUint32","buffer","is32Bit","optHdr","dd","isDataDirectoryValid","IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","hasManagedResources","info","metadataTableInfo","rvaToOffset","metadataStreamHeaders","mdRoot","getMetadataStreamHeader","headers","shift","strongNameSignature","metadataTableHeader","sh","fillMetadataTableInfo","rva","getSectionHeaderByRva","offsetToRva","getSectionHeaderByOffset","byteLength","nValid","createResNavDataMessage","createResPageDataMessage","pageData","createResPEPropsMessage","createResPEErrorMessage","error","M","image_1","generator_1","nav_data_1","onmessage","ev","msg","reader","FileReader","onload","result","pageDataMsg","postMessage","pePropsMsg","navMsg","ex","msg_1","message","JSON","stringify","onerror","readAsArrayBuffer","file","handleReqOpenFile","res","handleReqOpenNav"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","import * as S from \"../pe/structures\";\r\n\r\nexport function formatU1RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 2);\r\n}\r\n\r\nexport function formatU2RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 4);\r\n}\r\n\r\nexport function formatU4RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 8);\r\n}\r\n\r\nexport function formatU1Hex(d: number): string {\r\n    return `${formatU1RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU2Hex(d: number): string {\r\n    return `${formatU2RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU4Hex(d: number): string {\r\n    return `${formatU4RawHex(d)}h`;\r\n}\r\n\r\nexport function formatHexDec(d: number): string {\r\n    return `${d.toString(16).toUpperCase()}h (${d})`;\r\n}\r\n\r\nexport function formatDec(v: number): string {\r\n    return v.toLocaleString();\r\n}\r\n\r\nexport function formatBytes(bytes: Uint8Array, lineWidth: number = 16): string[] {\r\n    let lines: string[] = [];\r\n    for (let start = 0; start < bytes.length; start += lineWidth) {\r\n        const line = Array.from(bytes.subarray(start, start + lineWidth))\r\n            .map(b => formatU1RawHex(b)).join(\"-\");\r\n        lines.push(line);\r\n    }\r\n    return lines;\r\n}\r\n\r\nexport function formatStructTitle(s: S.FileData, title: string): string {\r\n    return `${title} [${formatU4Hex(s._offset)} - ${formatU4Hex(s._offset + s._size)} : ${formatHexDec(s._size)}]`;\r\n}\r\n\r\nexport function formatU1Field(name: string, f: S.U1Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 1, showDec);\r\n}\r\n\r\nexport function formatU2Field(name: string, f: S.U2Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 2, showDec);\r\n}\r\n\r\nexport function formatU4Field(name: string, f: S.U4Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 4, showDec);\r\n}\r\n\r\nexport function formatU8Field(name: string, f: S.U8Field, showDec?: boolean): W.StructItem {\r\n    let value = `${formatU4RawHex(f.high)} ${formatU4Hex(f.low)}`;\r\n\r\n    if (showDec && f.high < 0x1FFFFF) {\r\n        const long = f.high * 0x100000000 + f.low;\r\n        value += ` (${formatDec(long)})`;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value,\r\n    };\r\n}\r\n\r\nexport function formatBytesField(name: string, f: S.Field): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: \"\",\r\n    }\r\n}\r\n\r\nexport function formatStringField(name: string, f: S.StringField): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: `\"${f.value}\"`,\r\n    }\r\n}\r\n\r\nfunction padZeroLeft(str: string, len: number): string {\r\n    if (str.length < len) {\r\n        return \"0\".repeat(len - str.length) + str;\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n\r\nfunction formatUIntField(name: string, f: S.UIntField, sz: number, showDec?: boolean): W.StructItem {\r\n    let hex: string;\r\n    switch (sz) {\r\n        case 1: hex = formatU1Hex(f.value); break;\r\n        case 2: hex = formatU2Hex(f.value); break;\r\n        case 4: hex = formatU4Hex(f.value); break;\r\n        default: hex = f.value.toString(16).toUpperCase(); break;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: showDec ? `${hex} (${formatDec(f.value)})` : hex,\r\n    }\r\n}\r\n","export const IMAGE_DOS_SIGNATURE = 0x5A4D;  // MZ\r\n\r\nexport const IMAGE_NT_SIGNATURE = 0x00004550;  // PE00\r\n\r\nexport const IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\r\nexport const IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\r\n\r\nexport enum ImageFile {\r\n    IMAGE_FILE_RELOCS_STRIPPED = 0x0001,\r\n    IMAGE_FILE_EXECUTABLE_IMAGE = 0x0002,\r\n    IMAGE_FILE_LINE_NUMS_STRIPPED = 0x0004,\r\n    IMAGE_FILE_LOCAL_SYMS_STRIPPED = 0x0008,\r\n    IMAGE_FILE_AGGRESIVE_WS_TRIM = 0x0010,\r\n    IMAGE_FILE_LARGE_ADDRESS_AWARE = 0x0020,\r\n    IMAGE_FILE_BYTES_REVERSED_LO = 0x0080,\r\n    IMAGE_FILE_32BIT_MACHINE = 0x0100,\r\n    IMAGE_FILE_DEBUG_STRIPPED = 0x0200,\r\n    IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 0x0400,\r\n    IMAGE_FILE_NET_RUN_FROM_SWAP = 0x0800,\r\n    IMAGE_FILE_SYSTEM = 0x1000,\r\n    IMAGE_FILE_DLL = 0x2000,\r\n    IMAGE_FILE_UP_SYSTEM_ONLY = 0x4000,\r\n    IMAGE_FILE_BYTES_REVERSED_HI = 0x8000,\r\n}\r\n\r\nexport enum ImageFileMachine {\r\n    IMAGE_FILE_MACHINE_UNKNOWN = 0,\r\n    IMAGE_FILE_MACHINE_TARGET_HOST = 0x0001,\r\n    IMAGE_FILE_MACHINE_I386 = 0x014c,\r\n    IMAGE_FILE_MACHINE_R3000 = 0x0162,\r\n    IMAGE_FILE_MACHINE_R4000 = 0x0166,\r\n    IMAGE_FILE_MACHINE_R10000 = 0x0168,\r\n    IMAGE_FILE_MACHINE_WCEMIPSV2 = 0x0169,\r\n    IMAGE_FILE_MACHINE_ALPHA = 0x0184,\r\n    IMAGE_FILE_MACHINE_SH3 = 0x01a2,\r\n    IMAGE_FILE_MACHINE_SH3DSP = 0x01a3,\r\n    IMAGE_FILE_MACHINE_SH3E = 0x01a4,\r\n    IMAGE_FILE_MACHINE_SH4 = 0x01a6,\r\n    IMAGE_FILE_MACHINE_SH5 = 0x01a8,\r\n    IMAGE_FILE_MACHINE_ARM = 0x01c0,\r\n    IMAGE_FILE_MACHINE_THUMB = 0x01c2,\r\n    IMAGE_FILE_MACHINE_ARMNT = 0x01c4,\r\n    IMAGE_FILE_MACHINE_AM33 = 0x01d3,\r\n    IMAGE_FILE_MACHINE_POWERPC = 0x01F0,\r\n    IMAGE_FILE_MACHINE_POWERPCFP = 0x01f1,\r\n    IMAGE_FILE_MACHINE_IA64 = 0x0200,\r\n    IMAGE_FILE_MACHINE_MIPS16 = 0x0266,\r\n    IMAGE_FILE_MACHINE_ALPHA64 = 0x0284,\r\n    IMAGE_FILE_MACHINE_MIPSFPU = 0x0366,\r\n    IMAGE_FILE_MACHINE_MIPSFPU16 = 0x0466,\r\n    IMAGE_FILE_MACHINE_AXP64 = IMAGE_FILE_MACHINE_ALPHA64,\r\n    IMAGE_FILE_MACHINE_TRICORE = 0x0520,\r\n    IMAGE_FILE_MACHINE_CEF = 0x0CEF,\r\n    IMAGE_FILE_MACHINE_EBC = 0x0EBC,\r\n    IMAGE_FILE_MACHINE_AMD64 = 0x8664,\r\n    IMAGE_FILE_MACHINE_M32R = 0x9041,\r\n    IMAGE_FILE_MACHINE_ARM64 = 0xAA64,\r\n    IMAGE_FILE_MACHINE_CEE = 0xC0EE,\r\n}\r\n\r\nexport enum ImageSubsystem {\r\n    IMAGE_SUBSYSTEM_UNKNOWN = 0,\r\n    IMAGE_SUBSYSTEM_NATIVE = 1,\r\n    IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,\r\n    IMAGE_SUBSYSTEM_OS2_CUI = 5,\r\n    IMAGE_SUBSYSTEM_POSIX_CUI = 7,\r\n    IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9,\r\n    IMAGE_SUBSYSTEM_EFI_APPLICATION = 10,\r\n    IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11,\r\n    IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12,\r\n    IMAGE_SUBSYSTEM_EFI_ROM = 13,\r\n    IMAGE_SUBSYSTEM_XBOX = 14,\r\n    IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16,\r\n    IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 17,\r\n}\r\n\r\nexport enum ImageDllCharacteristics {\r\n    IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020,\r\n    IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 0x0040,\r\n    IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 0x0080,\r\n    IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 0x0100,\r\n    IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 0x0200,\r\n    IMAGE_DLLCHARACTERISTICS_NO_SEH = 0x0400,\r\n    IMAGE_DLLCHARACTERISTICS_NO_BIND = 0x0800,\r\n    IMAGE_DLLCHARACTERISTICS_APPCONTAINER = 0x1000,\r\n    IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 0x2000,\r\n    IMAGE_DLLCHARACTERISTICS_GUARD_CF = 0x4000,\r\n    IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 0x8000,\r\n}\r\n\r\nexport enum ImageDirectoryEntry {\r\n    IMAGE_DIRECTORY_ENTRY_EXPORT = 0,\r\n    IMAGE_DIRECTORY_ENTRY_IMPORT = 1,\r\n    IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,\r\n    IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,\r\n    IMAGE_DIRECTORY_ENTRY_SECURITY = 4,\r\n    IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,\r\n    IMAGE_DIRECTORY_ENTRY_DEBUG = 6,\r\n    IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7,\r\n    IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,\r\n    IMAGE_DIRECTORY_ENTRY_TLS = 9,\r\n    IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,\r\n    IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,\r\n    IMAGE_DIRECTORY_ENTRY_IAT = 12,\r\n    IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13,\r\n    IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14,\r\n}\r\n\r\nexport const IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16;\r\n\r\nexport enum ImageSection {\r\n    IMAGE_SCN_TYPE_NO_PAD = 0x00000008,\r\n\r\n    IMAGE_SCN_CNT_CODE = 0x00000020,\r\n    IMAGE_SCN_CNT_INITIALIZED_DATA = 0x00000040,\r\n    IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x00000080,\r\n\r\n    IMAGE_SCN_LNK_OTHER = 0x00000100,\r\n    IMAGE_SCN_LNK_INFO = 0x00000200,\r\n    IMAGE_SCN_LNK_REMOVE = 0x00000800,\r\n    IMAGE_SCN_LNK_COMDAT = 0x00001000,\r\n\r\n    IMAGE_SCN_NO_DEFER_SPEC_EXC = 0x00004000,\r\n    IMAGE_SCN_GPREL = 0x00008000,\r\n\r\n    IMAGE_SCN_MEM_PURGEABLE = 0x00020000,\r\n    IMAGE_SCN_MEM_16BIT = 0x00020000,\r\n    IMAGE_SCN_MEM_LOCKED = 0x00040000,\r\n    IMAGE_SCN_MEM_PRELOAD = 0x00080000,\r\n\r\n    IMAGE_SCN_ALIGN_1BYTES = 0x00100000,\r\n    IMAGE_SCN_ALIGN_2BYTES = 0x00200000,\r\n    IMAGE_SCN_ALIGN_4BYTES = 0x00300000,\r\n    IMAGE_SCN_ALIGN_8BYTES = 0x00400000,\r\n    IMAGE_SCN_ALIGN_16BYTES = 0x00500000,\r\n    IMAGE_SCN_ALIGN_32BYTES = 0x00600000,\r\n    IMAGE_SCN_ALIGN_64BYTES = 0x00700000,\r\n    IMAGE_SCN_ALIGN_128BYTES = 0x00800000,\r\n    IMAGE_SCN_ALIGN_256BYTES = 0x00900000,\r\n    IMAGE_SCN_ALIGN_512BYTES = 0x00A00000,\r\n    IMAGE_SCN_ALIGN_1024BYTES = 0x00B00000,\r\n    IMAGE_SCN_ALIGN_2048BYTES = 0x00C00000,\r\n    IMAGE_SCN_ALIGN_4096BYTES = 0x00D00000,\r\n    IMAGE_SCN_ALIGN_8192BYTES = 0x00E00000,\r\n\r\n    IMAGE_SCN_LNK_NRELOC_OVFL = 0x01000000,\r\n    IMAGE_SCN_MEM_DISCARDABLE = 0x02000000,\r\n    IMAGE_SCN_MEM_NOT_CACHED = 0x04000000,\r\n    IMAGE_SCN_MEM_NOT_PAGED = 0x08000000,\r\n    IMAGE_SCN_MEM_SHARED = 0x10000000,\r\n    IMAGE_SCN_MEM_EXECUTE = 0x20000000,\r\n    IMAGE_SCN_MEM_READ = 0x40000000,\r\n    IMAGE_SCN_MEM_WRITE = 0x80000000,\r\n\r\n    IMAGE_SCN_SCALE_INDEX = 0x00000001,\r\n}\r\n\r\n//\r\n// Metadata structures.\r\n//\r\n\r\nexport enum ComImageFlags {\r\n    COMIMAGE_FLAGS_ILONLY = 0x00000001,\r\n    COMIMAGE_FLAGS_32BITREQUIRED = 0x00000002,\r\n    COMIMAGE_FLAGS_IL_LIBRARY = 0x00000004,\r\n    COMIMAGE_FLAGS_STRONGNAMESIGNED = 0x00000008,\r\n    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 0x00000010,\r\n    COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x00010000,\r\n    COMIMAGE_FLAGS_32BITPREFERRED = 0x00020000,\r\n}\r\n\r\nexport const MetadataSignature = 0x424A5342;\r\n\r\nexport const enum MetadataStreamName {\r\n    Table = \"#~\",\r\n    Strings = \"#Strings\",\r\n    US = \"#US\",\r\n    GUID = \"#GUID\",\r\n    Blob = \"#Blob\",\r\n}\r\n\r\nexport const enum MetadataTableHeapSize {\r\n    String = 0,\r\n    GUID = 1,\r\n    Blob = 2,\r\n}\r\n\r\nexport enum MetadataTableIndex {\r\n    Module = 0x00,\r\n    TypeRef = 0x01,\r\n    TypeDef = 0x02,\r\n    FieldPtr = 0x03,\r\n    Field = 0x04,\r\n    MethodPtr = 0x05,\r\n    MethodDef = 0x06,\r\n    ParamPtr = 0x07,\r\n    Param = 0x08,\r\n    InterfaceImpl = 0x09,\r\n    MemberRef = 0x0A,\r\n    Constant = 0x0B,\r\n    CustomAttribute = 0x0C,\r\n    FieldMarshal = 0x0D,\r\n    DeclSecurity = 0x0E,\r\n    ClassLayout = 0x0F,\r\n    FieldLayout = 0x10,\r\n    StandAloneSig = 0x11,\r\n    EventMap = 0x12,\r\n    EventPtr = 0x13,\r\n    Event = 0x14,\r\n    PropertyMap = 0x15,\r\n    PropertyPtr = 0x16,\r\n    Property = 0x17,\r\n    MethodSemantics = 0x18,\r\n    MethodImpl = 0x19,\r\n    ModuleRef = 0x1A,\r\n    TypeSpec = 0x1B,\r\n    ImplMap = 0x1C,\r\n    FieldRVA = 0x1D,\r\n    ENCLog = 0x1E,\r\n    ENCMap = 0x1F,\r\n    Assembly = 0x20,\r\n    AssemblyProcessor = 0x21,\r\n    AssemblyOS = 0x22,\r\n    AssemblyRef = 0x23,\r\n    AssemblyRefProcessor = 0x24,\r\n    AssemblyRefOS = 0x25,\r\n    File = 0x26,\r\n    ExportedType = 0x27,\r\n    ManifestResource = 0x28,\r\n    NestedClass = 0x29,\r\n    GenericParam = 0x2A,\r\n    MethodSpec = 0x2B,\r\n    GenericParamConstraint = 0x2C,\r\n\r\n    String = 0x70,\r\n}\r\n\r\nexport const NumberOfMdTables = 45;\r\n","export function calculatePadding(dataSize: number, align: number = 4): number {\n    const r = dataSize % align;\n    if (r == 0) {\n        return 0;\n    } else {\n        return align - r;\n    }\n}\n\nexport function count1(n: number) {\n    let c = 0;\n    for (let i = 0, mask = 1; i < 32; i++ , mask <<= 1) {\n        if (n & mask)\n            c++;\n    }\n    return c;\n}\n\nexport function isSetLong(high: number, low: number, bit: number): boolean {\n    return bit >= 0 && bit < 64 &&\n        (bit < 32 && ((low & (1 << bit)) != 0)) ||\n        (bit >= 32 && (high & (1 << (bit - 32))) != 0);\n}","import { PEImage } from \"../pe/image\";\r\n\r\nexport function generateNavList(pe: PEImage): W.NavData[] {\r\n    let navList: W.NavData[] = [generateHeadersNavData(pe)];\r\n\r\n    const navMD = generateMDHeadersNavData(pe);\r\n    if (navMD) navList.push(navMD);\r\n\r\n    const navMDT = generateMDTablesNavData(pe);\r\n    if (navMDT) navList.push(navMDT);\r\n\r\n    return navList;\r\n}\r\n\r\nfunction generateHeadersNavData(pe: PEImage): W.NavData {\r\n    const pageID = W.PageID.HEADERS;\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.HEADERS },\r\n        children: [{\r\n            target: { pageID, title: W.KnownTitle.DOS_HEADER, elemID: W.KnownElemID.DOS_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.PE_SIGNATURE, elemID: W.KnownElemID.PE_SIGNATURE }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.FILE_HEADER, elemID: W.KnownElemID.FILE_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.OPTIONAL_HEADER, elemID: W.KnownElemID.OPTIONAL_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.DATA_DIRECTORIES, elemID: W.KnownElemID.DATA_DIRECTORIES }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.SECTION_HEADERS, elemID: W.KnownElemID.SECTION_HEADERS }\r\n        }]\r\n    };\r\n}\r\n\r\nfunction generateMDHeadersNavData(pe: PEImage): W.NavData | undefined {\r\n    const pageID = W.PageID.MD_HEADERS;\r\n\r\n    if (!pe.isManaged()) return undefined;\r\n\r\n    let children: W.NavData[] = [{\r\n        target: { pageID, title: W.KnownTitle.CLI_HEADER, elemID: W.KnownElemID.CLI_HEADER }\r\n    }];\r\n\r\n    if (pe.hasMetadata()) {\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.MD_ROOT, elemID: W.KnownElemID.MD_ROOT }\r\n        });\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.MDS_HEADERS, elemID: W.KnownElemID.MDS_HEADERS }\r\n        });\r\n    }\r\n\r\n    if (pe.hasStrongNameSignature()) {\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.SN_SIG, elemID: W.KnownElemID.SN_SIG }\r\n        });\r\n    }\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.MD_HEADERS },\r\n        children\r\n    };\r\n}\r\n\r\nfunction generateMDTablesNavData(pe: PEImage): W.NavData | undefined {\r\n    const pageID = W.PageID.MDS_TABLE;\r\n    const h = pe.getMetadataTableHeader();\r\n    if (!h) return undefined;\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.MDS_TABLE },\r\n    };\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateMdsTablePageData(pe: PEImage): W.MdsTablePageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_TABLE,\r\n            title: W.KnownTitle.MDS_TABLE,\r\n        },\r\n        tableHeader: generateMDTableHeader(pe),\r\n        tableInfo: generateMDTableList(pe),\r\n    };\r\n}\r\n\r\nfunction generateMDTableHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.MDT_HEADER,\r\n        elemID: W.KnownElemID.MDT_HEADER,\r\n    };\r\n\r\n    const h = pe.getMetadataTableHeader();\r\n    if (!h) return s;\r\n\r\n    s.groups = [{\r\n        title: \"\",\r\n        items: [\r\n            FM.formatU4Field(\"Reserved\", h.Reserved),\r\n            FM.formatU1Field(\"MajorVersion\", h.MajorVersion, true),\r\n            FM.formatU1Field(\"MinorVersion\", h.MinorVersion, true),\r\n            FM.formatU1Field(\"HeapSizes\", h.HeapSizes),\r\n            FM.formatU1Field(\"Reserved2\", h.Reserved2),\r\n            FM.formatU8Field(\"Valid\", h.Valid),\r\n            FM.formatU8Field(\"Sorted\", h.Sorted),\r\n        ]\r\n    }, {\r\n        title: \"Rows\",\r\n        items: h.Rows.items.map((v, i) => FM.formatU4Field(`Rows[${i}]`, v, true))\r\n    }];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateMDTableList(pe: PEImage): W.MdTableInfo[] {\r\n    let s: W.MdTableInfo[] = [];\r\n    for (let id = 0; id < F.NumberOfMdTables; id++) {\r\n        s.push({\r\n            index: `${FM.formatU1Hex(id)} (${FM.formatDec(id)})`,\r\n            name: F.MetadataTableIndex[id],\r\n            valid: pe.isMetadataTableValid(id),\r\n            sorted: pe.isMetadataTableSorted(id),\r\n            rows: FM.formatDec(pe.getMetadataTableRows(id)),\r\n        });\r\n    }\r\n    return s;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateMetadataHeadersPageData(pe: PEImage): W.MetadataHeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MD_HEADERS,\r\n            title: W.KnownTitle.MD_HEADERS,\r\n        },\r\n        cliHeader: generateCliHeader(pe),\r\n        metadataRoot: generateMetadataRoot(pe),\r\n        streamHeaders: generateMetadataStreamHeader(pe),\r\n        snSignature: generateSNSignature(pe),\r\n    };\r\n}\r\n\r\nfunction generateCliHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.CLI_HEADER,\r\n        elemID: W.KnownElemID.CLI_HEADER,\r\n    };\r\n\r\n    const h = pe.getCliHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"cb\", h.cb, true),\r\n        FM.formatU2Field(\"MajorRuntimeVersion\", h.MajorRuntimeVersion, true),\r\n        FM.formatU2Field(\"MinorRuntimeVersion\", h.MinorRuntimeVersion, true),\r\n        FM.formatU4Field(\"MetaData.VirtualAddress\", h.MetaData.VirtualAddress),\r\n        FM.formatU4Field(\"MetaData.Size\", h.MetaData.Size, true),\r\n        FM.formatU4Field(\"Flags\", h.Flags),\r\n        FM.formatU4Field(\"EntryPointToken\", h.EntryPointToken),\r\n        FM.formatU4Field(\"Resources.VirtualAddress\", h.Resources.VirtualAddress),\r\n        FM.formatU4Field(\"Resources.Size\", h.Resources.Size, true),\r\n        FM.formatU4Field(\"StrongNameSignature.VirtualAddress\", h.StrongNameSignature.VirtualAddress),\r\n        FM.formatU4Field(\"StrongNameSignature.Size\", h.StrongNameSignature.Size, true),\r\n        FM.formatU4Field(\"CodeManagerTable.VirtualAddress\", h.CodeManagerTable.VirtualAddress),\r\n        FM.formatU4Field(\"CodeManagerTable.Size\", h.CodeManagerTable.Size, true),\r\n        FM.formatU4Field(\"VTableFixups.VirtualAddress\", h.VTableFixups.VirtualAddress),\r\n        FM.formatU4Field(\"VTableFixups.Size\", h.VTableFixups.Size, true),\r\n        FM.formatU4Field(\"ExportAddressTableJumps.VirtualAddress\", h.ExportAddressTableJumps.VirtualAddress),\r\n        FM.formatU4Field(\"ExportAddressTableJumps.Size\", h.ExportAddressTableJumps.Size, true),\r\n        FM.formatU4Field(\"ManagedNativeHeader.VirtualAddress\", h.ManagedNativeHeader.VirtualAddress),\r\n        FM.formatU4Field(\"ManagedNativeHeader.Size\", h.ManagedNativeHeader.Size, true),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSNSignature(pe: PEImage): W.SimpleStruct | undefined {\r\n    const d = pe.getStrongNameSignature();\r\n    if (!d) return undefined;\r\n\r\n    const s: W.SimpleStruct = {\r\n        title: W.KnownTitle.SN_SIG,\r\n        elemID: W.KnownElemID.SN_SIG,\r\n        items: [FM.formatBytesField(\"Signature\", d)]\r\n    };\r\n    return s;\r\n}\r\n\r\nfunction generateMetadataRoot(pe: PEImage): W.SimpleStruct | undefined {\r\n    const h = pe.getMetadataRoot();\r\n    if (!h) return undefined;\r\n\r\n    const s: W.SimpleStruct = {\r\n        title: W.KnownTitle.MD_ROOT,\r\n        elemID: W.KnownElemID.MD_ROOT,\r\n        items: [\r\n            FM.formatU4Field(\"Signature\", h.Signature),\r\n            FM.formatU2Field(\"MajorVersion\", h.MajorVersion, true),\r\n            FM.formatU2Field(\"MinorVersion\", h.MinorVersion, true),\r\n            FM.formatU4Field(\"Reserved\", h.Reserved),\r\n            FM.formatU4Field(\"VersionLength\", h.VersionLength, true),\r\n            FM.formatStringField(\"VersionString\", h.VersionString),\r\n            FM.formatBytesField(\"VersionPadding\", h.VersionPadding),\r\n            FM.formatU2Field(\"Flags\", h.Flags),\r\n            FM.formatU2Field(\"Streams\", h.Streams, true),\r\n        ]\r\n    };\r\n    return s;\r\n}\r\n\r\nfunction generateMetadataStreamHeader(pe: PEImage): W.GroupedStruct | undefined {\r\n    const h = pe.getMetadataStreamHeaders();\r\n    if (!h) return undefined;\r\n\r\n    const s: W.GroupedStruct = {\r\n        title: W.KnownTitle.MDS_HEADERS,\r\n        elemID: W.KnownElemID.MDS_HEADERS,\r\n        groups: h.items.map((v, i) => ({\r\n            title: `[${i}] (${v.Name.value})`,\r\n            items: [\r\n                FM.formatU4Field(\"Offset\", v.Offset),\r\n                FM.formatU4Field(\"Size\", v.Size, true),\r\n                FM.formatStringField(\"Name\", v.Name),\r\n                FM.formatBytesField(\"Padding\", v.Padding),\r\n            ]\r\n        }))\r\n    };\r\n    return s;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateHeadersPageData(pe: PEImage): W.HeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.HEADERS,\r\n            title: W.KnownTitle.HEADERS,\r\n        },\r\n        dosHeader: generateDosHeader(pe),\r\n        peSignature: generatePESignature(pe),\r\n        fileHeader: generateFileHeader(pe),\r\n        optionalHeader: generateOptionalHeader(pe),\r\n        dataDirectories: generateDataDirectories(pe),\r\n        sectionHeaders: generateSectionHeaders(pe),\r\n    };\r\n}\r\n\r\nfunction generateDosHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.DOS_HEADER,\r\n        elemID: W.KnownElemID.DOS_HEADER,\r\n    };\r\n\r\n    const h = pe.getDosHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"e_magic\", h.e_magic),\r\n        FM.formatU2Field(\"e_cblp\", h.e_cblp),\r\n        FM.formatU2Field(\"e_cp\", h.e_cp),\r\n        FM.formatU2Field(\"e_crlc\", h.e_crlc),\r\n        FM.formatU2Field(\"e_cparhdr\", h.e_cparhdr),\r\n        FM.formatU2Field(\"e_minalloc\", h.e_minalloc),\r\n        FM.formatU2Field(\"e_maxalloc\", h.e_maxalloc),\r\n        FM.formatU2Field(\"e_ss\", h.e_ss),\r\n        FM.formatU2Field(\"e_sp\", h.e_sp),\r\n        FM.formatU2Field(\"e_csum\", h.e_csum),\r\n        FM.formatU2Field(\"e_ip\", h.e_ip),\r\n        FM.formatU2Field(\"e_cs\", h.e_cs),\r\n        FM.formatU2Field(\"e_lfarlc\", h.e_lfarlc),\r\n        FM.formatU2Field(\"e_ovno\", h.e_ovno),\r\n        FM.formatBytesField(\"e_res\", h.e_res),\r\n        FM.formatU2Field(\"e_oemid\", h.e_oemid),\r\n        FM.formatU2Field(\"e_oeminfo\", h.e_oeminfo),\r\n        FM.formatBytesField(\"e_res2\", h.e_res2),\r\n        FM.formatU4Field(\"e_lfanew\", h.e_lfanew),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generatePESignature(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.PE_SIGNATURE,\r\n        elemID: W.KnownElemID.PE_SIGNATURE,\r\n    };\r\n\r\n    const h = pe.getPESignature();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"PE Signature\", h),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateFileHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.FILE_HEADER,\r\n        elemID: W.KnownElemID.FILE_HEADER,\r\n    };\r\n\r\n    const h = pe.getFileHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"Machine\", h.Machine),\r\n        FM.formatU2Field(\"NumberOfSections\", h.NumberOfSections, true),\r\n        FM.formatU4Field(\"TimeDateStamp\", h.TimeDateStamp),\r\n        FM.formatU4Field(\"PointerToSymbolTable\", h.PointerToSymbolTable),\r\n        FM.formatU4Field(\"NumberOfSymbols\", h.NumberOfSymbols, true),\r\n        FM.formatU2Field(\"SizeOfOptionalHeader\", h.SizeOfOptionalHeader, true),\r\n        FM.formatU2Field(\"Characteristics\", h.Characteristics),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateOptionalHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.OPTIONAL_HEADER,\r\n        elemID: W.KnownElemID.OPTIONAL_HEADER,\r\n    };\r\n\r\n    const h = pe.getOptionalHeader();\r\n    if (!h) return s;\r\n\r\n    switch (h.Magic.value) {\r\n        case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n            s.title += \" (32-bit)\";\r\n            fillOptionalHeader32Fields(s, <S.ImageOptionalHeader32>h);\r\n            break;\r\n\r\n        case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n            s.title += \" (64-bit)\";\r\n            fillOptionalHeader64Fields(s, <S.ImageOptionalHeader64>h);\r\n            break;\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nfunction fillOptionalHeader32Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader32): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n            FM.formatU4Field(\"BaseOfData\", h.BaseOfData),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU4Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU4Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU4Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU4Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU4Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction fillOptionalHeader64Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader64): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU8Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU8Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU8Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU8Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU8Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction generateDataDirectories(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.DATA_DIRECTORIES,\r\n        elemID: W.KnownElemID.DATA_DIRECTORIES,\r\n    };\r\n\r\n    const h = pe.getDataDirectories();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] ${F.ImageDirectoryEntry[i] || \"\"}`,\r\n        items: [\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"Size\", v.Size, true),\r\n        ]\r\n    } as W.SimpleStruct));\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSectionHeaders(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.SECTION_HEADERS,\r\n        elemID: W.KnownElemID.SECTION_HEADERS,\r\n    };\r\n\r\n    const h = pe.getSectionHeaders();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] (${v.Name.value})`,\r\n        items: [\r\n            FM.formatStringField(\"Name\", v.Name),\r\n            FM.formatU4Field(\"VirtualSize\", v.VirtualSize, true),\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"SizeOfRawData\", v.SizeOfRawData, true),\r\n            FM.formatU4Field(\"PointerToRawData\", v.PointerToRawData),\r\n            FM.formatU4Field(\"PointerToRelocations\", v.PointerToRelocations),\r\n            FM.formatU4Field(\"PointerToLinenumbers\", v.PointerToLinenumbers),\r\n            FM.formatU2Field(\"NumberOfRelocations\", v.NumberOfRelocations, true),\r\n            FM.formatU2Field(\"NumberOfLinenumbers\", v.NumberOfLinenumbers, true),\r\n            FM.formatU4Field(\"Characteristics\", v.Characteristics),\r\n        ]\r\n    }));\r\n\r\n    return s;\r\n}\r\n","import { PEImage } from \"../pe/image\";\r\nimport { generateHeadersPageData } from \"./headers\";\r\nimport { generateMetadataHeadersPageData } from \"./metadata-headers\";\r\nimport { generateMdsTablePageData } from \"./mds-table\";\r\n\r\nexport function generatePageData(pe: PEImage, pageID: W.PageID): W.PageData {\r\n    switch (pageID) {\r\n        case W.PageID.HEADERS: return generateHeadersPageData(pe);\r\n        case W.PageID.MD_HEADERS: return generateMetadataHeadersPageData(pe);\r\n        case W.PageID.MDS_TABLE: return generateMdsTablePageData(pe);\r\n        default: return { nav: { pageID: W.PageID.NOTFOUND, title: W.KnownTitle.NOTFOUND } };\r\n    }\r\n}","export const enum PEErrorType {\r\n    INVALID_DATA_POSITION = \"INVALID_DATA_POSITION\",\r\n    INVALID_DOS_SIGNATURE = \"INVALID_DOS_SIGNATURE\",\r\n    INVALID_PE_SIGNATURE = \"INVALID_PE_SIGNATURE\",\r\n    INVALID_OPTIONAL_HEADER_MAGIC = \"INVALID_OPTIONAL_HEADER_MAGIC\",\r\n    INVALID_DATA_DIRECTORY_COUNT = \"INVALID_DATA_DIRECTORY_COUNT\",\r\n}\r\n\r\nexport class PEError extends Error {\r\n    constructor(\r\n        public type: PEErrorType,\r\n        public offset?: number,\r\n        public size?: number\r\n    ) {\r\n        super(type);\r\n    }\r\n}\r\n","import * as S from \"./structures\";\r\nimport * as F from \"./image-flags\";\r\nimport * as U from \"./utils\";\r\n\r\nexport interface FileDataProvider {\r\n    getU1(p: number): number;\r\n    getU2(p: number): number;\r\n    getU4(p: number): number;\r\n    getData(p: number, sz: number): Uint8Array;\r\n}\r\n\r\n//\r\n// Basic structures.\r\n//\r\n\r\nexport function loadU1Field(d: FileDataProvider, p: number): S.U1Field {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p)\r\n    };\r\n}\r\n\r\nexport function loadU2Field(d: FileDataProvider, p: number): S.U2Field {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p)\r\n    };\r\n}\r\n\r\nexport function loadU4Field(d: FileDataProvider, p: number): S.U4Field {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p)\r\n    };\r\n}\r\n\r\nexport function loadU8Field(d: FileDataProvider, p: number): S.U8Field {\r\n    const low = d.getU4(p);\r\n    const high = d.getU4(p + 4);\r\n\r\n    return {\r\n        _offset: p, _size: 8, data: d.getData(p, 8), low, high\r\n    };\r\n}\r\n\r\nexport function loadU1EnumField<T>(d: FileDataProvider, p: number): S.U1EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU2EnumField<T>(d: FileDataProvider, p: number): S.U2EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU4EnumField<T>(d: FileDataProvider, p: number): S.U4EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeByteArrayField(d: FileDataProvider, p: number, sz: number): S.Field {\r\n    return {\r\n        _offset: p, _size: sz, data: d.getData(p, sz)\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeAsciiStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const value = String.fromCharCode.apply(null, Array.from(data).filter(v => v != 0));\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadNullTerminatedStringField(d: FileDataProvider, p: number): S.StringField {\r\n    let bytes: number[] = [];\r\n    let ptr = p;\r\n    let b: number;\r\n\r\n    do {\r\n        b = d.getU1(ptr++);\r\n        bytes.push(b);\r\n    } while (b != 0);\r\n    const value = String.fromCharCode.apply(null, bytes.slice(0, bytes.length - 1));\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p, data: Uint8Array.from(bytes), value\r\n    };\r\n}\r\n\r\nexport function loadStructArrayByCount<T extends S.FileData>(\r\n    d: FileDataProvider,\r\n    p: number,\r\n    loader: (d: FileDataProvider, p: number) => T,\r\n    count: number): S.StructArray<T> {\r\n\r\n    let items: T[] = [];\r\n    let ptr = p;\r\n    for (let i = 0; i < count; i++) {\r\n        const s = loader(d, ptr);\r\n        items.push(s);\r\n        ptr += s._size;\r\n    }\r\n\r\n    return { _offset: p, _size: ptr - p, items };\r\n}\r\n\r\n//\r\n// Image headers.\r\n//\r\n\r\nexport function loadImageDosHeader(d: FileDataProvider, p: number): S.ImageDosHeader {\r\n    let ptr = p;\r\n\r\n    const e_magic = loadU2Field(d, ptr);\r\n    ptr += e_magic._size;\r\n\r\n    const e_cblp = loadU2Field(d, ptr);\r\n    ptr += e_cblp._size;\r\n\r\n    const e_cp = loadU2Field(d, ptr);\r\n    ptr += e_cp._size;\r\n\r\n    const e_crlc = loadU2Field(d, ptr);\r\n    ptr += e_crlc._size;\r\n\r\n    const e_cparhdr = loadU2Field(d, ptr);\r\n    ptr += e_cparhdr._size;\r\n\r\n    const e_minalloc = loadU2Field(d, ptr);\r\n    ptr += e_minalloc._size;\r\n\r\n    const e_maxalloc = loadU2Field(d, ptr);\r\n    ptr += e_maxalloc._size;\r\n\r\n    const e_ss = loadU2Field(d, ptr);\r\n    ptr += e_ss._size;\r\n\r\n    const e_sp = loadU2Field(d, ptr);\r\n    ptr += e_sp._size;\r\n\r\n    const e_csum = loadU2Field(d, ptr);\r\n    ptr += e_csum._size;\r\n\r\n    const e_ip = loadU2Field(d, ptr);\r\n    ptr += e_ip._size;\r\n\r\n    const e_cs = loadU2Field(d, ptr);\r\n    ptr += e_cs._size;\r\n\r\n    const e_lfarlc = loadU2Field(d, ptr);\r\n    ptr += e_lfarlc._size;\r\n\r\n    const e_ovno = loadU2Field(d, ptr);\r\n    ptr += e_ovno._size;\r\n\r\n    const e_res = loadFixedSizeByteArrayField(d, ptr, 4 * 2);\r\n    ptr += e_res._size;\r\n\r\n    const e_oemid = loadU2Field(d, ptr);\r\n    ptr += e_oemid._size;\r\n\r\n    const e_oeminfo = loadU2Field(d, ptr);\r\n    ptr += e_oeminfo._size;\r\n\r\n    const e_res2 = loadFixedSizeByteArrayField(d, ptr, 10 * 2);\r\n    ptr += e_res2._size;\r\n\r\n    const e_lfanew = loadU4Field(d, ptr);\r\n    ptr += e_lfanew._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        e_magic,\r\n        e_cblp,\r\n        e_cp,\r\n        e_crlc,\r\n        e_cparhdr,\r\n        e_minalloc,\r\n        e_maxalloc,\r\n        e_ss,\r\n        e_sp,\r\n        e_csum,\r\n        e_ip,\r\n        e_cs,\r\n        e_lfarlc,\r\n        e_ovno,\r\n        e_res,\r\n        e_oemid,\r\n        e_oeminfo,\r\n        e_res2,\r\n        e_lfanew,\r\n    };\r\n}\r\n\r\nexport function loadImageFileHeader(d: FileDataProvider, p: number): S.ImageFileHeader {\r\n    let ptr = p;\r\n\r\n    const Machine = loadU2Field(d, ptr);\r\n    ptr += Machine._size;\r\n\r\n    const NumberOfSections = loadU2Field(d, ptr);\r\n    ptr += NumberOfSections._size;\r\n\r\n    const TimeDateStamp = loadU4Field(d, ptr);\r\n    ptr += TimeDateStamp._size;\r\n\r\n    const PointerToSymbolTable = loadU4Field(d, ptr);\r\n    ptr += PointerToSymbolTable._size;\r\n\r\n    const NumberOfSymbols = loadU4Field(d, ptr);\r\n    ptr += NumberOfSymbols._size;\r\n\r\n    const SizeOfOptionalHeader = loadU2Field(d, ptr);\r\n    ptr += SizeOfOptionalHeader._size;\r\n\r\n    const Characteristics = loadU2EnumField<F.ImageFile>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Machine,\r\n        NumberOfSections,\r\n        TimeDateStamp,\r\n        PointerToSymbolTable,\r\n        NumberOfSymbols,\r\n        SizeOfOptionalHeader,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader32(d: FileDataProvider, p: number): S.ImageOptionalHeader32 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const BaseOfData = loadU4Field(d, ptr);\r\n    ptr += BaseOfData._size;\r\n\r\n    const ImageBase = loadU4Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        BaseOfData,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader64(d: FileDataProvider, p: number): S.ImageOptionalHeader64 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const ImageBase = loadU8Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageDataDirectory(d: FileDataProvider, p: number): S.ImageDataDirectory {\r\n    let ptr = p;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        VirtualAddress,\r\n        Size,\r\n    };\r\n}\r\n\r\nexport function loadImageSectionHeader(d: FileDataProvider, p: number): S.ImageSectionHeader {\r\n    let ptr = p;\r\n\r\n    const Name = loadFixedSizeAsciiStringField(d, ptr, 8);\r\n    ptr += Name._size;\r\n\r\n    const VirtualSize = loadU4Field(d, ptr);\r\n    ptr += VirtualSize._size;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const SizeOfRawData = loadU4Field(d, ptr);\r\n    ptr += SizeOfRawData._size;\r\n\r\n    const PointerToRawData = loadU4Field(d, ptr);\r\n    ptr += PointerToRawData._size;\r\n\r\n    const PointerToRelocations = loadU4Field(d, ptr);\r\n    ptr += PointerToRelocations._size;\r\n\r\n    const PointerToLinenumbers = loadU4Field(d, ptr);\r\n    ptr += PointerToLinenumbers._size;\r\n\r\n    const NumberOfRelocations = loadU2Field(d, ptr);\r\n    ptr += NumberOfRelocations._size;\r\n\r\n    const NumberOfLinenumbers = loadU2Field(d, ptr);\r\n    ptr += NumberOfLinenumbers._size;\r\n\r\n    const Characteristics = loadU4EnumField<F.ImageSection>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Name,\r\n        VirtualSize,\r\n        VirtualAddress,\r\n        SizeOfRawData,\r\n        PointerToRawData,\r\n        PointerToRelocations,\r\n        PointerToLinenumbers,\r\n        NumberOfRelocations,\r\n        NumberOfLinenumbers,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\n//\r\n// Metadata structures.\r\n//\r\n\r\nexport function loadCliHeader(d: FileDataProvider, p: number): S.CliHeader {\r\n    let ptr = p;\r\n\r\n    const cb = loadU4Field(d, ptr);\r\n    ptr += cb._size;\r\n\r\n    const MajorRuntimeVersion = loadU2Field(d, ptr);\r\n    ptr += MajorRuntimeVersion._size;\r\n\r\n    const MinorRuntimeVersion = loadU2Field(d, ptr);\r\n    ptr += MinorRuntimeVersion._size;\r\n\r\n    const MetaData = loadImageDataDirectory(d, ptr);\r\n    ptr += MetaData._size;\r\n\r\n    const Flags = loadU4Field(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const EntryPointToken = loadU4Field(d, ptr);\r\n    ptr += EntryPointToken._size;\r\n\r\n    const Resources = loadImageDataDirectory(d, ptr);\r\n    ptr += Resources._size;\r\n\r\n    const StrongNameSignature = loadImageDataDirectory(d, ptr);\r\n    ptr += StrongNameSignature._size;\r\n\r\n    const CodeManagerTable = loadImageDataDirectory(d, ptr);\r\n    ptr += CodeManagerTable._size;\r\n\r\n    const VTableFixups = loadImageDataDirectory(d, ptr);\r\n    ptr += VTableFixups._size;\r\n\r\n    const ExportAddressTableJumps = loadImageDataDirectory(d, ptr);\r\n    ptr += ExportAddressTableJumps._size;\r\n\r\n    const ManagedNativeHeader = loadImageDataDirectory(d, ptr);\r\n    ptr += ManagedNativeHeader._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        cb,\r\n        MajorRuntimeVersion,\r\n        MinorRuntimeVersion,\r\n        MetaData,\r\n        Flags,\r\n        EntryPointToken,\r\n        Resources,\r\n        StrongNameSignature,\r\n        CodeManagerTable,\r\n        VTableFixups,\r\n        ExportAddressTableJumps,\r\n        ManagedNativeHeader,\r\n    };\r\n}\r\n\r\nexport function loadMetadataRoot(d: FileDataProvider, p: number): S.MetadataRoot {\r\n    let ptr = p;\r\n\r\n    const Signature = loadU4Field(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    const MajorVersion = loadU2Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU2Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const Reserved = loadU4Field(d, ptr);\r\n    ptr += Reserved._size;\r\n\r\n    const VersionLength = loadU4Field(d, ptr);\r\n    ptr += VersionLength._size;\r\n\r\n    const VersionString = loadNullTerminatedStringField(d, ptr);\r\n    ptr += VersionString._size;\r\n\r\n    const paddingSize = U.calculatePadding(VersionString._size);\r\n    const VersionPadding = loadFixedSizeByteArrayField(d, ptr, paddingSize);\r\n    ptr += VersionPadding._size;\r\n\r\n    const Flags = loadU2Field(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Streams = loadU2Field(d, ptr);\r\n    ptr += Streams._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Signature,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        Reserved,\r\n        VersionLength,\r\n        VersionString,\r\n        VersionPadding,\r\n        Flags,\r\n        Streams,\r\n    };\r\n}\r\n\r\nexport function loadMetadataStreamHeader(d: FileDataProvider, p: number): S.MetadataStreamHeader {\r\n    let ptr = p;\r\n\r\n    const Offset = loadU4Field(d, ptr);\r\n    ptr += Offset._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    const Name = loadNullTerminatedStringField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const paddingSize = U.calculatePadding(Name._size);\r\n    const Padding = loadFixedSizeByteArrayField(d, ptr, paddingSize);\r\n    ptr += Padding._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Offset,\r\n        Size,\r\n        Name,\r\n        Padding,\r\n    };\r\n}\r\n\r\nexport function loadMetadataTableHeader(d: FileDataProvider, p: number): S.MetadataTableHeader {\r\n    let ptr = p;\r\n\r\n    const Reserved = loadU4Field(d, ptr);\r\n    ptr += Reserved._size;\r\n\r\n    const MajorVersion = loadU1Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU1Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const HeapSizes = loadU1Field(d, ptr);\r\n    ptr += HeapSizes._size;\r\n\r\n    const Reserved2 = loadU1Field(d, ptr);\r\n    ptr += Reserved2._size;\r\n\r\n    const Valid = loadU8Field(d, ptr);\r\n    ptr += Valid._size;\r\n\r\n    const Sorted = loadU8Field(d, ptr);\r\n    ptr += Sorted._size;\r\n\r\n    const tables = U.count1(Valid.high) + U.count1(Valid.low);\r\n    const Rows = loadStructArrayByCount(d, ptr, loadU4Field, tables);\r\n    ptr += Rows._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Reserved,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        HeapSizes,\r\n        Reserved2,\r\n        Valid,\r\n        Sorted,\r\n        Rows,\r\n    }\r\n}","import * as S from \"./structures\";\r\nimport * as A from \"./aux-structures\";\r\nimport * as L from \"./loader\";\r\nimport * as F from \"./image-flags\";\r\nimport * as E from \"./error\";\r\nimport * as U from \"./utils\";\r\n\r\nexport class PEImage implements L.FileDataProvider {\r\n    public static load(buf: ArrayBuffer): PEImage {\r\n        return new PEImage(buf);\r\n    }\r\n\r\n    //\r\n    // FileDataProvider functions.\r\n    //\r\n\r\n    public getU1(p: number): number {\r\n        this.check(p, 1);\r\n        return this.data.getUint8(p);\r\n    }\r\n\r\n    public getU2(p: number): number {\r\n        this.check(p, 2);\r\n        return this.data.getUint16(p, true);\r\n    }\r\n\r\n    public getU4(p: number): number {\r\n        this.check(p, 3);\r\n        return this.data.getUint32(p, true);\r\n    }\r\n\r\n    public getData(p: number, sz: number): Uint8Array {\r\n        this.check(p, sz);\r\n        return new Uint8Array(this.data.buffer.slice(p, p + sz));\r\n    }\r\n\r\n    //\r\n    // Image attributes.\r\n    //\r\n\r\n    public is32Bit(): boolean | undefined {\r\n        const optHdr = this.getOptionalHeader();\r\n        if (optHdr == null) {\r\n            return undefined;\r\n        }\r\n\r\n        switch (optHdr.Magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC: return true;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC: return false;\r\n            default: return undefined;\r\n        }\r\n    }\r\n\r\n    public isManaged(): boolean {\r\n        const dd = this.getDataDirectories();\r\n        return dd != null && this.isDataDirectoryValid(\r\n            dd.items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR]\r\n        );\r\n    }\r\n\r\n    public hasMetadata(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.MetaData);\r\n    }\r\n\r\n    public hasManagedResources(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.Resources);\r\n    }\r\n\r\n    public hasStrongNameSignature(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.StrongNameSignature);\r\n    }\r\n\r\n    public isMetadataTableValid(id: F.MetadataTableIndex): boolean {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].valid;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public isMetadataTableSorted(id: F.MetadataTableIndex): boolean {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].sorted;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public getMetadataTableRows(id: F.MetadataTableIndex): number {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].rows;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    //\r\n    // Image headers.\r\n    //\r\n\r\n    public getDosHeader(): S.ImageDosHeader | undefined {\r\n        return this.dosHeader;\r\n    }\r\n\r\n    public getPESignature(): S.U4Field | undefined {\r\n        return this.peSignature;\r\n    }\r\n\r\n    public getFileHeader(): S.ImageFileHeader | undefined {\r\n        return this.fileHeader;\r\n    }\r\n\r\n    public getOptionalHeader(): S.ImageOptionalHeader32 | S.ImageOptionalHeader64 | undefined {\r\n        return this.optionalHeader;\r\n    }\r\n\r\n    public getDataDirectories(): S.StructArray<S.ImageDataDirectory> | undefined {\r\n        return this.dataDirectories;\r\n    }\r\n\r\n    public getSectionHeaders(): S.StructArray<S.ImageSectionHeader> | undefined {\r\n        return this.sectionHeaders;\r\n    }\r\n\r\n    //\r\n    // Metadata structures.\r\n    //\r\n\r\n    public getCliHeader(): S.CliHeader | undefined {\r\n        if (this.cliHeader) return this.cliHeader;\r\n        if (!this.isManaged()) return undefined;\r\n\r\n        const offset = this.rvaToOffset(this.dataDirectories!\r\n            .items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR]\r\n            .VirtualAddress.value);\r\n\r\n        this.cliHeader = L.loadCliHeader(this, offset);\r\n        return this.cliHeader;\r\n    }\r\n\r\n    public getMetadataRoot(): S.MetadataRoot | undefined {\r\n        if (this.metadataRoot) return this.metadataRoot;\r\n\r\n        const cliHeader = this.getCliHeader();\r\n        if (!cliHeader) return undefined;\r\n\r\n        const offset = this.rvaToOffset(cliHeader.MetaData.VirtualAddress.value);\r\n        if (!offset) return undefined;\r\n\r\n        this.metadataRoot = L.loadMetadataRoot(this, offset);\r\n        return this.metadataRoot;\r\n    }\r\n\r\n    public getMetadataStreamHeaders(): S.StructArray<S.MetadataStreamHeader> | undefined {\r\n        if (this.metadataStreamHeaders) return this.metadataStreamHeaders;\r\n\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot || !mdRoot.Streams.value) return undefined;\r\n\r\n        this.metadataStreamHeaders = L.loadStructArrayByCount(\r\n            this,\r\n            mdRoot._offset + mdRoot._size,\r\n            L.loadMetadataStreamHeader,\r\n            mdRoot.Streams.value\r\n        );\r\n        return this.metadataStreamHeaders;\r\n    }\r\n\r\n    public getMetadataStreamHeader(name: F.MetadataStreamName): S.MetadataStreamHeader | undefined {\r\n        const headers = this.getMetadataStreamHeaders();\r\n        if (!headers) return undefined;\r\n\r\n        return headers.items.filter(v => v.Name.value == name).shift();\r\n    }\r\n\r\n    public getStrongNameSignature(): S.Field | undefined {\r\n        if (this.strongNameSignature) return this.strongNameSignature;\r\n\r\n        const cliHeader = this.getCliHeader();\r\n        if (!cliHeader) return undefined;\r\n\r\n        const offset = this.rvaToOffset(cliHeader.StrongNameSignature.VirtualAddress.value);\r\n        if (!offset) return undefined;\r\n\r\n        this.strongNameSignature = L.loadFixedSizeByteArrayField(\r\n            this, offset,\r\n            cliHeader.StrongNameSignature.Size.value);\r\n        return this.strongNameSignature;\r\n    }\r\n\r\n    public getMetadataTableHeader(): S.MetadataTableHeader | undefined {\r\n        if (this.metadataTableHeader) return this.metadataTableHeader;\r\n\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.Table);\r\n        if (!sh) return undefined;\r\n\r\n        const offset = mdRoot._offset + sh.Offset.value;\r\n        this.metadataTableHeader = L.loadMetadataTableHeader(this, offset);\r\n        this.fillMetadataTableInfo();\r\n\r\n        return this.metadataTableHeader;\r\n    }\r\n\r\n    //\r\n    // Utilities.\r\n    //\r\n\r\n    public rvaToOffset(rva: number): number {\r\n        const sh = this.getSectionHeaderByRva(rva);\r\n        if (!sh) return 0;\r\n\r\n        return rva - sh.VirtualAddress.value + sh.PointerToRawData.value;\r\n    }\r\n\r\n    public offsetToRva(offset: number): number {\r\n        const sh = this.getSectionHeaderByOffset(offset);\r\n        if (!sh) return 0;\r\n\r\n        return offset - sh.PointerToRawData.value + sh.VirtualAddress.value;\r\n    }\r\n\r\n    //\r\n    // Private implementations.\r\n    //\r\n\r\n    private check(p: number, sz: number): void {\r\n        if (p < 0 || p >= this.data.byteLength\r\n            || sz < 0 || p + sz > this.data.byteLength) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_POSITION, p, sz);\r\n        }\r\n    }\r\n\r\n    private constructor(buf: ArrayBuffer) {\r\n        this.data = new DataView(buf);\r\n        this.loadHeaders();\r\n    }\r\n\r\n    private loadHeaders(): void {\r\n        let ptr = 0;\r\n        this.dosHeader = L.loadImageDosHeader(this, ptr);\r\n\r\n        if (this.dosHeader.e_magic.value != F.IMAGE_DOS_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DOS_SIGNATURE, ptr, 2);\r\n        }\r\n\r\n        ptr = this.dosHeader.e_lfanew.value;\r\n        this.peSignature = L.loadU4Field(this, ptr);\r\n\r\n        if (this.peSignature.value != F.IMAGE_NT_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_PE_SIGNATURE, ptr, 4);\r\n        }\r\n\r\n        ptr += this.peSignature._size;\r\n        this.fileHeader = L.loadImageFileHeader(this, ptr);\r\n\r\n        ptr += this.fileHeader._size;\r\n        const magic = L.loadU2Field(this, ptr);\r\n        switch (magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader32(this, ptr);\r\n                break;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader64(this, ptr);\r\n                break;\r\n            default:\r\n                throw new E.PEError(E.PEErrorType.INVALID_OPTIONAL_HEADER_MAGIC, ptr, 2);\r\n        }\r\n\r\n        if (this.optionalHeader.NumberOfRvaAndSizes.value != F.IMAGE_NUMBEROF_DIRECTORY_ENTRIES) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_DIRECTORY_COUNT,\r\n                this.optionalHeader.NumberOfRvaAndSizes._offset,\r\n                this.optionalHeader.NumberOfRvaAndSizes._size);\r\n        }\r\n\r\n        ptr += this.optionalHeader._size;\r\n        this.dataDirectories = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageDataDirectory,\r\n            this.optionalHeader.NumberOfRvaAndSizes.value);\r\n\r\n        ptr += this.dataDirectories._size;\r\n        this.sectionHeaders = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageSectionHeader,\r\n            this.fileHeader.NumberOfSections.value);\r\n    }\r\n\r\n    private getSectionHeaderByOffset(offset: number): S.ImageSectionHeader | undefined {\r\n        return this.sectionHeaders && this.sectionHeaders.items.filter(h => {\r\n            const p = h.PointerToRawData.value;\r\n            const sz = h.SizeOfRawData.value;\r\n            return offset >= p && offset < p + sz;\r\n        }).shift();\r\n    }\r\n\r\n    private getSectionHeaderByRva(rva: number): S.ImageSectionHeader | undefined {\r\n        return this.sectionHeaders && this.sectionHeaders.items.filter(h => {\r\n            const p = h.VirtualAddress.value;\r\n            const sz = h.VirtualSize.value;\r\n            return rva >= p && rva < p + sz;\r\n        }).shift();\r\n    }\r\n\r\n    private isDataDirectoryValid(dd?: S.ImageDataDirectory): boolean {\r\n        return (dd && dd.VirtualAddress.value > 0 && dd.Size.value > 0) || false;\r\n    }\r\n\r\n    private fillMetadataTableInfo(): void {\r\n        const h = this.metadataTableHeader;\r\n        if (!h) return;\r\n\r\n        let info: A.MetadataTableInfo = {};\r\n        let nValid = 0;\r\n        for (let id = 0; id < F.NumberOfMdTables; id++) {\r\n            const valid = U.isSetLong(h.Valid.high, h.Valid.low, id);\r\n            const sorted = U.isSetLong(h.Sorted.high, h.Sorted.low, id);\r\n            const rows = valid ? h.Rows.items[nValid++].value : 0;\r\n            info[id] = { valid, sorted, rows };\r\n        }\r\n        this.metadataTableInfo = info;\r\n    }\r\n\r\n    private readonly data: DataView;\r\n\r\n    private dosHeader?: S.ImageDosHeader;\r\n    private peSignature?: S.U4Field;\r\n    private fileHeader?: S.ImageFileHeader;\r\n    private optionalHeader?: S.ImageOptionalHeader32 | S.ImageOptionalHeader64;\r\n    private dataDirectories?: S.StructArray<S.ImageDataDirectory>;\r\n    private sectionHeaders?: S.StructArray<S.ImageSectionHeader>;\r\n\r\n    private cliHeader?: S.CliHeader;\r\n    private metadataRoot?: S.MetadataRoot;\r\n    private metadataStreamHeaders?: S.StructArray<S.MetadataStreamHeader>;\r\n    private strongNameSignature?: S.Field;\r\n\r\n    private metadataTableHeader?: S.MetadataTableHeader;\r\n    private metadataTableInfo?: A.MetadataTableInfo;\r\n}\r\n","export function createResNavDataMessage(navList: W.NavData[]): W.ResNavDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_NAV_DATA,\r\n        navList\r\n    };\r\n}\r\n\r\nexport function createResPageDataMessage(pageData: W.PageData): W.ResPageDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PAGE_DATA,\r\n        pageData\r\n    };\r\n}\r\n\r\nexport function createResPEPropsMessage(is32Bit?: boolean, isManaged?: boolean): W.ResPEPropsMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_PROPS,\r\n        is32Bit,\r\n        isManaged\r\n    };\r\n}\r\n\r\nexport function createResPEErrorMessage(error: string): W.ResPEErrorMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_ERROR,\r\n        error\r\n    };\r\n}\r\n","import * as M from \"./message\";\r\nimport { PEImage } from \"./pe/image\";\r\nimport { generatePageData } from \"./page-data/generator\";\r\nimport { generateNavList } from \"./page-data/nav-data\";\r\n\r\nlet pe: PEImage | null = null;\r\n\r\nonmessage = (ev) => {\r\n    const msg = ev.data as W.WorkerMessage;\r\n    switch (msg.type) {\r\n        case W.WorkerMessageType.REQ_OPEN_FILE:\r\n            handleReqOpenFile(msg as W.ReqOpenFileMessage);\r\n            break;\r\n\r\n        case W.WorkerMessageType.REQ_OPEN_NAV:\r\n            handleReqOpenNav(msg as W.ReqOpenNavMessage);\r\n            break;\r\n    }\r\n};\r\n\r\nfunction handleReqOpenFile(msg: W.ReqOpenFileMessage): void {\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = ev => {\r\n        try {\r\n            const buf = <ArrayBuffer>(<FileReader>ev.target).result;\r\n            pe = PEImage.load(buf);\r\n\r\n            // Response with page data.\r\n            const pageData = generatePageData(pe, W.PageID.HEADERS);\r\n            const pageDataMsg = M.createResPageDataMessage(pageData);\r\n            postMessage(pageDataMsg);\r\n\r\n            // Response with PE properties.\r\n            const is32Bit = pe.is32Bit();\r\n            const isManaged = pe.isManaged();\r\n            const pePropsMsg = M.createResPEPropsMessage(is32Bit, isManaged);\r\n            postMessage(pePropsMsg);\r\n\r\n            // Response with navigation data.\r\n            const navList = generateNavList(pe);\r\n            const navMsg = M.createResNavDataMessage(navList);\r\n            postMessage(navMsg);\r\n        } catch (ex) {\r\n            const msg = M.createResPEErrorMessage(ex.message\r\n                || `Unknown error: ${JSON.stringify(ex)}`);\r\n            postMessage(msg);\r\n        }\r\n    };\r\n\r\n    reader.onerror = ev => {\r\n        pe = null;\r\n        const msg = M.createResPEErrorMessage(\"Can't open file.\");\r\n        postMessage(msg);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(msg.file);\r\n}\r\n\r\nfunction handleReqOpenNav(msg: W.ReqOpenNavMessage): void {\r\n    if (pe != null) {\r\n        const pageData = generatePageData(pe, msg.target.pageID);\r\n        pageData.nav.elemID = msg.target.elemID;\r\n        const res = M.createResPageDataMessage(pageData);\r\n        postMessage(res);\r\n    }\r\n}"],"sourceRoot":""}