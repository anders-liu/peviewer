{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker/page-data/formatter.ts","webpack:///./src/worker/pe/image-flags.ts","webpack:///./src/worker/pe/utils.ts","webpack:///./src/worker/page-data/nav-data.ts","webpack:///./src/worker/page-data/mds-list.ts","webpack:///./src/worker/page-data/mds-table.ts","webpack:///./src/worker/page-data/metadata-headers.ts","webpack:///./src/worker/page-data/headers.ts","webpack:///./src/worker/page-data/generator.ts","webpack:///./src/worker/pe/error.ts","webpack:///./src/worker/pe/loader.ts","webpack:///./src/worker/pe/image.ts","webpack:///./src/worker/message.ts","webpack:///./src/worker/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","formatU1RawHex","padZeroLeft","toString","toUpperCase","formatU2RawHex","formatU4RawHex","formatU1Hex","formatU2Hex","formatU4Hex","formatHexDec","formatDec","v","toLocaleString","formatBytes","bytes","lineWidth","lines","start","length","line","Array","from","subarray","map","b","join","push","str","len","repeat","formatUIntField","f","sz","showDec","hex","offset","_offset","size","_size","rawData","data","formatStructTitle","title","formatU1Field","formatU2Field","formatU4Field","formatU8Field","high","low","formatCompressedUIntField","formatBytesField","formatStringField","formatGuidField","IMAGE_DOS_SIGNATURE","IMAGE_NT_SIGNATURE","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_OPTIONAL_HDR64_MAGIC","ImageFile","ImageFileMachine","ImageSubsystem","ImageDllCharacteristics","ImageDirectoryEntry","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","ImageSection","ComImageFlags","MetadataSignature","MetadataTableIndex","NumberOfMdTables","decompressUint","buffer","byteLength","RangeError","calculatePadding","dataSize","align","count1","mask","isSetLong","bit","decompressInt","u","fb","getCompressedIntSize","firstByte","generateNavList","pe","pageID","navList","target","children","elemID","navMD","isManaged","hasMetadata","hasStrongNameSignature","getMetadataStreamHeader","pageNum","generateMDHeadersNavData","navMDT","getMetadataTableHeader","generateMDTablesNavData","U","FM","putIndexToPages","indexes","pageSize","pages","pageItems","pStart","pEnd","slice","generateMdsStringsPageData","cache","cfg","pgNum","mdsStrings","mdRoot","getMetadataRoot","sh","base","Offset","Size","getU1","mdsOffsetListPageSize","checkAndBuildCacheForMdsStrings","items","titleOf","nav","groups","index","getMdsStringsItem","paging","currentPageNumber","pageNavList","generateMdsUSPageData","mdsUS","dtsz","szval","getData","getBlobIndexes","checkAndBuildCacheForMdsUS","item","getMdsUSItem","Value","Suffix","generateMdsGuidPageData","getMdsGuidItems","F","generateMdsTablePageData","tableHeader","h","Reserved","MajorVersion","MinorVersion","HeapSizes","Reserved2","Valid","Sorted","Rows","generateMDTableHeader","tableInfo","id","valid","isMetadataTableValid","sorted","isMetadataTableSorted","rows","getMetadataTableRows","generateMDTableList","generateMetadataHeadersPageData","cliHeader","getCliHeader","cb","MajorRuntimeVersion","MinorRuntimeVersion","MetaData","VirtualAddress","Flags","EntryPointToken","Resources","StrongNameSignature","CodeManagerTable","VTableFixups","ExportAddressTableJumps","ManagedNativeHeader","generateCliHeader","metadataRoot","Signature","VersionLength","VersionString","VersionPadding","Streams","generateMetadataRoot","streamHeaders","getMetadataStreamHeaders","Name","Padding","generateMetadataStreamHeader","snSignature","getStrongNameSignature","generateSNSignature","generateHeadersPageData","dosHeader","getDosHeader","e_magic","e_cblp","e_cp","e_crlc","e_cparhdr","e_minalloc","e_maxalloc","e_ss","e_sp","e_csum","e_ip","e_cs","e_lfarlc","e_ovno","e_res","e_oemid","e_oeminfo","e_res2","e_lfanew","generateDosHeader","peSignature","getPESignature","generatePESignature","fileHeader","getFileHeader","Machine","NumberOfSections","TimeDateStamp","PointerToSymbolTable","NumberOfSymbols","SizeOfOptionalHeader","Characteristics","generateFileHeader","optionalHeader","getOptionalHeader","Magic","MajorLinkerVersion","MinorLinkerVersion","SizeOfCode","SizeOfInitializedData","SizeOfUninitializedData","AddressOfEntryPoint","BaseOfCode","BaseOfData","ImageBase","SectionAlignment","FileAlignment","MajorOperatingSystemVersion","MinorOperatingSystemVersion","MajorImageVersion","MinorImageVersion","MajorSubsystemVersion","MinorSubsystemVersion","Win32VersionValue","SizeOfImage","SizeOfHeaders","CheckSum","Subsystem","DllCharacteristics","SizeOfStackReserve","SizeOfStackCommit","SizeOfHeapReserve","SizeOfHeapCommit","LoaderFlags","NumberOfRvaAndSizes","fillOptionalHeader32Fields","fillOptionalHeader64Fields","generateOptionalHeader","dataDirectories","getDataDirectories","generateDataDirectories","sectionHeaders","getSectionHeaders","VirtualSize","SizeOfRawData","PointerToRawData","PointerToRelocations","PointerToLinenumbers","NumberOfRelocations","NumberOfLinenumbers","generateSectionHeaders","headers_1","metadata_headers_1","mds_table_1","mds_list_1","generatePageData","clearGeneratorCache","PEError","_super","type","_this","this","__extends","Error","loadU1Field","loadU2Field","getU2","loadU4Field","getU4","loadU8Field","loadCompressedUIntField","Uint8Array","loadU2EnumField","loadU4EnumField","loadFixedSizeByteArrayField","loadFixedSizeAsciiStringField","String","fromCharCode","apply","filter","loadNullTerminatedStringField","ptr","decodeURIComponent","loadFixedSizeUnicodeStringField","arr","Uint16Array","fromCodePoint","loadStructArrayByCount","loader","count","loadImageDataDirectory","loadU1EnumField","loadImageDosHeader","loadImageFileHeader","loadImageOptionalHeader32","loadImageOptionalHeader64","loadImageSectionHeader","loadCliHeader","loadMetadataRoot","loadMetadataStreamHeader","loadMetadataTableHeader","loadMetadataUSItem","suffixSize","L","E","PEImage","buf","DataView","loadHeaders","load","check","getUint8","getUint16","getUint32","is32Bit","optHdr","dd","isDataDirectoryValid","IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","hasManagedResources","info","metadataTableInfo","rvaToOffset","metadataStreamHeaders","headers","shift","strongNameSignature","metadataTableHeader","fillMetadataTableInfo","rva","getSectionHeaderByRva","offsetToRva","getSectionHeaderByOffset","nValid","createResNavDataMessage","createResPageDataMessage","pageData","createResPEPropsMessage","createResPEErrorMessage","error","M","image_1","generator_1","nav_data_1","onmessage","ev","msg","reader","FileReader","onload","result","pageDataMsg","postMessage","pePropsMsg","navMsg","ex","msg_1","message","JSON","stringify","onerror","readAsArrayBuffer","file","handleReqOpenFile","_a","res","handleReqOpenNav"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","import * as S from \"../pe/structures\";\r\n\r\nexport function formatU1RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 2);\r\n}\r\n\r\nexport function formatU2RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 4);\r\n}\r\n\r\nexport function formatU4RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 8);\r\n}\r\n\r\nexport function formatU1Hex(d: number): string {\r\n    return `${formatU1RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU2Hex(d: number): string {\r\n    return `${formatU2RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU4Hex(d: number): string {\r\n    return `${formatU4RawHex(d)}h`;\r\n}\r\n\r\nexport function formatHexDec(d: number): string {\r\n    return `${d.toString(16).toUpperCase()}h (${d})`;\r\n}\r\n\r\nexport function formatDec(v: number): string {\r\n    return v.toLocaleString();\r\n}\r\n\r\nexport function formatBytes(bytes: Uint8Array, lineWidth: number = 16): string[] {\r\n    let lines: string[] = [];\r\n    for (let start = 0; start < bytes.length; start += lineWidth) {\r\n        const line = Array.from(bytes.subarray(start, start + lineWidth))\r\n            .map(b => formatU1RawHex(b)).join(\"-\");\r\n        lines.push(line);\r\n    }\r\n    return lines;\r\n}\r\n\r\nexport function formatStructTitle(s: S.FileData, title: string): string {\r\n    return `${title} [${formatU4Hex(s._offset)} - ${formatU4Hex(s._offset + s._size)} : ${formatHexDec(s._size)}]`;\r\n}\r\n\r\nexport function formatU1Field(name: string, f: S.U1Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 1, showDec);\r\n}\r\n\r\nexport function formatU2Field(name: string, f: S.U2Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 2, showDec);\r\n}\r\n\r\nexport function formatU4Field(name: string, f: S.U4Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 4, showDec);\r\n}\r\n\r\nexport function formatU8Field(name: string, f: S.U8Field, showDec?: boolean): W.StructItem {\r\n    let value = `${formatU4RawHex(f.high)} ${formatU4Hex(f.low)}`;\r\n\r\n    if (showDec && f.high < 0x1FFFFF) {\r\n        const long = f.high * 0x100000000 + f.low;\r\n        value += ` (${formatDec(long)})`;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value,\r\n    };\r\n}\r\n\r\nexport function formatCompressedUIntField(name: string, f: S.CompressedUIntField): W.StructItem {\r\n    return formatUIntField(name, f, f._size, true);\r\n}\r\n\r\nexport function formatBytesField(name: string, f: S.Field): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: \"\",\r\n    };\r\n}\r\n\r\nexport function formatStringField(name: string, f: S.StringField): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: `\"${f.value}\"`,\r\n    };\r\n}\r\n\r\nexport function formatGuidField(name: string, f: S.Field): W.StructItem {\r\n    const b = (n: number) => formatU1RawHex(f.data[n]);\r\n    const value = \"{\" + b(3) + b(2) + b(1) + b(0) + \"-\"\r\n        + b(5) + b(4) + \"-\" + b(7) + b(6) + \"-\" + b(8) + b(9) + \"-\"\r\n        + b(10) + b(11) + b(12) + b(13) + b(14) + b(15) + \"}\";\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value,\r\n    };\r\n}\r\n\r\nfunction padZeroLeft(str: string, len: number): string {\r\n    if (str.length < len) {\r\n        return \"0\".repeat(len - str.length) + str;\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n\r\nfunction formatUIntField(name: string, f: S.UIntField, sz: number, showDec?: boolean): W.StructItem {\r\n    let hex: string;\r\n    switch (sz) {\r\n        case 1: hex = formatU1Hex(f.value); break;\r\n        case 2: hex = formatU2Hex(f.value); break;\r\n        case 4: hex = formatU4Hex(f.value); break;\r\n        default: hex = f.value.toString(16).toUpperCase(); break;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: showDec ? `${hex} (${formatDec(f.value)})` : hex,\r\n    }\r\n}\r\n","export const IMAGE_DOS_SIGNATURE = 0x5A4D;  // MZ\r\n\r\nexport const IMAGE_NT_SIGNATURE = 0x00004550;  // PE00\r\n\r\nexport const IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\r\nexport const IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\r\n\r\nexport enum ImageFile {\r\n    IMAGE_FILE_RELOCS_STRIPPED = 0x0001,\r\n    IMAGE_FILE_EXECUTABLE_IMAGE = 0x0002,\r\n    IMAGE_FILE_LINE_NUMS_STRIPPED = 0x0004,\r\n    IMAGE_FILE_LOCAL_SYMS_STRIPPED = 0x0008,\r\n    IMAGE_FILE_AGGRESIVE_WS_TRIM = 0x0010,\r\n    IMAGE_FILE_LARGE_ADDRESS_AWARE = 0x0020,\r\n    IMAGE_FILE_BYTES_REVERSED_LO = 0x0080,\r\n    IMAGE_FILE_32BIT_MACHINE = 0x0100,\r\n    IMAGE_FILE_DEBUG_STRIPPED = 0x0200,\r\n    IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 0x0400,\r\n    IMAGE_FILE_NET_RUN_FROM_SWAP = 0x0800,\r\n    IMAGE_FILE_SYSTEM = 0x1000,\r\n    IMAGE_FILE_DLL = 0x2000,\r\n    IMAGE_FILE_UP_SYSTEM_ONLY = 0x4000,\r\n    IMAGE_FILE_BYTES_REVERSED_HI = 0x8000,\r\n}\r\n\r\nexport enum ImageFileMachine {\r\n    IMAGE_FILE_MACHINE_UNKNOWN = 0,\r\n    IMAGE_FILE_MACHINE_TARGET_HOST = 0x0001,\r\n    IMAGE_FILE_MACHINE_I386 = 0x014c,\r\n    IMAGE_FILE_MACHINE_R3000 = 0x0162,\r\n    IMAGE_FILE_MACHINE_R4000 = 0x0166,\r\n    IMAGE_FILE_MACHINE_R10000 = 0x0168,\r\n    IMAGE_FILE_MACHINE_WCEMIPSV2 = 0x0169,\r\n    IMAGE_FILE_MACHINE_ALPHA = 0x0184,\r\n    IMAGE_FILE_MACHINE_SH3 = 0x01a2,\r\n    IMAGE_FILE_MACHINE_SH3DSP = 0x01a3,\r\n    IMAGE_FILE_MACHINE_SH3E = 0x01a4,\r\n    IMAGE_FILE_MACHINE_SH4 = 0x01a6,\r\n    IMAGE_FILE_MACHINE_SH5 = 0x01a8,\r\n    IMAGE_FILE_MACHINE_ARM = 0x01c0,\r\n    IMAGE_FILE_MACHINE_THUMB = 0x01c2,\r\n    IMAGE_FILE_MACHINE_ARMNT = 0x01c4,\r\n    IMAGE_FILE_MACHINE_AM33 = 0x01d3,\r\n    IMAGE_FILE_MACHINE_POWERPC = 0x01F0,\r\n    IMAGE_FILE_MACHINE_POWERPCFP = 0x01f1,\r\n    IMAGE_FILE_MACHINE_IA64 = 0x0200,\r\n    IMAGE_FILE_MACHINE_MIPS16 = 0x0266,\r\n    IMAGE_FILE_MACHINE_ALPHA64 = 0x0284,\r\n    IMAGE_FILE_MACHINE_MIPSFPU = 0x0366,\r\n    IMAGE_FILE_MACHINE_MIPSFPU16 = 0x0466,\r\n    IMAGE_FILE_MACHINE_AXP64 = IMAGE_FILE_MACHINE_ALPHA64,\r\n    IMAGE_FILE_MACHINE_TRICORE = 0x0520,\r\n    IMAGE_FILE_MACHINE_CEF = 0x0CEF,\r\n    IMAGE_FILE_MACHINE_EBC = 0x0EBC,\r\n    IMAGE_FILE_MACHINE_AMD64 = 0x8664,\r\n    IMAGE_FILE_MACHINE_M32R = 0x9041,\r\n    IMAGE_FILE_MACHINE_ARM64 = 0xAA64,\r\n    IMAGE_FILE_MACHINE_CEE = 0xC0EE,\r\n}\r\n\r\nexport enum ImageSubsystem {\r\n    IMAGE_SUBSYSTEM_UNKNOWN = 0,\r\n    IMAGE_SUBSYSTEM_NATIVE = 1,\r\n    IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,\r\n    IMAGE_SUBSYSTEM_OS2_CUI = 5,\r\n    IMAGE_SUBSYSTEM_POSIX_CUI = 7,\r\n    IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9,\r\n    IMAGE_SUBSYSTEM_EFI_APPLICATION = 10,\r\n    IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11,\r\n    IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12,\r\n    IMAGE_SUBSYSTEM_EFI_ROM = 13,\r\n    IMAGE_SUBSYSTEM_XBOX = 14,\r\n    IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16,\r\n    IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 17,\r\n}\r\n\r\nexport enum ImageDllCharacteristics {\r\n    IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020,\r\n    IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 0x0040,\r\n    IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 0x0080,\r\n    IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 0x0100,\r\n    IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 0x0200,\r\n    IMAGE_DLLCHARACTERISTICS_NO_SEH = 0x0400,\r\n    IMAGE_DLLCHARACTERISTICS_NO_BIND = 0x0800,\r\n    IMAGE_DLLCHARACTERISTICS_APPCONTAINER = 0x1000,\r\n    IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 0x2000,\r\n    IMAGE_DLLCHARACTERISTICS_GUARD_CF = 0x4000,\r\n    IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 0x8000,\r\n}\r\n\r\nexport enum ImageDirectoryEntry {\r\n    IMAGE_DIRECTORY_ENTRY_EXPORT = 0,\r\n    IMAGE_DIRECTORY_ENTRY_IMPORT = 1,\r\n    IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,\r\n    IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,\r\n    IMAGE_DIRECTORY_ENTRY_SECURITY = 4,\r\n    IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,\r\n    IMAGE_DIRECTORY_ENTRY_DEBUG = 6,\r\n    IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7,\r\n    IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,\r\n    IMAGE_DIRECTORY_ENTRY_TLS = 9,\r\n    IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,\r\n    IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,\r\n    IMAGE_DIRECTORY_ENTRY_IAT = 12,\r\n    IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13,\r\n    IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14,\r\n}\r\n\r\nexport const IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16;\r\n\r\nexport enum ImageSection {\r\n    IMAGE_SCN_TYPE_NO_PAD = 0x00000008,\r\n\r\n    IMAGE_SCN_CNT_CODE = 0x00000020,\r\n    IMAGE_SCN_CNT_INITIALIZED_DATA = 0x00000040,\r\n    IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x00000080,\r\n\r\n    IMAGE_SCN_LNK_OTHER = 0x00000100,\r\n    IMAGE_SCN_LNK_INFO = 0x00000200,\r\n    IMAGE_SCN_LNK_REMOVE = 0x00000800,\r\n    IMAGE_SCN_LNK_COMDAT = 0x00001000,\r\n\r\n    IMAGE_SCN_NO_DEFER_SPEC_EXC = 0x00004000,\r\n    IMAGE_SCN_GPREL = 0x00008000,\r\n\r\n    IMAGE_SCN_MEM_PURGEABLE = 0x00020000,\r\n    IMAGE_SCN_MEM_16BIT = 0x00020000,\r\n    IMAGE_SCN_MEM_LOCKED = 0x00040000,\r\n    IMAGE_SCN_MEM_PRELOAD = 0x00080000,\r\n\r\n    IMAGE_SCN_ALIGN_1BYTES = 0x00100000,\r\n    IMAGE_SCN_ALIGN_2BYTES = 0x00200000,\r\n    IMAGE_SCN_ALIGN_4BYTES = 0x00300000,\r\n    IMAGE_SCN_ALIGN_8BYTES = 0x00400000,\r\n    IMAGE_SCN_ALIGN_16BYTES = 0x00500000,\r\n    IMAGE_SCN_ALIGN_32BYTES = 0x00600000,\r\n    IMAGE_SCN_ALIGN_64BYTES = 0x00700000,\r\n    IMAGE_SCN_ALIGN_128BYTES = 0x00800000,\r\n    IMAGE_SCN_ALIGN_256BYTES = 0x00900000,\r\n    IMAGE_SCN_ALIGN_512BYTES = 0x00A00000,\r\n    IMAGE_SCN_ALIGN_1024BYTES = 0x00B00000,\r\n    IMAGE_SCN_ALIGN_2048BYTES = 0x00C00000,\r\n    IMAGE_SCN_ALIGN_4096BYTES = 0x00D00000,\r\n    IMAGE_SCN_ALIGN_8192BYTES = 0x00E00000,\r\n\r\n    IMAGE_SCN_LNK_NRELOC_OVFL = 0x01000000,\r\n    IMAGE_SCN_MEM_DISCARDABLE = 0x02000000,\r\n    IMAGE_SCN_MEM_NOT_CACHED = 0x04000000,\r\n    IMAGE_SCN_MEM_NOT_PAGED = 0x08000000,\r\n    IMAGE_SCN_MEM_SHARED = 0x10000000,\r\n    IMAGE_SCN_MEM_EXECUTE = 0x20000000,\r\n    IMAGE_SCN_MEM_READ = 0x40000000,\r\n    IMAGE_SCN_MEM_WRITE = 0x80000000,\r\n\r\n    IMAGE_SCN_SCALE_INDEX = 0x00000001,\r\n}\r\n\r\n//\r\n// Metadata structures.\r\n//\r\n\r\nexport enum ComImageFlags {\r\n    COMIMAGE_FLAGS_ILONLY = 0x00000001,\r\n    COMIMAGE_FLAGS_32BITREQUIRED = 0x00000002,\r\n    COMIMAGE_FLAGS_IL_LIBRARY = 0x00000004,\r\n    COMIMAGE_FLAGS_STRONGNAMESIGNED = 0x00000008,\r\n    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 0x00000010,\r\n    COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x00010000,\r\n    COMIMAGE_FLAGS_32BITPREFERRED = 0x00020000,\r\n}\r\n\r\nexport const MetadataSignature = 0x424A5342;\r\n\r\nexport const enum MetadataStreamName {\r\n    Table = \"#~\",\r\n    Strings = \"#Strings\",\r\n    US = \"#US\",\r\n    GUID = \"#GUID\",\r\n    Blob = \"#Blob\",\r\n}\r\n\r\nexport const enum MetadataTableHeapSize {\r\n    String = 0,\r\n    GUID = 1,\r\n    Blob = 2,\r\n}\r\n\r\nexport enum MetadataTableIndex {\r\n    Module = 0x00,\r\n    TypeRef = 0x01,\r\n    TypeDef = 0x02,\r\n    FieldPtr = 0x03,\r\n    Field = 0x04,\r\n    MethodPtr = 0x05,\r\n    MethodDef = 0x06,\r\n    ParamPtr = 0x07,\r\n    Param = 0x08,\r\n    InterfaceImpl = 0x09,\r\n    MemberRef = 0x0A,\r\n    Constant = 0x0B,\r\n    CustomAttribute = 0x0C,\r\n    FieldMarshal = 0x0D,\r\n    DeclSecurity = 0x0E,\r\n    ClassLayout = 0x0F,\r\n    FieldLayout = 0x10,\r\n    StandAloneSig = 0x11,\r\n    EventMap = 0x12,\r\n    EventPtr = 0x13,\r\n    Event = 0x14,\r\n    PropertyMap = 0x15,\r\n    PropertyPtr = 0x16,\r\n    Property = 0x17,\r\n    MethodSemantics = 0x18,\r\n    MethodImpl = 0x19,\r\n    ModuleRef = 0x1A,\r\n    TypeSpec = 0x1B,\r\n    ImplMap = 0x1C,\r\n    FieldRVA = 0x1D,\r\n    ENCLog = 0x1E,\r\n    ENCMap = 0x1F,\r\n    Assembly = 0x20,\r\n    AssemblyProcessor = 0x21,\r\n    AssemblyOS = 0x22,\r\n    AssemblyRef = 0x23,\r\n    AssemblyRefProcessor = 0x24,\r\n    AssemblyRefOS = 0x25,\r\n    File = 0x26,\r\n    ExportedType = 0x27,\r\n    ManifestResource = 0x28,\r\n    NestedClass = 0x29,\r\n    GenericParam = 0x2A,\r\n    MethodSpec = 0x2B,\r\n    GenericParamConstraint = 0x2C,\r\n\r\n    String = 0x70,\r\n}\r\n\r\nexport const NumberOfMdTables = 45;\r\n","export function calculatePadding(dataSize: number, align: number = 4): number {\n    const r = dataSize % align;\n    if (r == 0) {\n        return 0;\n    } else {\n        return align - r;\n    }\n}\n\nexport function count1(n: number) {\n    let c = 0;\n    for (let i = 0, mask = 1; i < 32; i++ , mask <<= 1) {\n        if (n & mask)\n            c++;\n    }\n    return c;\n}\n\nexport function isSetLong(high: number, low: number, bit: number): boolean {\n    return bit >= 0 && bit < 64 &&\n        (bit < 32 && ((low & (1 << bit)) != 0)) ||\n        (bit >= 32 && (high & (1 << (bit - 32))) != 0);\n}\n\nexport function decompressUint(data: Uint8Array): number {\n    if ((data[0] & 0x80) == 0 && data.buffer.byteLength == 1)\n        return data[0];\n    else if ((data[0] & 0xC0) == 0x80 && data.buffer.byteLength == 2)\n        return (data[0] & 0x3F) << 8 | data[1];\n    else if ((data[0] & 0xE0) == 0xC0 && data.buffer.byteLength == 4)\n        return (data[0] & 0x1F) << 24 | data[1] << 16 | data[2] << 8 | data[3];\n    else\n        throw new RangeError();\n}\n\nexport function decompressInt(data: Uint8Array): number {\n    const u = decompressUint(data);\n    if ((u & 0x00000001) == 0)\n        return (u >> 1);\n\n    const fb = data[0];\n    if ((fb & 0x80) == 0)\n        return (u >> 1) | 0xFFFFFFC0;\n    else if ((fb & 0xC0) == 0x80)\n        return (u >> 1) | 0xFFFFE000;\n    else if ((fb & 0xE0) == 0xC0)\n        return (u >> 1) | 0xF0000000;\n    else\n        throw new RangeError();\n}\n\nexport function getCompressedIntSize(firstByte: number): number {\n    if ((firstByte & 0xFFFFFF00) != 0)\n        throw new RangeError();\n    else if ((firstByte & 0x80) == 0)\n        return 1;\n    else if ((firstByte & 0xC0) == 0x80)\n        return 2;\n    else if ((firstByte & 0xE0) == 0xC0)\n        return 4;\n    else\n        throw new RangeError();\n}","import { PEImage } from \"../pe/image\";\r\nimport * as F from \"../pe/image-flags\";\r\n\r\nexport function generateNavList(pe: PEImage): W.NavData[] {\r\n    let navList: W.NavData[] = [generateHeadersNavData(pe)];\r\n\r\n    const navMD = generateMDHeadersNavData(pe);\r\n    if (navMD) navList.push(navMD);\r\n\r\n    const navMDT = generateMDTablesNavData(pe);\r\n    if (navMDT) navList.push(navMDT);\r\n\r\n    return navList;\r\n}\r\n\r\nfunction generateHeadersNavData(pe: PEImage): W.NavData {\r\n    const pageID = W.PageID.HEADERS;\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.HEADERS },\r\n        children: [{\r\n            target: { pageID, title: W.KnownTitle.DOS_HEADER, elemID: W.KnownElemID.DOS_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.PE_SIGNATURE, elemID: W.KnownElemID.PE_SIGNATURE }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.FILE_HEADER, elemID: W.KnownElemID.FILE_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.OPTIONAL_HEADER, elemID: W.KnownElemID.OPTIONAL_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.DATA_DIRECTORIES, elemID: W.KnownElemID.DATA_DIRECTORIES }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.SECTION_HEADERS, elemID: W.KnownElemID.SECTION_HEADERS }\r\n        }]\r\n    };\r\n}\r\n\r\nfunction generateMDHeadersNavData(pe: PEImage): W.NavData | undefined {\r\n    const pageID = W.PageID.MD_HEADERS;\r\n\r\n    if (!pe.isManaged()) return undefined;\r\n\r\n    let children: W.NavData[] = [{\r\n        target: { pageID, title: W.KnownTitle.CLI_HEADER, elemID: W.KnownElemID.CLI_HEADER }\r\n    }];\r\n\r\n    if (pe.hasMetadata()) {\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.MD_ROOT, elemID: W.KnownElemID.MD_ROOT }\r\n        });\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.MDS_HEADERS, elemID: W.KnownElemID.MDS_HEADERS }\r\n        });\r\n    }\r\n\r\n    if (pe.hasStrongNameSignature()) {\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.SN_SIG, elemID: W.KnownElemID.SN_SIG }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.Strings)) {\r\n        children.push({\r\n            target: { pageID: W.PageID.MDS_STRINGS, title: W.KnownTitle.MDS_STRINGS, pageNum: 0 }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.US)) {\r\n        children.push({\r\n            target: { pageID: W.PageID.MDS_US, title: W.KnownTitle.MDS_US, pageNum: 0 }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.GUID)) {\r\n        children.push({\r\n            target: { pageID: W.PageID.MDS_GUID, title: W.KnownTitle.MDS_GUID, pageNum: 0 }\r\n        });\r\n    }\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.MD_HEADERS },\r\n        children\r\n    };\r\n}\r\n\r\nfunction generateMDTablesNavData(pe: PEImage): W.NavData | undefined {\r\n    const pageID = W.PageID.MDS_TABLE;\r\n    const h = pe.getMetadataTableHeader();\r\n    if (!h) return undefined;\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.MDS_TABLE },\r\n    };\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as U from \"../pe/utils\";\r\nimport * as FM from \"./formatter\";\r\nimport * as G from \"./generator\";\r\n\r\nexport function generateMdsStringsPageData(pe: PEImage,\r\n    cache: G.GeneratorCache, cfg: G.GeneratorConfig,\r\n    pgNum: number): W.PagedItemListPageData {\r\n\r\n    checkAndBuildCacheForMdsStrings(pe, cache, cfg);\r\n    const items = cache.mdsStrings && cache.mdsStrings.pages[pgNum];\r\n\r\n    const titleOf = (i: number) => `#String[${FM.formatHexDec(i)}]`;\r\n\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_STRINGS,\r\n            title: W.KnownTitle.MDS_STRINGS,\r\n        },\r\n        items: {\r\n            title: W.KnownTitle.MDS_STRINGS,\r\n            groups: [{\r\n                title: \"\",\r\n                items: items && items.map(index =>\r\n                    FM.formatStringField(titleOf(index), pe.getMdsStringsItem(index)!)\r\n                )\r\n            }]\r\n        },\r\n        paging: {\r\n            currentPageNumber: pgNum,\r\n            pageNavList: cache.mdsStrings!.pages.map((v, i) => ({\r\n                title: `Page[${i + 1}] (${titleOf(v[0])} - ${titleOf(v[v.length - 1])}})`,\r\n                pageID: W.PageID.MDS_STRINGS,\r\n                pageNum: i\r\n            }))\r\n        }\r\n    };\r\n}\r\n\r\nexport function generateMdsUSPageData(pe: PEImage,\r\n    cache: G.GeneratorCache, cfg: G.GeneratorConfig,\r\n    pgNum: number): W.PagedItemListPageData {\r\n\r\n    checkAndBuildCacheForMdsUS(pe, cache, cfg);\r\n    const items = cache.mdsUS && cache.mdsUS.pages[pgNum];\r\n\r\n    const titleOf = (i: number) => `#US[${FM.formatHexDec(i)}]`;\r\n\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_US,\r\n            title: W.KnownTitle.MDS_US,\r\n        },\r\n        items: {\r\n            title: W.KnownTitle.MDS_US,\r\n            groups: items && items.map(index => {\r\n                const item = pe.getMdsUSItem(index)!;\r\n                return {\r\n                    title: titleOf(index),\r\n                    items: [\r\n                        FM.formatCompressedUIntField(\"Size\", item.Size),\r\n                        FM.formatStringField(\"Value\", item.Value),\r\n                        FM.formatBytesField(\"Suffix\", item.Suffix),\r\n                    ]\r\n                }\r\n            })\r\n        },\r\n        paging: {\r\n            currentPageNumber: pgNum,\r\n            pageNavList: cache.mdsUS!.pages.map((v, i) => ({\r\n                title: `Page[${i + 1}] (${titleOf(v[0])} - ${titleOf(v[v.length - 1])}})`,\r\n                pageID: W.PageID.MDS_US,\r\n                pageNum: i\r\n            }))\r\n        }\r\n    };\r\n}\r\n\r\nexport function generateMdsGuidPageData(pe: PEImage): W.PagedItemListPageData {\r\n    const titleOf = (i: number) => `#GUID[${FM.formatHexDec(i)}]`;\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_GUID,\r\n            title: W.KnownTitle.MDS_GUID,\r\n        },\r\n        items: {\r\n            title: W.KnownTitle.MDS_GUID,\r\n            groups: [{\r\n                title: \"\",\r\n                items: pe.getMdsGuidItems()!.items.map((v, i) =>\r\n                    FM.formatGuidField(titleOf(i + 1), v))\r\n            }]\r\n        },\r\n    };\r\n}\r\n\r\nfunction checkAndBuildCacheForMdsStrings(pe: PEImage, cache: G.GeneratorCache, cfg: G.GeneratorConfig): void {\r\n    if (cache.mdsStrings) return;\r\n\r\n    const mdRoot = pe.getMetadataRoot();\r\n    if (!mdRoot) return;\r\n\r\n    const sh = pe.getMetadataStreamHeader(F.MetadataStreamName.Strings);\r\n    if (!sh) return;\r\n\r\n    let indexes: number[] = [0];\r\n    const base = mdRoot._offset + sh.Offset.value;\r\n    for (let p = 1; p < sh.Size.value; p++) {\r\n        if (pe.getU1(base + p - 1) == 0) {\r\n            indexes.push(p);\r\n        }\r\n    }\r\n\r\n    cache.mdsStrings = {\r\n        pages: putIndexToPages(indexes, cfg.mdsOffsetListPageSize)\r\n    };\r\n}\r\n\r\nfunction checkAndBuildCacheForMdsUS(pe: PEImage, cache: G.GeneratorCache, cfg: G.GeneratorConfig): void {\r\n    if (cache.mdsUS) return;\r\n\r\n    const mdRoot = pe.getMetadataRoot();\r\n    if (!mdRoot) return;\r\n\r\n    const sh = pe.getMetadataStreamHeader(F.MetadataStreamName.US);\r\n    if (!sh) return;\r\n\r\n    const indexes = getBlobIndexes(pe, mdRoot._offset + sh.Offset.value, sh.Size.value);\r\n\r\n    cache.mdsUS = {\r\n        pages: putIndexToPages(indexes, cfg.mdsOffsetListPageSize)\r\n    };\r\n}\r\n\r\nfunction getBlobIndexes(pe: PEImage, base: number, size: number): number[] {\r\n    let indexes: number[] = [];\r\n    let p = 0;\r\n\r\n    while (p < size) {\r\n        indexes.push(p);\r\n        const dtsz = U.getCompressedIntSize(pe.getU1(base + p));\r\n        const szval = U.decompressUint(pe.getData(base + p, dtsz));\r\n        p += szval + dtsz;\r\n    }\r\n\r\n    return indexes;\r\n}\r\n\r\nfunction putIndexToPages(indexes: number[], pageSize: number): G.MdsOffsetListPageCache[] {\r\n    let pages: G.MdsOffsetListPageCache[] = [];\r\n    let pageItems: G.MdsOffsetListPageCache = [];\r\n\r\n    for (let pStart = 0, pEnd = 0; pStart < indexes.length; pStart = pEnd) {\r\n        while (indexes[pEnd] - indexes[pStart] < pageSize\r\n            && pEnd < indexes.length) {\r\n            pageItems.push(indexes[pEnd++]);\r\n        }\r\n        pages.push(pageItems.slice());\r\n        pageItems = [];\r\n    }\r\n\r\n    return pages;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateMdsTablePageData(pe: PEImage): W.MdsTablePageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_TABLE,\r\n            title: W.KnownTitle.MDS_TABLE,\r\n        },\r\n        tableHeader: generateMDTableHeader(pe),\r\n        tableInfo: generateMDTableList(pe),\r\n    };\r\n}\r\n\r\nfunction generateMDTableHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.MDT_HEADER,\r\n        elemID: W.KnownElemID.MDT_HEADER,\r\n    };\r\n\r\n    const h = pe.getMetadataTableHeader();\r\n    if (!h) return s;\r\n\r\n    s.groups = [{\r\n        title: \"\",\r\n        items: [\r\n            FM.formatU4Field(\"Reserved\", h.Reserved),\r\n            FM.formatU1Field(\"MajorVersion\", h.MajorVersion, true),\r\n            FM.formatU1Field(\"MinorVersion\", h.MinorVersion, true),\r\n            FM.formatU1Field(\"HeapSizes\", h.HeapSizes),\r\n            FM.formatU1Field(\"Reserved2\", h.Reserved2),\r\n            FM.formatU8Field(\"Valid\", h.Valid),\r\n            FM.formatU8Field(\"Sorted\", h.Sorted),\r\n        ]\r\n    }, {\r\n        title: \"Rows\",\r\n        items: h.Rows.items.map((v, i) => FM.formatU4Field(`Rows[${i}]`, v, true))\r\n    }];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateMDTableList(pe: PEImage): W.MdTableInfo[] {\r\n    let s: W.MdTableInfo[] = [];\r\n    for (let id = 0; id < F.NumberOfMdTables; id++) {\r\n        s.push({\r\n            index: `${FM.formatU1Hex(id)} (${FM.formatDec(id)})`,\r\n            name: F.MetadataTableIndex[id],\r\n            valid: pe.isMetadataTableValid(id),\r\n            sorted: pe.isMetadataTableSorted(id),\r\n            rows: FM.formatDec(pe.getMetadataTableRows(id)),\r\n        });\r\n    }\r\n    return s;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateMetadataHeadersPageData(pe: PEImage): W.MetadataHeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MD_HEADERS,\r\n            title: W.KnownTitle.MD_HEADERS,\r\n        },\r\n        cliHeader: generateCliHeader(pe),\r\n        metadataRoot: generateMetadataRoot(pe),\r\n        streamHeaders: generateMetadataStreamHeader(pe),\r\n        snSignature: generateSNSignature(pe),\r\n    };\r\n}\r\n\r\nfunction generateCliHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.CLI_HEADER,\r\n        elemID: W.KnownElemID.CLI_HEADER,\r\n    };\r\n\r\n    const h = pe.getCliHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"cb\", h.cb, true),\r\n        FM.formatU2Field(\"MajorRuntimeVersion\", h.MajorRuntimeVersion, true),\r\n        FM.formatU2Field(\"MinorRuntimeVersion\", h.MinorRuntimeVersion, true),\r\n        FM.formatU4Field(\"MetaData.VirtualAddress\", h.MetaData.VirtualAddress),\r\n        FM.formatU4Field(\"MetaData.Size\", h.MetaData.Size, true),\r\n        FM.formatU4Field(\"Flags\", h.Flags),\r\n        FM.formatU4Field(\"EntryPointToken\", h.EntryPointToken),\r\n        FM.formatU4Field(\"Resources.VirtualAddress\", h.Resources.VirtualAddress),\r\n        FM.formatU4Field(\"Resources.Size\", h.Resources.Size, true),\r\n        FM.formatU4Field(\"StrongNameSignature.VirtualAddress\", h.StrongNameSignature.VirtualAddress),\r\n        FM.formatU4Field(\"StrongNameSignature.Size\", h.StrongNameSignature.Size, true),\r\n        FM.formatU4Field(\"CodeManagerTable.VirtualAddress\", h.CodeManagerTable.VirtualAddress),\r\n        FM.formatU4Field(\"CodeManagerTable.Size\", h.CodeManagerTable.Size, true),\r\n        FM.formatU4Field(\"VTableFixups.VirtualAddress\", h.VTableFixups.VirtualAddress),\r\n        FM.formatU4Field(\"VTableFixups.Size\", h.VTableFixups.Size, true),\r\n        FM.formatU4Field(\"ExportAddressTableJumps.VirtualAddress\", h.ExportAddressTableJumps.VirtualAddress),\r\n        FM.formatU4Field(\"ExportAddressTableJumps.Size\", h.ExportAddressTableJumps.Size, true),\r\n        FM.formatU4Field(\"ManagedNativeHeader.VirtualAddress\", h.ManagedNativeHeader.VirtualAddress),\r\n        FM.formatU4Field(\"ManagedNativeHeader.Size\", h.ManagedNativeHeader.Size, true),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSNSignature(pe: PEImage): W.SimpleStruct | undefined {\r\n    const d = pe.getStrongNameSignature();\r\n    if (!d) return undefined;\r\n\r\n    const s: W.SimpleStruct = {\r\n        title: W.KnownTitle.SN_SIG,\r\n        elemID: W.KnownElemID.SN_SIG,\r\n        items: [FM.formatBytesField(\"Signature\", d)]\r\n    };\r\n    return s;\r\n}\r\n\r\nfunction generateMetadataRoot(pe: PEImage): W.SimpleStruct | undefined {\r\n    const h = pe.getMetadataRoot();\r\n    if (!h) return undefined;\r\n\r\n    const s: W.SimpleStruct = {\r\n        title: W.KnownTitle.MD_ROOT,\r\n        elemID: W.KnownElemID.MD_ROOT,\r\n        items: [\r\n            FM.formatU4Field(\"Signature\", h.Signature),\r\n            FM.formatU2Field(\"MajorVersion\", h.MajorVersion, true),\r\n            FM.formatU2Field(\"MinorVersion\", h.MinorVersion, true),\r\n            FM.formatU4Field(\"Reserved\", h.Reserved),\r\n            FM.formatU4Field(\"VersionLength\", h.VersionLength, true),\r\n            FM.formatStringField(\"VersionString\", h.VersionString),\r\n            FM.formatBytesField(\"VersionPadding\", h.VersionPadding),\r\n            FM.formatU2Field(\"Flags\", h.Flags),\r\n            FM.formatU2Field(\"Streams\", h.Streams, true),\r\n        ]\r\n    };\r\n    return s;\r\n}\r\n\r\nfunction generateMetadataStreamHeader(pe: PEImage): W.GroupedStruct | undefined {\r\n    const h = pe.getMetadataStreamHeaders();\r\n    if (!h) return undefined;\r\n\r\n    const s: W.GroupedStruct = {\r\n        title: W.KnownTitle.MDS_HEADERS,\r\n        elemID: W.KnownElemID.MDS_HEADERS,\r\n        groups: h.items.map((v, i) => ({\r\n            title: `[${i}] (${v.Name.value})`,\r\n            items: [\r\n                FM.formatU4Field(\"Offset\", v.Offset),\r\n                FM.formatU4Field(\"Size\", v.Size, true),\r\n                FM.formatStringField(\"Name\", v.Name),\r\n                FM.formatBytesField(\"Padding\", v.Padding),\r\n            ]\r\n        }))\r\n    };\r\n    return s;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateHeadersPageData(pe: PEImage): W.HeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.HEADERS,\r\n            title: W.KnownTitle.HEADERS,\r\n        },\r\n        dosHeader: generateDosHeader(pe),\r\n        peSignature: generatePESignature(pe),\r\n        fileHeader: generateFileHeader(pe),\r\n        optionalHeader: generateOptionalHeader(pe),\r\n        dataDirectories: generateDataDirectories(pe),\r\n        sectionHeaders: generateSectionHeaders(pe),\r\n    };\r\n}\r\n\r\nfunction generateDosHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.DOS_HEADER,\r\n        elemID: W.KnownElemID.DOS_HEADER,\r\n    };\r\n\r\n    const h = pe.getDosHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"e_magic\", h.e_magic),\r\n        FM.formatU2Field(\"e_cblp\", h.e_cblp),\r\n        FM.formatU2Field(\"e_cp\", h.e_cp),\r\n        FM.formatU2Field(\"e_crlc\", h.e_crlc),\r\n        FM.formatU2Field(\"e_cparhdr\", h.e_cparhdr),\r\n        FM.formatU2Field(\"e_minalloc\", h.e_minalloc),\r\n        FM.formatU2Field(\"e_maxalloc\", h.e_maxalloc),\r\n        FM.formatU2Field(\"e_ss\", h.e_ss),\r\n        FM.formatU2Field(\"e_sp\", h.e_sp),\r\n        FM.formatU2Field(\"e_csum\", h.e_csum),\r\n        FM.formatU2Field(\"e_ip\", h.e_ip),\r\n        FM.formatU2Field(\"e_cs\", h.e_cs),\r\n        FM.formatU2Field(\"e_lfarlc\", h.e_lfarlc),\r\n        FM.formatU2Field(\"e_ovno\", h.e_ovno),\r\n        FM.formatBytesField(\"e_res\", h.e_res),\r\n        FM.formatU2Field(\"e_oemid\", h.e_oemid),\r\n        FM.formatU2Field(\"e_oeminfo\", h.e_oeminfo),\r\n        FM.formatBytesField(\"e_res2\", h.e_res2),\r\n        FM.formatU4Field(\"e_lfanew\", h.e_lfanew),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generatePESignature(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.PE_SIGNATURE,\r\n        elemID: W.KnownElemID.PE_SIGNATURE,\r\n    };\r\n\r\n    const h = pe.getPESignature();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"PE Signature\", h),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateFileHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.FILE_HEADER,\r\n        elemID: W.KnownElemID.FILE_HEADER,\r\n    };\r\n\r\n    const h = pe.getFileHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"Machine\", h.Machine),\r\n        FM.formatU2Field(\"NumberOfSections\", h.NumberOfSections, true),\r\n        FM.formatU4Field(\"TimeDateStamp\", h.TimeDateStamp),\r\n        FM.formatU4Field(\"PointerToSymbolTable\", h.PointerToSymbolTable),\r\n        FM.formatU4Field(\"NumberOfSymbols\", h.NumberOfSymbols, true),\r\n        FM.formatU2Field(\"SizeOfOptionalHeader\", h.SizeOfOptionalHeader, true),\r\n        FM.formatU2Field(\"Characteristics\", h.Characteristics),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateOptionalHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.OPTIONAL_HEADER,\r\n        elemID: W.KnownElemID.OPTIONAL_HEADER,\r\n    };\r\n\r\n    const h = pe.getOptionalHeader();\r\n    if (!h) return s;\r\n\r\n    switch (h.Magic.value) {\r\n        case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n            s.title += \" (32-bit)\";\r\n            fillOptionalHeader32Fields(s, <S.ImageOptionalHeader32>h);\r\n            break;\r\n\r\n        case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n            s.title += \" (64-bit)\";\r\n            fillOptionalHeader64Fields(s, <S.ImageOptionalHeader64>h);\r\n            break;\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nfunction fillOptionalHeader32Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader32): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n            FM.formatU4Field(\"BaseOfData\", h.BaseOfData),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU4Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU4Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU4Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU4Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU4Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction fillOptionalHeader64Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader64): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU8Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU8Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU8Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU8Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU8Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction generateDataDirectories(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.DATA_DIRECTORIES,\r\n        elemID: W.KnownElemID.DATA_DIRECTORIES,\r\n    };\r\n\r\n    const h = pe.getDataDirectories();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] ${F.ImageDirectoryEntry[i] || \"\"}`,\r\n        items: [\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"Size\", v.Size, true),\r\n        ]\r\n    } as W.SimpleStruct));\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSectionHeaders(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.SECTION_HEADERS,\r\n        elemID: W.KnownElemID.SECTION_HEADERS,\r\n    };\r\n\r\n    const h = pe.getSectionHeaders();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] (${v.Name.value})`,\r\n        items: [\r\n            FM.formatStringField(\"Name\", v.Name),\r\n            FM.formatU4Field(\"VirtualSize\", v.VirtualSize, true),\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"SizeOfRawData\", v.SizeOfRawData, true),\r\n            FM.formatU4Field(\"PointerToRawData\", v.PointerToRawData),\r\n            FM.formatU4Field(\"PointerToRelocations\", v.PointerToRelocations),\r\n            FM.formatU4Field(\"PointerToLinenumbers\", v.PointerToLinenumbers),\r\n            FM.formatU2Field(\"NumberOfRelocations\", v.NumberOfRelocations, true),\r\n            FM.formatU2Field(\"NumberOfLinenumbers\", v.NumberOfLinenumbers, true),\r\n            FM.formatU4Field(\"Characteristics\", v.Characteristics),\r\n        ]\r\n    }));\r\n\r\n    return s;\r\n}\r\n","import { PEImage } from \"../pe/image\";\r\nimport { generateHeadersPageData } from \"./headers\";\r\nimport { generateMetadataHeadersPageData } from \"./metadata-headers\";\r\nimport { generateMdsTablePageData } from \"./mds-table\";\r\nimport {\r\n    generateMdsStringsPageData,\r\n    generateMdsUSPageData,\r\n    generateMdsGuidPageData\r\n} from \"./mds-list\";\r\n\r\nexport function generatePageData(pe: PEImage, pageID: W.PageID, pageNum?: number): W.PageData {\r\n    switch (pageID) {\r\n        case W.PageID.HEADERS: return generateHeadersPageData(pe);\r\n        case W.PageID.MD_HEADERS: return generateMetadataHeadersPageData(pe);\r\n        case W.PageID.MDS_TABLE: return generateMdsTablePageData(pe);\r\n        case W.PageID.MDS_STRINGS: return generateMdsStringsPageData(pe, cache, cfg, pageNum || 0);\r\n        case W.PageID.MDS_US: return generateMdsUSPageData(pe, cache, cfg, pageNum || 0);\r\n        case W.PageID.MDS_GUID: return generateMdsGuidPageData(pe);\r\n        default: return { nav: { pageID: W.PageID.NOTFOUND, title: W.KnownTitle.NOTFOUND } };\r\n    }\r\n}\r\n\r\nexport interface GeneratorCache {\r\n    mdsStrings?: MdsOffsetListCache;\r\n    mdsUS?: MdsOffsetListCache;\r\n}\r\n\r\nexport type MdsOffsetListCache = {\r\n    pages: MdsOffsetListPageCache[];\r\n}\r\n\r\nexport type MdsOffsetListPageCache = number[];\r\n\r\nexport function clearGeneratorCache(): void {\r\n    cache = {};\r\n}\r\n\r\nexport interface GeneratorConfig {\r\n    mdsOffsetListPageSize: number;\r\n}\r\n\r\nlet cache: GeneratorCache = {};\r\n\r\nconst cfg: GeneratorConfig = {\r\n    mdsOffsetListPageSize: 5000,  // Total bytes per page.\r\n}","export const enum PEErrorType {\r\n    INVALID_DATA_POSITION = \"INVALID_DATA_POSITION\",\r\n    INVALID_DOS_SIGNATURE = \"INVALID_DOS_SIGNATURE\",\r\n    INVALID_PE_SIGNATURE = \"INVALID_PE_SIGNATURE\",\r\n    INVALID_OPTIONAL_HEADER_MAGIC = \"INVALID_OPTIONAL_HEADER_MAGIC\",\r\n    INVALID_DATA_DIRECTORY_COUNT = \"INVALID_DATA_DIRECTORY_COUNT\",\r\n}\r\n\r\nexport class PEError extends Error {\r\n    constructor(\r\n        public type: PEErrorType,\r\n        public offset?: number,\r\n        public size?: number\r\n    ) {\r\n        super(type);\r\n    }\r\n}\r\n","import * as S from \"./structures\";\r\nimport * as F from \"./image-flags\";\r\nimport * as U from \"./utils\";\r\n\r\nexport interface FileDataProvider {\r\n    getU1(p: number): number;\r\n    getU2(p: number): number;\r\n    getU4(p: number): number;\r\n    getData(p: number, sz: number): Uint8Array;\r\n}\r\n\r\n//\r\n// Basic structures.\r\n//\r\n\r\nexport function loadU1Field(d: FileDataProvider, p: number): S.U1Field {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p)\r\n    };\r\n}\r\n\r\nexport function loadU2Field(d: FileDataProvider, p: number): S.U2Field {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p)\r\n    };\r\n}\r\n\r\nexport function loadU4Field(d: FileDataProvider, p: number): S.U4Field {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p)\r\n    };\r\n}\r\n\r\nexport function loadU8Field(d: FileDataProvider, p: number): S.U8Field {\r\n    const low = d.getU4(p);\r\n    const high = d.getU4(p + 4);\r\n\r\n    return {\r\n        _offset: p, _size: 8, data: d.getData(p, 8), low, high\r\n    };\r\n}\r\n\r\nexport function loadCompressedUIntField(d: FileDataProvider, p: number): S.CompressedUIntField {\r\n    const sz = U.getCompressedIntSize(d.getU1(p));\r\n    const data = new Uint8Array(d.getData(p, sz));\r\n    const value = U.decompressUint(data);\r\n\r\n    return { _offset: p, _size: sz, data, value };\r\n}\r\n\r\nexport function loadU1EnumField<T>(d: FileDataProvider, p: number): S.U1EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU2EnumField<T>(d: FileDataProvider, p: number): S.U2EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU4EnumField<T>(d: FileDataProvider, p: number): S.U4EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeByteArrayField(d: FileDataProvider, p: number, sz: number): S.Field {\r\n    return {\r\n        _offset: p, _size: sz, data: d.getData(p, sz)\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeAsciiStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const value = String.fromCharCode.apply(null, Array.from(data).filter(v => v != 0));\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadNullTerminatedStringField(d: FileDataProvider, p: number): S.StringField {\r\n    let bytes: number[] = [];\r\n    let ptr = p;\r\n    let b: number;\r\n\r\n    do {\r\n        b = d.getU1(ptr++);\r\n        bytes.push(b);\r\n    } while (b != 0);\r\n    const str = bytes.slice(0, bytes.length - 1).map(v => `%${v.toString(16)}`).join(\"\");\r\n    const value = decodeURIComponent(str);\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p, data: Uint8Array.from(bytes), value\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeUnicodeStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const arr = new Uint16Array(data.buffer);\r\n    const value = String.fromCodePoint.apply(null, arr);\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadStructArrayByCount<T extends S.FileData>(\r\n    d: FileDataProvider,\r\n    p: number,\r\n    loader: (d: FileDataProvider, p: number) => T,\r\n    count: number): S.StructArray<T> {\r\n\r\n    let items: T[] = [];\r\n    let ptr = p;\r\n    for (let i = 0; i < count; i++) {\r\n        const s = loader(d, ptr);\r\n        items.push(s);\r\n        ptr += s._size;\r\n    }\r\n\r\n    return { _offset: p, _size: ptr - p, items };\r\n}\r\n\r\n//\r\n// Image headers.\r\n//\r\n\r\nexport function loadImageDosHeader(d: FileDataProvider, p: number): S.ImageDosHeader {\r\n    let ptr = p;\r\n\r\n    const e_magic = loadU2Field(d, ptr);\r\n    ptr += e_magic._size;\r\n\r\n    const e_cblp = loadU2Field(d, ptr);\r\n    ptr += e_cblp._size;\r\n\r\n    const e_cp = loadU2Field(d, ptr);\r\n    ptr += e_cp._size;\r\n\r\n    const e_crlc = loadU2Field(d, ptr);\r\n    ptr += e_crlc._size;\r\n\r\n    const e_cparhdr = loadU2Field(d, ptr);\r\n    ptr += e_cparhdr._size;\r\n\r\n    const e_minalloc = loadU2Field(d, ptr);\r\n    ptr += e_minalloc._size;\r\n\r\n    const e_maxalloc = loadU2Field(d, ptr);\r\n    ptr += e_maxalloc._size;\r\n\r\n    const e_ss = loadU2Field(d, ptr);\r\n    ptr += e_ss._size;\r\n\r\n    const e_sp = loadU2Field(d, ptr);\r\n    ptr += e_sp._size;\r\n\r\n    const e_csum = loadU2Field(d, ptr);\r\n    ptr += e_csum._size;\r\n\r\n    const e_ip = loadU2Field(d, ptr);\r\n    ptr += e_ip._size;\r\n\r\n    const e_cs = loadU2Field(d, ptr);\r\n    ptr += e_cs._size;\r\n\r\n    const e_lfarlc = loadU2Field(d, ptr);\r\n    ptr += e_lfarlc._size;\r\n\r\n    const e_ovno = loadU2Field(d, ptr);\r\n    ptr += e_ovno._size;\r\n\r\n    const e_res = loadFixedSizeByteArrayField(d, ptr, 4 * 2);\r\n    ptr += e_res._size;\r\n\r\n    const e_oemid = loadU2Field(d, ptr);\r\n    ptr += e_oemid._size;\r\n\r\n    const e_oeminfo = loadU2Field(d, ptr);\r\n    ptr += e_oeminfo._size;\r\n\r\n    const e_res2 = loadFixedSizeByteArrayField(d, ptr, 10 * 2);\r\n    ptr += e_res2._size;\r\n\r\n    const e_lfanew = loadU4Field(d, ptr);\r\n    ptr += e_lfanew._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        e_magic,\r\n        e_cblp,\r\n        e_cp,\r\n        e_crlc,\r\n        e_cparhdr,\r\n        e_minalloc,\r\n        e_maxalloc,\r\n        e_ss,\r\n        e_sp,\r\n        e_csum,\r\n        e_ip,\r\n        e_cs,\r\n        e_lfarlc,\r\n        e_ovno,\r\n        e_res,\r\n        e_oemid,\r\n        e_oeminfo,\r\n        e_res2,\r\n        e_lfanew,\r\n    };\r\n}\r\n\r\nexport function loadImageFileHeader(d: FileDataProvider, p: number): S.ImageFileHeader {\r\n    let ptr = p;\r\n\r\n    const Machine = loadU2Field(d, ptr);\r\n    ptr += Machine._size;\r\n\r\n    const NumberOfSections = loadU2Field(d, ptr);\r\n    ptr += NumberOfSections._size;\r\n\r\n    const TimeDateStamp = loadU4Field(d, ptr);\r\n    ptr += TimeDateStamp._size;\r\n\r\n    const PointerToSymbolTable = loadU4Field(d, ptr);\r\n    ptr += PointerToSymbolTable._size;\r\n\r\n    const NumberOfSymbols = loadU4Field(d, ptr);\r\n    ptr += NumberOfSymbols._size;\r\n\r\n    const SizeOfOptionalHeader = loadU2Field(d, ptr);\r\n    ptr += SizeOfOptionalHeader._size;\r\n\r\n    const Characteristics = loadU2EnumField<F.ImageFile>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Machine,\r\n        NumberOfSections,\r\n        TimeDateStamp,\r\n        PointerToSymbolTable,\r\n        NumberOfSymbols,\r\n        SizeOfOptionalHeader,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader32(d: FileDataProvider, p: number): S.ImageOptionalHeader32 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const BaseOfData = loadU4Field(d, ptr);\r\n    ptr += BaseOfData._size;\r\n\r\n    const ImageBase = loadU4Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        BaseOfData,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader64(d: FileDataProvider, p: number): S.ImageOptionalHeader64 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const ImageBase = loadU8Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageDataDirectory(d: FileDataProvider, p: number): S.ImageDataDirectory {\r\n    let ptr = p;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        VirtualAddress,\r\n        Size,\r\n    };\r\n}\r\n\r\nexport function loadImageSectionHeader(d: FileDataProvider, p: number): S.ImageSectionHeader {\r\n    let ptr = p;\r\n\r\n    const Name = loadFixedSizeAsciiStringField(d, ptr, 8);\r\n    ptr += Name._size;\r\n\r\n    const VirtualSize = loadU4Field(d, ptr);\r\n    ptr += VirtualSize._size;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const SizeOfRawData = loadU4Field(d, ptr);\r\n    ptr += SizeOfRawData._size;\r\n\r\n    const PointerToRawData = loadU4Field(d, ptr);\r\n    ptr += PointerToRawData._size;\r\n\r\n    const PointerToRelocations = loadU4Field(d, ptr);\r\n    ptr += PointerToRelocations._size;\r\n\r\n    const PointerToLinenumbers = loadU4Field(d, ptr);\r\n    ptr += PointerToLinenumbers._size;\r\n\r\n    const NumberOfRelocations = loadU2Field(d, ptr);\r\n    ptr += NumberOfRelocations._size;\r\n\r\n    const NumberOfLinenumbers = loadU2Field(d, ptr);\r\n    ptr += NumberOfLinenumbers._size;\r\n\r\n    const Characteristics = loadU4EnumField<F.ImageSection>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Name,\r\n        VirtualSize,\r\n        VirtualAddress,\r\n        SizeOfRawData,\r\n        PointerToRawData,\r\n        PointerToRelocations,\r\n        PointerToLinenumbers,\r\n        NumberOfRelocations,\r\n        NumberOfLinenumbers,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\n//\r\n// Metadata structures.\r\n//\r\n\r\nexport function loadCliHeader(d: FileDataProvider, p: number): S.CliHeader {\r\n    let ptr = p;\r\n\r\n    const cb = loadU4Field(d, ptr);\r\n    ptr += cb._size;\r\n\r\n    const MajorRuntimeVersion = loadU2Field(d, ptr);\r\n    ptr += MajorRuntimeVersion._size;\r\n\r\n    const MinorRuntimeVersion = loadU2Field(d, ptr);\r\n    ptr += MinorRuntimeVersion._size;\r\n\r\n    const MetaData = loadImageDataDirectory(d, ptr);\r\n    ptr += MetaData._size;\r\n\r\n    const Flags = loadU4Field(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const EntryPointToken = loadU4Field(d, ptr);\r\n    ptr += EntryPointToken._size;\r\n\r\n    const Resources = loadImageDataDirectory(d, ptr);\r\n    ptr += Resources._size;\r\n\r\n    const StrongNameSignature = loadImageDataDirectory(d, ptr);\r\n    ptr += StrongNameSignature._size;\r\n\r\n    const CodeManagerTable = loadImageDataDirectory(d, ptr);\r\n    ptr += CodeManagerTable._size;\r\n\r\n    const VTableFixups = loadImageDataDirectory(d, ptr);\r\n    ptr += VTableFixups._size;\r\n\r\n    const ExportAddressTableJumps = loadImageDataDirectory(d, ptr);\r\n    ptr += ExportAddressTableJumps._size;\r\n\r\n    const ManagedNativeHeader = loadImageDataDirectory(d, ptr);\r\n    ptr += ManagedNativeHeader._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        cb,\r\n        MajorRuntimeVersion,\r\n        MinorRuntimeVersion,\r\n        MetaData,\r\n        Flags,\r\n        EntryPointToken,\r\n        Resources,\r\n        StrongNameSignature,\r\n        CodeManagerTable,\r\n        VTableFixups,\r\n        ExportAddressTableJumps,\r\n        ManagedNativeHeader,\r\n    };\r\n}\r\n\r\nexport function loadMetadataRoot(d: FileDataProvider, p: number): S.MetadataRoot {\r\n    let ptr = p;\r\n\r\n    const Signature = loadU4Field(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    const MajorVersion = loadU2Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU2Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const Reserved = loadU4Field(d, ptr);\r\n    ptr += Reserved._size;\r\n\r\n    const VersionLength = loadU4Field(d, ptr);\r\n    ptr += VersionLength._size;\r\n\r\n    const VersionString = loadNullTerminatedStringField(d, ptr);\r\n    ptr += VersionString._size;\r\n\r\n    const paddingSize = U.calculatePadding(VersionString._size);\r\n    const VersionPadding = loadFixedSizeByteArrayField(d, ptr, paddingSize);\r\n    ptr += VersionPadding._size;\r\n\r\n    const Flags = loadU2Field(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Streams = loadU2Field(d, ptr);\r\n    ptr += Streams._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Signature,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        Reserved,\r\n        VersionLength,\r\n        VersionString,\r\n        VersionPadding,\r\n        Flags,\r\n        Streams,\r\n    };\r\n}\r\n\r\nexport function loadMetadataStreamHeader(d: FileDataProvider, p: number): S.MetadataStreamHeader {\r\n    let ptr = p;\r\n\r\n    const Offset = loadU4Field(d, ptr);\r\n    ptr += Offset._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    const Name = loadNullTerminatedStringField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const paddingSize = U.calculatePadding(Name._size);\r\n    const Padding = loadFixedSizeByteArrayField(d, ptr, paddingSize);\r\n    ptr += Padding._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Offset,\r\n        Size,\r\n        Name,\r\n        Padding,\r\n    };\r\n}\r\n\r\nexport function loadMetadataTableHeader(d: FileDataProvider, p: number): S.MetadataTableHeader {\r\n    let ptr = p;\r\n\r\n    const Reserved = loadU4Field(d, ptr);\r\n    ptr += Reserved._size;\r\n\r\n    const MajorVersion = loadU1Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU1Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const HeapSizes = loadU1Field(d, ptr);\r\n    ptr += HeapSizes._size;\r\n\r\n    const Reserved2 = loadU1Field(d, ptr);\r\n    ptr += Reserved2._size;\r\n\r\n    const Valid = loadU8Field(d, ptr);\r\n    ptr += Valid._size;\r\n\r\n    const Sorted = loadU8Field(d, ptr);\r\n    ptr += Sorted._size;\r\n\r\n    const tables = U.count1(Valid.high) + U.count1(Valid.low);\r\n    const Rows = loadStructArrayByCount(d, ptr, loadU4Field, tables);\r\n    ptr += Rows._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Reserved,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        HeapSizes,\r\n        Reserved2,\r\n        Valid,\r\n        Sorted,\r\n        Rows,\r\n    };\r\n}\r\n\r\nexport function loadMetadataUSItem(d: FileDataProvider, p: number): S.MetadataUSItem {\r\n    let ptr = p;\r\n\r\n    const Size = loadCompressedUIntField(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    const sz = Size.value;\r\n    const strSize = sz > 0 ? sz - 1 : 0;\r\n    const suffixSize = sz > 0 ? 1 : 0;\r\n\r\n    const Value = loadFixedSizeUnicodeStringField(d, ptr, strSize);\r\n    ptr += Value._size;\r\n\r\n    const Suffix = loadFixedSizeByteArrayField(d, ptr, suffixSize);\r\n    ptr += Suffix._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Size,\r\n        Value,\r\n        Suffix,\r\n    };\r\n}","import * as S from \"./structures\";\r\nimport * as A from \"./aux-structures\";\r\nimport * as L from \"./loader\";\r\nimport * as F from \"./image-flags\";\r\nimport * as E from \"./error\";\r\nimport * as U from \"./utils\";\r\n\r\nexport class PEImage implements L.FileDataProvider {\r\n    public static load(buf: ArrayBuffer): PEImage {\r\n        return new PEImage(buf);\r\n    }\r\n\r\n    //\r\n    // FileDataProvider functions.\r\n    //\r\n\r\n    public getU1(p: number): number {\r\n        this.check(p, 1);\r\n        return this.data.getUint8(p);\r\n    }\r\n\r\n    public getU2(p: number): number {\r\n        this.check(p, 2);\r\n        return this.data.getUint16(p, true);\r\n    }\r\n\r\n    public getU4(p: number): number {\r\n        this.check(p, 3);\r\n        return this.data.getUint32(p, true);\r\n    }\r\n\r\n    public getData(p: number, sz: number): Uint8Array {\r\n        this.check(p, sz);\r\n        return new Uint8Array(this.data.buffer.slice(p, p + sz));\r\n    }\r\n\r\n    //\r\n    // Image attributes.\r\n    //\r\n\r\n    public is32Bit(): boolean | undefined {\r\n        const optHdr = this.getOptionalHeader();\r\n        if (optHdr == null) {\r\n            return undefined;\r\n        }\r\n\r\n        switch (optHdr.Magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC: return true;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC: return false;\r\n            default: return undefined;\r\n        }\r\n    }\r\n\r\n    public isManaged(): boolean {\r\n        const dd = this.getDataDirectories();\r\n        return dd != null && this.isDataDirectoryValid(\r\n            dd.items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR]\r\n        );\r\n    }\r\n\r\n    public hasMetadata(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.MetaData);\r\n    }\r\n\r\n    public hasManagedResources(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.Resources);\r\n    }\r\n\r\n    public hasStrongNameSignature(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.StrongNameSignature);\r\n    }\r\n\r\n    public isMetadataTableValid(id: F.MetadataTableIndex): boolean {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].valid;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public isMetadataTableSorted(id: F.MetadataTableIndex): boolean {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].sorted;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public getMetadataTableRows(id: F.MetadataTableIndex): number {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].rows;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    //\r\n    // Image headers.\r\n    //\r\n\r\n    public getDosHeader(): S.ImageDosHeader | undefined {\r\n        return this.dosHeader;\r\n    }\r\n\r\n    public getPESignature(): S.U4Field | undefined {\r\n        return this.peSignature;\r\n    }\r\n\r\n    public getFileHeader(): S.ImageFileHeader | undefined {\r\n        return this.fileHeader;\r\n    }\r\n\r\n    public getOptionalHeader(): S.ImageOptionalHeader32 | S.ImageOptionalHeader64 | undefined {\r\n        return this.optionalHeader;\r\n    }\r\n\r\n    public getDataDirectories(): S.StructArray<S.ImageDataDirectory> | undefined {\r\n        return this.dataDirectories;\r\n    }\r\n\r\n    public getSectionHeaders(): S.StructArray<S.ImageSectionHeader> | undefined {\r\n        return this.sectionHeaders;\r\n    }\r\n\r\n    //\r\n    // Metadata structures.\r\n    //\r\n\r\n    public getCliHeader(): S.CliHeader | undefined {\r\n        if (this.cliHeader) return this.cliHeader;\r\n        if (!this.isManaged()) return undefined;\r\n\r\n        const offset = this.rvaToOffset(this.dataDirectories!\r\n            .items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR]\r\n            .VirtualAddress.value);\r\n\r\n        this.cliHeader = L.loadCliHeader(this, offset);\r\n        return this.cliHeader;\r\n    }\r\n\r\n    public getMetadataRoot(): S.MetadataRoot | undefined {\r\n        if (this.metadataRoot) return this.metadataRoot;\r\n\r\n        const cliHeader = this.getCliHeader();\r\n        if (!cliHeader) return undefined;\r\n\r\n        const offset = this.rvaToOffset(cliHeader.MetaData.VirtualAddress.value);\r\n        if (!offset) return undefined;\r\n\r\n        this.metadataRoot = L.loadMetadataRoot(this, offset);\r\n        return this.metadataRoot;\r\n    }\r\n\r\n    public getMetadataStreamHeaders(): S.StructArray<S.MetadataStreamHeader> | undefined {\r\n        if (this.metadataStreamHeaders) return this.metadataStreamHeaders;\r\n\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot || !mdRoot.Streams.value) return undefined;\r\n\r\n        this.metadataStreamHeaders = L.loadStructArrayByCount(\r\n            this,\r\n            mdRoot._offset + mdRoot._size,\r\n            L.loadMetadataStreamHeader,\r\n            mdRoot.Streams.value\r\n        );\r\n        return this.metadataStreamHeaders;\r\n    }\r\n\r\n    public getMetadataStreamHeader(name: F.MetadataStreamName): S.MetadataStreamHeader | undefined {\r\n        const headers = this.getMetadataStreamHeaders();\r\n        if (!headers) return undefined;\r\n\r\n        return headers.items.filter(v => v.Name.value == name).shift();\r\n    }\r\n\r\n    public getStrongNameSignature(): S.Field | undefined {\r\n        if (this.strongNameSignature) return this.strongNameSignature;\r\n\r\n        const cliHeader = this.getCliHeader();\r\n        if (!cliHeader) return undefined;\r\n\r\n        const offset = this.rvaToOffset(cliHeader.StrongNameSignature.VirtualAddress.value);\r\n        if (!offset) return undefined;\r\n\r\n        this.strongNameSignature = L.loadFixedSizeByteArrayField(\r\n            this, offset,\r\n            cliHeader.StrongNameSignature.Size.value);\r\n        return this.strongNameSignature;\r\n    }\r\n\r\n    public getMetadataTableHeader(): S.MetadataTableHeader | undefined {\r\n        if (this.metadataTableHeader) return this.metadataTableHeader;\r\n\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.Table);\r\n        if (!sh) return undefined;\r\n\r\n        const offset = mdRoot._offset + sh.Offset.value;\r\n        this.metadataTableHeader = L.loadMetadataTableHeader(this, offset);\r\n        this.fillMetadataTableInfo();\r\n\r\n        return this.metadataTableHeader;\r\n    }\r\n\r\n    public getMdsStringsItem(offset: number): S.StringField | undefined {\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.Strings);\r\n        if (!sh) return undefined;\r\n\r\n        if (offset < 0 || offset >= sh.Size.value) {\r\n            return undefined;\r\n        } else {\r\n            return L.loadNullTerminatedStringField(this,\r\n                mdRoot._offset + sh.Offset.value + offset);\r\n        }\r\n    }\r\n\r\n    public getMdsUSItem(offset: number): S.MetadataUSItem | undefined {\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.US);\r\n        if (!sh) return undefined;\r\n\r\n        if (offset < 0 || offset >= sh.Size.value) {\r\n            return undefined;\r\n        } else {\r\n            return L.loadMetadataUSItem(this,\r\n                mdRoot._offset + sh.Offset.value + offset);\r\n        }\r\n    }\r\n\r\n    public getMdsGuidItems(): S.StructArray<S.Field> | undefined {\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.GUID);\r\n        if (!sh) return undefined;\r\n\r\n        const count = sh.Size.value / 16;\r\n        return L.loadStructArrayByCount(\r\n            this,\r\n            mdRoot._offset + sh.Offset.value,\r\n            (d, p) => L.loadFixedSizeByteArrayField(d, p, 16),\r\n            count);\r\n    }\r\n\r\n    //\r\n    // Utilities.\r\n    //\r\n\r\n    public rvaToOffset(rva: number): number {\r\n        const sh = this.getSectionHeaderByRva(rva);\r\n        if (!sh) return 0;\r\n\r\n        return rva - sh.VirtualAddress.value + sh.PointerToRawData.value;\r\n    }\r\n\r\n    public offsetToRva(offset: number): number {\r\n        const sh = this.getSectionHeaderByOffset(offset);\r\n        if (!sh) return 0;\r\n\r\n        return offset - sh.PointerToRawData.value + sh.VirtualAddress.value;\r\n    }\r\n\r\n    //\r\n    // Private implementations.\r\n    //\r\n\r\n    private check(p: number, sz: number): void {\r\n        if (p < 0 || p >= this.data.byteLength\r\n            || sz < 0 || p + sz > this.data.byteLength) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_POSITION, p, sz);\r\n        }\r\n    }\r\n\r\n    private constructor(buf: ArrayBuffer) {\r\n        this.data = new DataView(buf);\r\n        this.loadHeaders();\r\n    }\r\n\r\n    private loadHeaders(): void {\r\n        let ptr = 0;\r\n        this.dosHeader = L.loadImageDosHeader(this, ptr);\r\n\r\n        if (this.dosHeader.e_magic.value != F.IMAGE_DOS_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DOS_SIGNATURE, ptr, 2);\r\n        }\r\n\r\n        ptr = this.dosHeader.e_lfanew.value;\r\n        this.peSignature = L.loadU4Field(this, ptr);\r\n\r\n        if (this.peSignature.value != F.IMAGE_NT_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_PE_SIGNATURE, ptr, 4);\r\n        }\r\n\r\n        ptr += this.peSignature._size;\r\n        this.fileHeader = L.loadImageFileHeader(this, ptr);\r\n\r\n        ptr += this.fileHeader._size;\r\n        const magic = L.loadU2Field(this, ptr);\r\n        switch (magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader32(this, ptr);\r\n                break;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader64(this, ptr);\r\n                break;\r\n            default:\r\n                throw new E.PEError(E.PEErrorType.INVALID_OPTIONAL_HEADER_MAGIC, ptr, 2);\r\n        }\r\n\r\n        if (this.optionalHeader.NumberOfRvaAndSizes.value != F.IMAGE_NUMBEROF_DIRECTORY_ENTRIES) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_DIRECTORY_COUNT,\r\n                this.optionalHeader.NumberOfRvaAndSizes._offset,\r\n                this.optionalHeader.NumberOfRvaAndSizes._size);\r\n        }\r\n\r\n        ptr += this.optionalHeader._size;\r\n        this.dataDirectories = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageDataDirectory,\r\n            this.optionalHeader.NumberOfRvaAndSizes.value);\r\n\r\n        ptr += this.dataDirectories._size;\r\n        this.sectionHeaders = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageSectionHeader,\r\n            this.fileHeader.NumberOfSections.value);\r\n    }\r\n\r\n    private getSectionHeaderByOffset(offset: number): S.ImageSectionHeader | undefined {\r\n        return this.sectionHeaders && this.sectionHeaders.items.filter(h => {\r\n            const p = h.PointerToRawData.value;\r\n            const sz = h.SizeOfRawData.value;\r\n            return offset >= p && offset < p + sz;\r\n        }).shift();\r\n    }\r\n\r\n    private getSectionHeaderByRva(rva: number): S.ImageSectionHeader | undefined {\r\n        return this.sectionHeaders && this.sectionHeaders.items.filter(h => {\r\n            const p = h.VirtualAddress.value;\r\n            const sz = h.VirtualSize.value;\r\n            return rva >= p && rva < p + sz;\r\n        }).shift();\r\n    }\r\n\r\n    private isDataDirectoryValid(dd?: S.ImageDataDirectory): boolean {\r\n        return (dd && dd.VirtualAddress.value > 0 && dd.Size.value > 0) || false;\r\n    }\r\n\r\n    private fillMetadataTableInfo(): void {\r\n        const h = this.metadataTableHeader;\r\n        if (!h) return;\r\n\r\n        let info: A.MetadataTableInfo = {};\r\n        let nValid = 0;\r\n        for (let id = 0; id < F.NumberOfMdTables; id++) {\r\n            const valid = U.isSetLong(h.Valid.high, h.Valid.low, id);\r\n            const sorted = U.isSetLong(h.Sorted.high, h.Sorted.low, id);\r\n            const rows = valid ? h.Rows.items[nValid++].value : 0;\r\n            info[id] = { valid, sorted, rows };\r\n        }\r\n        this.metadataTableInfo = info;\r\n    }\r\n\r\n    private readonly data: DataView;\r\n\r\n    private dosHeader?: S.ImageDosHeader;\r\n    private peSignature?: S.U4Field;\r\n    private fileHeader?: S.ImageFileHeader;\r\n    private optionalHeader?: S.ImageOptionalHeader32 | S.ImageOptionalHeader64;\r\n    private dataDirectories?: S.StructArray<S.ImageDataDirectory>;\r\n    private sectionHeaders?: S.StructArray<S.ImageSectionHeader>;\r\n\r\n    private cliHeader?: S.CliHeader;\r\n    private metadataRoot?: S.MetadataRoot;\r\n    private metadataStreamHeaders?: S.StructArray<S.MetadataStreamHeader>;\r\n    private strongNameSignature?: S.Field;\r\n\r\n    private metadataTableHeader?: S.MetadataTableHeader;\r\n    private metadataTableInfo?: A.MetadataTableInfo;\r\n}\r\n","export function createResNavDataMessage(navList: W.NavData[]): W.ResNavDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_NAV_DATA,\r\n        navList\r\n    };\r\n}\r\n\r\nexport function createResPageDataMessage(pageData: W.PageData): W.ResPageDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PAGE_DATA,\r\n        pageData\r\n    };\r\n}\r\n\r\nexport function createResPEPropsMessage(is32Bit?: boolean, isManaged?: boolean): W.ResPEPropsMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_PROPS,\r\n        is32Bit,\r\n        isManaged\r\n    };\r\n}\r\n\r\nexport function createResPEErrorMessage(error: string): W.ResPEErrorMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_ERROR,\r\n        error\r\n    };\r\n}\r\n","import * as M from \"./message\";\r\nimport { PEImage } from \"./pe/image\";\r\nimport { generatePageData, clearGeneratorCache } from \"./page-data/generator\";\r\nimport { generateNavList } from \"./page-data/nav-data\";\r\n\r\nlet pe: PEImage | null = null;\r\n\r\nonmessage = (ev) => {\r\n    const msg = ev.data as W.WorkerMessage;\r\n    switch (msg.type) {\r\n        case W.WorkerMessageType.REQ_OPEN_FILE:\r\n            handleReqOpenFile(msg as W.ReqOpenFileMessage);\r\n            break;\r\n\r\n        case W.WorkerMessageType.REQ_OPEN_NAV:\r\n            handleReqOpenNav(msg as W.ReqOpenNavMessage);\r\n            break;\r\n    }\r\n};\r\n\r\nfunction handleReqOpenFile(msg: W.ReqOpenFileMessage): void {\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = ev => {\r\n        try {\r\n            const buf = <ArrayBuffer>(<FileReader>ev.target).result;\r\n            pe = PEImage.load(buf);\r\n            clearGeneratorCache();\r\n\r\n            // Response with page data.\r\n            const pageData = generatePageData(pe, W.PageID.HEADERS);\r\n            const pageDataMsg = M.createResPageDataMessage(pageData);\r\n            postMessage(pageDataMsg);\r\n\r\n            // Response with PE properties.\r\n            const is32Bit = pe.is32Bit();\r\n            const isManaged = pe.isManaged();\r\n            const pePropsMsg = M.createResPEPropsMessage(is32Bit, isManaged);\r\n            postMessage(pePropsMsg);\r\n\r\n            // Response with navigation data.\r\n            const navList = generateNavList(pe);\r\n            const navMsg = M.createResNavDataMessage(navList);\r\n            postMessage(navMsg);\r\n        } catch (ex) {\r\n            const msg = M.createResPEErrorMessage(ex.message\r\n                || `Unknown error: ${JSON.stringify(ex)}`);\r\n            postMessage(msg);\r\n        }\r\n    };\r\n\r\n    reader.onerror = ev => {\r\n        pe = null;\r\n        const msg = M.createResPEErrorMessage(\"Can't open file.\");\r\n        postMessage(msg);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(msg.file);\r\n}\r\n\r\nfunction handleReqOpenNav(msg: W.ReqOpenNavMessage): void {\r\n    if (pe != null) {\r\n        const { pageID, pageNum, elemID } = msg.target;\r\n        const pageData = generatePageData(pe, pageID, pageNum);\r\n        pageData.nav.elemID = elemID;\r\n        const res = M.createResPageDataMessage(pageData);\r\n        postMessage(res);\r\n    }\r\n}"],"sourceRoot":""}