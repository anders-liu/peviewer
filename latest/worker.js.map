{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker/page-data/formatter.ts","webpack:///./src/worker/pe/image-flags.ts","webpack:///./src/worker/pe/utils.ts","webpack:///./src/worker/page-data/nav-data.ts","webpack:///./src/worker/page-data/mds-strings.ts","webpack:///./src/worker/page-data/mds-table.ts","webpack:///./src/worker/page-data/metadata-headers.ts","webpack:///./src/worker/page-data/headers.ts","webpack:///./src/worker/page-data/generator.ts","webpack:///./src/worker/pe/error.ts","webpack:///./src/worker/pe/loader.ts","webpack:///./src/worker/pe/image.ts","webpack:///./src/worker/message.ts","webpack:///./src/worker/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","formatU1RawHex","padZeroLeft","toString","toUpperCase","formatU2RawHex","formatU4RawHex","formatU1Hex","formatU2Hex","formatU4Hex","formatHexDec","formatDec","v","toLocaleString","formatBytes","bytes","lineWidth","lines","start","length","line","Array","from","subarray","map","b","join","push","str","len","repeat","formatUIntField","f","sz","showDec","hex","offset","_offset","size","_size","rawData","data","formatStructTitle","title","formatU1Field","formatU2Field","formatU4Field","formatU8Field","high","low","formatBytesField","formatStringField","IMAGE_DOS_SIGNATURE","IMAGE_NT_SIGNATURE","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_OPTIONAL_HDR64_MAGIC","ImageFile","ImageFileMachine","ImageSubsystem","ImageDllCharacteristics","ImageDirectoryEntry","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","ImageSection","ComImageFlags","MetadataSignature","MetadataTableIndex","NumberOfMdTables","calculatePadding","dataSize","align","count1","mask","isSetLong","bit","generateNavList","pe","pageID","navList","target","children","elemID","navMD","isManaged","hasMetadata","hasStrongNameSignature","getMetadataStreamHeader","pageNum","generateMDHeadersNavData","navMDT","getMetadataTableHeader","generateMDTablesNavData","FM","generateMdsStringsPageData","cache","cfg","pgNum","mdsStrings","mdRoot","getMetadataRoot","sh","indexes","base","Offset","Size","getU1","pages","pageItems","pStart","pEnd","mdsStringsPageSize","slice","checkAndBuildCache","items","titleOf","nav","groups","index","getMdsStringsItem","paging","currentPageNumber","pageNavList","F","generateMdsTablePageData","tableHeader","h","Reserved","MajorVersion","MinorVersion","HeapSizes","Reserved2","Valid","Sorted","Rows","generateMDTableHeader","tableInfo","id","valid","isMetadataTableValid","sorted","isMetadataTableSorted","rows","getMetadataTableRows","generateMDTableList","generateMetadataHeadersPageData","cliHeader","getCliHeader","cb","MajorRuntimeVersion","MinorRuntimeVersion","MetaData","VirtualAddress","Flags","EntryPointToken","Resources","StrongNameSignature","CodeManagerTable","VTableFixups","ExportAddressTableJumps","ManagedNativeHeader","generateCliHeader","metadataRoot","Signature","VersionLength","VersionString","VersionPadding","Streams","generateMetadataRoot","streamHeaders","getMetadataStreamHeaders","Name","Padding","generateMetadataStreamHeader","snSignature","getStrongNameSignature","generateSNSignature","generateHeadersPageData","dosHeader","getDosHeader","e_magic","e_cblp","e_cp","e_crlc","e_cparhdr","e_minalloc","e_maxalloc","e_ss","e_sp","e_csum","e_ip","e_cs","e_lfarlc","e_ovno","e_res","e_oemid","e_oeminfo","e_res2","e_lfanew","generateDosHeader","peSignature","getPESignature","generatePESignature","fileHeader","getFileHeader","Machine","NumberOfSections","TimeDateStamp","PointerToSymbolTable","NumberOfSymbols","SizeOfOptionalHeader","Characteristics","generateFileHeader","optionalHeader","getOptionalHeader","Magic","MajorLinkerVersion","MinorLinkerVersion","SizeOfCode","SizeOfInitializedData","SizeOfUninitializedData","AddressOfEntryPoint","BaseOfCode","BaseOfData","ImageBase","SectionAlignment","FileAlignment","MajorOperatingSystemVersion","MinorOperatingSystemVersion","MajorImageVersion","MinorImageVersion","MajorSubsystemVersion","MinorSubsystemVersion","Win32VersionValue","SizeOfImage","SizeOfHeaders","CheckSum","Subsystem","DllCharacteristics","SizeOfStackReserve","SizeOfStackCommit","SizeOfHeapReserve","SizeOfHeapCommit","LoaderFlags","NumberOfRvaAndSizes","fillOptionalHeader32Fields","fillOptionalHeader64Fields","generateOptionalHeader","dataDirectories","getDataDirectories","generateDataDirectories","sectionHeaders","getSectionHeaders","VirtualSize","SizeOfRawData","PointerToRawData","PointerToRelocations","PointerToLinenumbers","NumberOfRelocations","NumberOfLinenumbers","generateSectionHeaders","headers_1","metadata_headers_1","mds_table_1","mds_strings_1","generatePageData","clearGeneratorCache","PEError","_super","type","_this","this","__extends","Error","U","loadU1Field","getData","loadU2Field","getU2","loadU4Field","getU4","loadU8Field","loadU2EnumField","loadU4EnumField","loadFixedSizeByteArrayField","loadFixedSizeAsciiStringField","String","fromCharCode","apply","filter","loadNullTerminatedStringField","ptr","decodeURIComponent","Uint8Array","loadStructArrayByCount","loader","count","loadImageDataDirectory","loadU1EnumField","loadImageDosHeader","loadImageFileHeader","loadImageOptionalHeader32","loadImageOptionalHeader64","loadImageSectionHeader","loadCliHeader","loadMetadataRoot","loadMetadataStreamHeader","loadMetadataTableHeader","L","E","PEImage","buf","DataView","loadHeaders","load","check","getUint8","getUint16","getUint32","buffer","is32Bit","optHdr","dd","isDataDirectoryValid","IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","hasManagedResources","info","metadataTableInfo","rvaToOffset","metadataStreamHeaders","headers","shift","strongNameSignature","metadataTableHeader","fillMetadataTableInfo","rva","getSectionHeaderByRva","offsetToRva","getSectionHeaderByOffset","byteLength","nValid","createResNavDataMessage","createResPageDataMessage","pageData","createResPEPropsMessage","createResPEErrorMessage","error","M","image_1","generator_1","nav_data_1","onmessage","ev","msg","reader","FileReader","onload","result","pageDataMsg","postMessage","pePropsMsg","navMsg","ex","msg_1","message","JSON","stringify","onerror","readAsArrayBuffer","file","handleReqOpenFile","_a","res","handleReqOpenNav"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","import * as S from \"../pe/structures\";\r\n\r\nexport function formatU1RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 2);\r\n}\r\n\r\nexport function formatU2RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 4);\r\n}\r\n\r\nexport function formatU4RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 8);\r\n}\r\n\r\nexport function formatU1Hex(d: number): string {\r\n    return `${formatU1RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU2Hex(d: number): string {\r\n    return `${formatU2RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU4Hex(d: number): string {\r\n    return `${formatU4RawHex(d)}h`;\r\n}\r\n\r\nexport function formatHexDec(d: number): string {\r\n    return `${d.toString(16).toUpperCase()}h (${d})`;\r\n}\r\n\r\nexport function formatDec(v: number): string {\r\n    return v.toLocaleString();\r\n}\r\n\r\nexport function formatBytes(bytes: Uint8Array, lineWidth: number = 16): string[] {\r\n    let lines: string[] = [];\r\n    for (let start = 0; start < bytes.length; start += lineWidth) {\r\n        const line = Array.from(bytes.subarray(start, start + lineWidth))\r\n            .map(b => formatU1RawHex(b)).join(\"-\");\r\n        lines.push(line);\r\n    }\r\n    return lines;\r\n}\r\n\r\nexport function formatStructTitle(s: S.FileData, title: string): string {\r\n    return `${title} [${formatU4Hex(s._offset)} - ${formatU4Hex(s._offset + s._size)} : ${formatHexDec(s._size)}]`;\r\n}\r\n\r\nexport function formatU1Field(name: string, f: S.U1Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 1, showDec);\r\n}\r\n\r\nexport function formatU2Field(name: string, f: S.U2Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 2, showDec);\r\n}\r\n\r\nexport function formatU4Field(name: string, f: S.U4Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 4, showDec);\r\n}\r\n\r\nexport function formatU8Field(name: string, f: S.U8Field, showDec?: boolean): W.StructItem {\r\n    let value = `${formatU4RawHex(f.high)} ${formatU4Hex(f.low)}`;\r\n\r\n    if (showDec && f.high < 0x1FFFFF) {\r\n        const long = f.high * 0x100000000 + f.low;\r\n        value += ` (${formatDec(long)})`;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value,\r\n    };\r\n}\r\n\r\nexport function formatBytesField(name: string, f: S.Field): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: \"\",\r\n    }\r\n}\r\n\r\nexport function formatStringField(name: string, f: S.StringField): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: `\"${f.value}\"`,\r\n    }\r\n}\r\n\r\nfunction padZeroLeft(str: string, len: number): string {\r\n    if (str.length < len) {\r\n        return \"0\".repeat(len - str.length) + str;\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n\r\nfunction formatUIntField(name: string, f: S.UIntField, sz: number, showDec?: boolean): W.StructItem {\r\n    let hex: string;\r\n    switch (sz) {\r\n        case 1: hex = formatU1Hex(f.value); break;\r\n        case 2: hex = formatU2Hex(f.value); break;\r\n        case 4: hex = formatU4Hex(f.value); break;\r\n        default: hex = f.value.toString(16).toUpperCase(); break;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: showDec ? `${hex} (${formatDec(f.value)})` : hex,\r\n    }\r\n}\r\n","export const IMAGE_DOS_SIGNATURE = 0x5A4D;  // MZ\r\n\r\nexport const IMAGE_NT_SIGNATURE = 0x00004550;  // PE00\r\n\r\nexport const IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\r\nexport const IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\r\n\r\nexport enum ImageFile {\r\n    IMAGE_FILE_RELOCS_STRIPPED = 0x0001,\r\n    IMAGE_FILE_EXECUTABLE_IMAGE = 0x0002,\r\n    IMAGE_FILE_LINE_NUMS_STRIPPED = 0x0004,\r\n    IMAGE_FILE_LOCAL_SYMS_STRIPPED = 0x0008,\r\n    IMAGE_FILE_AGGRESIVE_WS_TRIM = 0x0010,\r\n    IMAGE_FILE_LARGE_ADDRESS_AWARE = 0x0020,\r\n    IMAGE_FILE_BYTES_REVERSED_LO = 0x0080,\r\n    IMAGE_FILE_32BIT_MACHINE = 0x0100,\r\n    IMAGE_FILE_DEBUG_STRIPPED = 0x0200,\r\n    IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 0x0400,\r\n    IMAGE_FILE_NET_RUN_FROM_SWAP = 0x0800,\r\n    IMAGE_FILE_SYSTEM = 0x1000,\r\n    IMAGE_FILE_DLL = 0x2000,\r\n    IMAGE_FILE_UP_SYSTEM_ONLY = 0x4000,\r\n    IMAGE_FILE_BYTES_REVERSED_HI = 0x8000,\r\n}\r\n\r\nexport enum ImageFileMachine {\r\n    IMAGE_FILE_MACHINE_UNKNOWN = 0,\r\n    IMAGE_FILE_MACHINE_TARGET_HOST = 0x0001,\r\n    IMAGE_FILE_MACHINE_I386 = 0x014c,\r\n    IMAGE_FILE_MACHINE_R3000 = 0x0162,\r\n    IMAGE_FILE_MACHINE_R4000 = 0x0166,\r\n    IMAGE_FILE_MACHINE_R10000 = 0x0168,\r\n    IMAGE_FILE_MACHINE_WCEMIPSV2 = 0x0169,\r\n    IMAGE_FILE_MACHINE_ALPHA = 0x0184,\r\n    IMAGE_FILE_MACHINE_SH3 = 0x01a2,\r\n    IMAGE_FILE_MACHINE_SH3DSP = 0x01a3,\r\n    IMAGE_FILE_MACHINE_SH3E = 0x01a4,\r\n    IMAGE_FILE_MACHINE_SH4 = 0x01a6,\r\n    IMAGE_FILE_MACHINE_SH5 = 0x01a8,\r\n    IMAGE_FILE_MACHINE_ARM = 0x01c0,\r\n    IMAGE_FILE_MACHINE_THUMB = 0x01c2,\r\n    IMAGE_FILE_MACHINE_ARMNT = 0x01c4,\r\n    IMAGE_FILE_MACHINE_AM33 = 0x01d3,\r\n    IMAGE_FILE_MACHINE_POWERPC = 0x01F0,\r\n    IMAGE_FILE_MACHINE_POWERPCFP = 0x01f1,\r\n    IMAGE_FILE_MACHINE_IA64 = 0x0200,\r\n    IMAGE_FILE_MACHINE_MIPS16 = 0x0266,\r\n    IMAGE_FILE_MACHINE_ALPHA64 = 0x0284,\r\n    IMAGE_FILE_MACHINE_MIPSFPU = 0x0366,\r\n    IMAGE_FILE_MACHINE_MIPSFPU16 = 0x0466,\r\n    IMAGE_FILE_MACHINE_AXP64 = IMAGE_FILE_MACHINE_ALPHA64,\r\n    IMAGE_FILE_MACHINE_TRICORE = 0x0520,\r\n    IMAGE_FILE_MACHINE_CEF = 0x0CEF,\r\n    IMAGE_FILE_MACHINE_EBC = 0x0EBC,\r\n    IMAGE_FILE_MACHINE_AMD64 = 0x8664,\r\n    IMAGE_FILE_MACHINE_M32R = 0x9041,\r\n    IMAGE_FILE_MACHINE_ARM64 = 0xAA64,\r\n    IMAGE_FILE_MACHINE_CEE = 0xC0EE,\r\n}\r\n\r\nexport enum ImageSubsystem {\r\n    IMAGE_SUBSYSTEM_UNKNOWN = 0,\r\n    IMAGE_SUBSYSTEM_NATIVE = 1,\r\n    IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,\r\n    IMAGE_SUBSYSTEM_OS2_CUI = 5,\r\n    IMAGE_SUBSYSTEM_POSIX_CUI = 7,\r\n    IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9,\r\n    IMAGE_SUBSYSTEM_EFI_APPLICATION = 10,\r\n    IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11,\r\n    IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12,\r\n    IMAGE_SUBSYSTEM_EFI_ROM = 13,\r\n    IMAGE_SUBSYSTEM_XBOX = 14,\r\n    IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16,\r\n    IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 17,\r\n}\r\n\r\nexport enum ImageDllCharacteristics {\r\n    IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020,\r\n    IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 0x0040,\r\n    IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 0x0080,\r\n    IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 0x0100,\r\n    IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 0x0200,\r\n    IMAGE_DLLCHARACTERISTICS_NO_SEH = 0x0400,\r\n    IMAGE_DLLCHARACTERISTICS_NO_BIND = 0x0800,\r\n    IMAGE_DLLCHARACTERISTICS_APPCONTAINER = 0x1000,\r\n    IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 0x2000,\r\n    IMAGE_DLLCHARACTERISTICS_GUARD_CF = 0x4000,\r\n    IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 0x8000,\r\n}\r\n\r\nexport enum ImageDirectoryEntry {\r\n    IMAGE_DIRECTORY_ENTRY_EXPORT = 0,\r\n    IMAGE_DIRECTORY_ENTRY_IMPORT = 1,\r\n    IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,\r\n    IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,\r\n    IMAGE_DIRECTORY_ENTRY_SECURITY = 4,\r\n    IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,\r\n    IMAGE_DIRECTORY_ENTRY_DEBUG = 6,\r\n    IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7,\r\n    IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,\r\n    IMAGE_DIRECTORY_ENTRY_TLS = 9,\r\n    IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,\r\n    IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,\r\n    IMAGE_DIRECTORY_ENTRY_IAT = 12,\r\n    IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13,\r\n    IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14,\r\n}\r\n\r\nexport const IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16;\r\n\r\nexport enum ImageSection {\r\n    IMAGE_SCN_TYPE_NO_PAD = 0x00000008,\r\n\r\n    IMAGE_SCN_CNT_CODE = 0x00000020,\r\n    IMAGE_SCN_CNT_INITIALIZED_DATA = 0x00000040,\r\n    IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x00000080,\r\n\r\n    IMAGE_SCN_LNK_OTHER = 0x00000100,\r\n    IMAGE_SCN_LNK_INFO = 0x00000200,\r\n    IMAGE_SCN_LNK_REMOVE = 0x00000800,\r\n    IMAGE_SCN_LNK_COMDAT = 0x00001000,\r\n\r\n    IMAGE_SCN_NO_DEFER_SPEC_EXC = 0x00004000,\r\n    IMAGE_SCN_GPREL = 0x00008000,\r\n\r\n    IMAGE_SCN_MEM_PURGEABLE = 0x00020000,\r\n    IMAGE_SCN_MEM_16BIT = 0x00020000,\r\n    IMAGE_SCN_MEM_LOCKED = 0x00040000,\r\n    IMAGE_SCN_MEM_PRELOAD = 0x00080000,\r\n\r\n    IMAGE_SCN_ALIGN_1BYTES = 0x00100000,\r\n    IMAGE_SCN_ALIGN_2BYTES = 0x00200000,\r\n    IMAGE_SCN_ALIGN_4BYTES = 0x00300000,\r\n    IMAGE_SCN_ALIGN_8BYTES = 0x00400000,\r\n    IMAGE_SCN_ALIGN_16BYTES = 0x00500000,\r\n    IMAGE_SCN_ALIGN_32BYTES = 0x00600000,\r\n    IMAGE_SCN_ALIGN_64BYTES = 0x00700000,\r\n    IMAGE_SCN_ALIGN_128BYTES = 0x00800000,\r\n    IMAGE_SCN_ALIGN_256BYTES = 0x00900000,\r\n    IMAGE_SCN_ALIGN_512BYTES = 0x00A00000,\r\n    IMAGE_SCN_ALIGN_1024BYTES = 0x00B00000,\r\n    IMAGE_SCN_ALIGN_2048BYTES = 0x00C00000,\r\n    IMAGE_SCN_ALIGN_4096BYTES = 0x00D00000,\r\n    IMAGE_SCN_ALIGN_8192BYTES = 0x00E00000,\r\n\r\n    IMAGE_SCN_LNK_NRELOC_OVFL = 0x01000000,\r\n    IMAGE_SCN_MEM_DISCARDABLE = 0x02000000,\r\n    IMAGE_SCN_MEM_NOT_CACHED = 0x04000000,\r\n    IMAGE_SCN_MEM_NOT_PAGED = 0x08000000,\r\n    IMAGE_SCN_MEM_SHARED = 0x10000000,\r\n    IMAGE_SCN_MEM_EXECUTE = 0x20000000,\r\n    IMAGE_SCN_MEM_READ = 0x40000000,\r\n    IMAGE_SCN_MEM_WRITE = 0x80000000,\r\n\r\n    IMAGE_SCN_SCALE_INDEX = 0x00000001,\r\n}\r\n\r\n//\r\n// Metadata structures.\r\n//\r\n\r\nexport enum ComImageFlags {\r\n    COMIMAGE_FLAGS_ILONLY = 0x00000001,\r\n    COMIMAGE_FLAGS_32BITREQUIRED = 0x00000002,\r\n    COMIMAGE_FLAGS_IL_LIBRARY = 0x00000004,\r\n    COMIMAGE_FLAGS_STRONGNAMESIGNED = 0x00000008,\r\n    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 0x00000010,\r\n    COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x00010000,\r\n    COMIMAGE_FLAGS_32BITPREFERRED = 0x00020000,\r\n}\r\n\r\nexport const MetadataSignature = 0x424A5342;\r\n\r\nexport const enum MetadataStreamName {\r\n    Table = \"#~\",\r\n    Strings = \"#Strings\",\r\n    US = \"#US\",\r\n    GUID = \"#GUID\",\r\n    Blob = \"#Blob\",\r\n}\r\n\r\nexport const enum MetadataTableHeapSize {\r\n    String = 0,\r\n    GUID = 1,\r\n    Blob = 2,\r\n}\r\n\r\nexport enum MetadataTableIndex {\r\n    Module = 0x00,\r\n    TypeRef = 0x01,\r\n    TypeDef = 0x02,\r\n    FieldPtr = 0x03,\r\n    Field = 0x04,\r\n    MethodPtr = 0x05,\r\n    MethodDef = 0x06,\r\n    ParamPtr = 0x07,\r\n    Param = 0x08,\r\n    InterfaceImpl = 0x09,\r\n    MemberRef = 0x0A,\r\n    Constant = 0x0B,\r\n    CustomAttribute = 0x0C,\r\n    FieldMarshal = 0x0D,\r\n    DeclSecurity = 0x0E,\r\n    ClassLayout = 0x0F,\r\n    FieldLayout = 0x10,\r\n    StandAloneSig = 0x11,\r\n    EventMap = 0x12,\r\n    EventPtr = 0x13,\r\n    Event = 0x14,\r\n    PropertyMap = 0x15,\r\n    PropertyPtr = 0x16,\r\n    Property = 0x17,\r\n    MethodSemantics = 0x18,\r\n    MethodImpl = 0x19,\r\n    ModuleRef = 0x1A,\r\n    TypeSpec = 0x1B,\r\n    ImplMap = 0x1C,\r\n    FieldRVA = 0x1D,\r\n    ENCLog = 0x1E,\r\n    ENCMap = 0x1F,\r\n    Assembly = 0x20,\r\n    AssemblyProcessor = 0x21,\r\n    AssemblyOS = 0x22,\r\n    AssemblyRef = 0x23,\r\n    AssemblyRefProcessor = 0x24,\r\n    AssemblyRefOS = 0x25,\r\n    File = 0x26,\r\n    ExportedType = 0x27,\r\n    ManifestResource = 0x28,\r\n    NestedClass = 0x29,\r\n    GenericParam = 0x2A,\r\n    MethodSpec = 0x2B,\r\n    GenericParamConstraint = 0x2C,\r\n\r\n    String = 0x70,\r\n}\r\n\r\nexport const NumberOfMdTables = 45;\r\n","export function calculatePadding(dataSize: number, align: number = 4): number {\n    const r = dataSize % align;\n    if (r == 0) {\n        return 0;\n    } else {\n        return align - r;\n    }\n}\n\nexport function count1(n: number) {\n    let c = 0;\n    for (let i = 0, mask = 1; i < 32; i++ , mask <<= 1) {\n        if (n & mask)\n            c++;\n    }\n    return c;\n}\n\nexport function isSetLong(high: number, low: number, bit: number): boolean {\n    return bit >= 0 && bit < 64 &&\n        (bit < 32 && ((low & (1 << bit)) != 0)) ||\n        (bit >= 32 && (high & (1 << (bit - 32))) != 0);\n}","import { PEImage } from \"../pe/image\";\r\nimport * as F from \"../pe/image-flags\";\r\n\r\nexport function generateNavList(pe: PEImage): W.NavData[] {\r\n    let navList: W.NavData[] = [generateHeadersNavData(pe)];\r\n\r\n    const navMD = generateMDHeadersNavData(pe);\r\n    if (navMD) navList.push(navMD);\r\n\r\n    const navMDT = generateMDTablesNavData(pe);\r\n    if (navMDT) navList.push(navMDT);\r\n\r\n    return navList;\r\n}\r\n\r\nfunction generateHeadersNavData(pe: PEImage): W.NavData {\r\n    const pageID = W.PageID.HEADERS;\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.HEADERS },\r\n        children: [{\r\n            target: { pageID, title: W.KnownTitle.DOS_HEADER, elemID: W.KnownElemID.DOS_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.PE_SIGNATURE, elemID: W.KnownElemID.PE_SIGNATURE }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.FILE_HEADER, elemID: W.KnownElemID.FILE_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.OPTIONAL_HEADER, elemID: W.KnownElemID.OPTIONAL_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.DATA_DIRECTORIES, elemID: W.KnownElemID.DATA_DIRECTORIES }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.SECTION_HEADERS, elemID: W.KnownElemID.SECTION_HEADERS }\r\n        }]\r\n    };\r\n}\r\n\r\nfunction generateMDHeadersNavData(pe: PEImage): W.NavData | undefined {\r\n    const pageID = W.PageID.MD_HEADERS;\r\n\r\n    if (!pe.isManaged()) return undefined;\r\n\r\n    let children: W.NavData[] = [{\r\n        target: { pageID, title: W.KnownTitle.CLI_HEADER, elemID: W.KnownElemID.CLI_HEADER }\r\n    }];\r\n\r\n    if (pe.hasMetadata()) {\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.MD_ROOT, elemID: W.KnownElemID.MD_ROOT }\r\n        });\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.MDS_HEADERS, elemID: W.KnownElemID.MDS_HEADERS }\r\n        });\r\n    }\r\n\r\n    if (pe.hasStrongNameSignature()) {\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.SN_SIG, elemID: W.KnownElemID.SN_SIG }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.Strings)) {\r\n        children.push({\r\n            target: { pageID: W.PageID.MDS_STRINGS, title: W.KnownTitle.MDS_STRINGS, pageNum: 0 }\r\n        });\r\n    }\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.MD_HEADERS },\r\n        children\r\n    };\r\n}\r\n\r\nfunction generateMDTablesNavData(pe: PEImage): W.NavData | undefined {\r\n    const pageID = W.PageID.MDS_TABLE;\r\n    const h = pe.getMetadataTableHeader();\r\n    if (!h) return undefined;\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.MDS_TABLE },\r\n    };\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\nimport * as G from \"./generator\";\r\n\r\nexport function generateMdsStringsPageData(pe: PEImage,\r\n    cache: G.GeneratorCache, cfg: G.GeneratorConfig,\r\n    pgNum: number): W.PagedItemListPageData {\r\n\r\n    checkAndBuildCache(pe, cache, cfg);\r\n    const items = cache.mdsStrings && cache.mdsStrings.pages[pgNum];\r\n\r\n    const titleOf = (i: number) => `#String[${FM.formatHexDec(i)}]`;\r\n\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_STRINGS,\r\n            title: W.KnownTitle.MDS_STRINGS,\r\n        },\r\n        items: {\r\n            title: W.KnownTitle.MDS_STRINGS,\r\n            groups: [{\r\n                title: \"\",\r\n                items: items && items.map(index =>\r\n                    FM.formatStringField(titleOf(index), pe.getMdsStringsItem(index)!)\r\n                )\r\n            }]\r\n        },\r\n        paging: {\r\n            currentPageNumber: pgNum,\r\n            pageNavList: cache.mdsStrings!.pages.map((v, i) => ({\r\n                title: `Page[${i + 1}] (${titleOf(v[0])} - ${titleOf(v[v.length - 1])}})`,\r\n                pageID: W.PageID.MDS_STRINGS,\r\n                pageNum: i\r\n            }))\r\n        }\r\n    };\r\n}\r\n\r\nfunction checkAndBuildCache(pe: PEImage, cache: G.GeneratorCache, cfg: G.GeneratorConfig): void {\r\n    if (cache.mdsStrings) return;\r\n\r\n    const mdRoot = pe.getMetadataRoot();\r\n    if (!mdRoot) return;\r\n\r\n    const sh = pe.getMetadataStreamHeader(F.MetadataStreamName.Strings);\r\n    if (!sh) return;\r\n\r\n    // Fetch all #Strings item offsets.\r\n    let indexes: number[] = [0];\r\n    const base = mdRoot._offset + sh.Offset.value;\r\n    for (let p = 1; p < sh.Size.value; p++) {\r\n        if (pe.getU1(base + p - 1) == 0) {\r\n            indexes.push(p);\r\n        }\r\n    }\r\n\r\n    // Put into pages.\r\n    let pages: G.MdsStringsPageCache[] = [];\r\n    let pageItems: G.MdsStringsPageCache = [];\r\n\r\n    for (let pStart = 0; pStart < indexes.length; pStart++) {\r\n        let pEnd = pStart;\r\n        while (indexes[pEnd] - indexes[pStart] < cfg.mdsStringsPageSize\r\n            && pEnd < indexes.length) {\r\n            pageItems.push(indexes[pEnd++]);\r\n        }\r\n        pages.push(pageItems.slice());\r\n        pageItems = [];\r\n        pStart = pEnd;\r\n    }\r\n\r\n    cache.mdsStrings = { pages };\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateMdsTablePageData(pe: PEImage): W.MdsTablePageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_TABLE,\r\n            title: W.KnownTitle.MDS_TABLE,\r\n        },\r\n        tableHeader: generateMDTableHeader(pe),\r\n        tableInfo: generateMDTableList(pe),\r\n    };\r\n}\r\n\r\nfunction generateMDTableHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.MDT_HEADER,\r\n        elemID: W.KnownElemID.MDT_HEADER,\r\n    };\r\n\r\n    const h = pe.getMetadataTableHeader();\r\n    if (!h) return s;\r\n\r\n    s.groups = [{\r\n        title: \"\",\r\n        items: [\r\n            FM.formatU4Field(\"Reserved\", h.Reserved),\r\n            FM.formatU1Field(\"MajorVersion\", h.MajorVersion, true),\r\n            FM.formatU1Field(\"MinorVersion\", h.MinorVersion, true),\r\n            FM.formatU1Field(\"HeapSizes\", h.HeapSizes),\r\n            FM.formatU1Field(\"Reserved2\", h.Reserved2),\r\n            FM.formatU8Field(\"Valid\", h.Valid),\r\n            FM.formatU8Field(\"Sorted\", h.Sorted),\r\n        ]\r\n    }, {\r\n        title: \"Rows\",\r\n        items: h.Rows.items.map((v, i) => FM.formatU4Field(`Rows[${i}]`, v, true))\r\n    }];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateMDTableList(pe: PEImage): W.MdTableInfo[] {\r\n    let s: W.MdTableInfo[] = [];\r\n    for (let id = 0; id < F.NumberOfMdTables; id++) {\r\n        s.push({\r\n            index: `${FM.formatU1Hex(id)} (${FM.formatDec(id)})`,\r\n            name: F.MetadataTableIndex[id],\r\n            valid: pe.isMetadataTableValid(id),\r\n            sorted: pe.isMetadataTableSorted(id),\r\n            rows: FM.formatDec(pe.getMetadataTableRows(id)),\r\n        });\r\n    }\r\n    return s;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateMetadataHeadersPageData(pe: PEImage): W.MetadataHeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MD_HEADERS,\r\n            title: W.KnownTitle.MD_HEADERS,\r\n        },\r\n        cliHeader: generateCliHeader(pe),\r\n        metadataRoot: generateMetadataRoot(pe),\r\n        streamHeaders: generateMetadataStreamHeader(pe),\r\n        snSignature: generateSNSignature(pe),\r\n    };\r\n}\r\n\r\nfunction generateCliHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.CLI_HEADER,\r\n        elemID: W.KnownElemID.CLI_HEADER,\r\n    };\r\n\r\n    const h = pe.getCliHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"cb\", h.cb, true),\r\n        FM.formatU2Field(\"MajorRuntimeVersion\", h.MajorRuntimeVersion, true),\r\n        FM.formatU2Field(\"MinorRuntimeVersion\", h.MinorRuntimeVersion, true),\r\n        FM.formatU4Field(\"MetaData.VirtualAddress\", h.MetaData.VirtualAddress),\r\n        FM.formatU4Field(\"MetaData.Size\", h.MetaData.Size, true),\r\n        FM.formatU4Field(\"Flags\", h.Flags),\r\n        FM.formatU4Field(\"EntryPointToken\", h.EntryPointToken),\r\n        FM.formatU4Field(\"Resources.VirtualAddress\", h.Resources.VirtualAddress),\r\n        FM.formatU4Field(\"Resources.Size\", h.Resources.Size, true),\r\n        FM.formatU4Field(\"StrongNameSignature.VirtualAddress\", h.StrongNameSignature.VirtualAddress),\r\n        FM.formatU4Field(\"StrongNameSignature.Size\", h.StrongNameSignature.Size, true),\r\n        FM.formatU4Field(\"CodeManagerTable.VirtualAddress\", h.CodeManagerTable.VirtualAddress),\r\n        FM.formatU4Field(\"CodeManagerTable.Size\", h.CodeManagerTable.Size, true),\r\n        FM.formatU4Field(\"VTableFixups.VirtualAddress\", h.VTableFixups.VirtualAddress),\r\n        FM.formatU4Field(\"VTableFixups.Size\", h.VTableFixups.Size, true),\r\n        FM.formatU4Field(\"ExportAddressTableJumps.VirtualAddress\", h.ExportAddressTableJumps.VirtualAddress),\r\n        FM.formatU4Field(\"ExportAddressTableJumps.Size\", h.ExportAddressTableJumps.Size, true),\r\n        FM.formatU4Field(\"ManagedNativeHeader.VirtualAddress\", h.ManagedNativeHeader.VirtualAddress),\r\n        FM.formatU4Field(\"ManagedNativeHeader.Size\", h.ManagedNativeHeader.Size, true),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSNSignature(pe: PEImage): W.SimpleStruct | undefined {\r\n    const d = pe.getStrongNameSignature();\r\n    if (!d) return undefined;\r\n\r\n    const s: W.SimpleStruct = {\r\n        title: W.KnownTitle.SN_SIG,\r\n        elemID: W.KnownElemID.SN_SIG,\r\n        items: [FM.formatBytesField(\"Signature\", d)]\r\n    };\r\n    return s;\r\n}\r\n\r\nfunction generateMetadataRoot(pe: PEImage): W.SimpleStruct | undefined {\r\n    const h = pe.getMetadataRoot();\r\n    if (!h) return undefined;\r\n\r\n    const s: W.SimpleStruct = {\r\n        title: W.KnownTitle.MD_ROOT,\r\n        elemID: W.KnownElemID.MD_ROOT,\r\n        items: [\r\n            FM.formatU4Field(\"Signature\", h.Signature),\r\n            FM.formatU2Field(\"MajorVersion\", h.MajorVersion, true),\r\n            FM.formatU2Field(\"MinorVersion\", h.MinorVersion, true),\r\n            FM.formatU4Field(\"Reserved\", h.Reserved),\r\n            FM.formatU4Field(\"VersionLength\", h.VersionLength, true),\r\n            FM.formatStringField(\"VersionString\", h.VersionString),\r\n            FM.formatBytesField(\"VersionPadding\", h.VersionPadding),\r\n            FM.formatU2Field(\"Flags\", h.Flags),\r\n            FM.formatU2Field(\"Streams\", h.Streams, true),\r\n        ]\r\n    };\r\n    return s;\r\n}\r\n\r\nfunction generateMetadataStreamHeader(pe: PEImage): W.GroupedStruct | undefined {\r\n    const h = pe.getMetadataStreamHeaders();\r\n    if (!h) return undefined;\r\n\r\n    const s: W.GroupedStruct = {\r\n        title: W.KnownTitle.MDS_HEADERS,\r\n        elemID: W.KnownElemID.MDS_HEADERS,\r\n        groups: h.items.map((v, i) => ({\r\n            title: `[${i}] (${v.Name.value})`,\r\n            items: [\r\n                FM.formatU4Field(\"Offset\", v.Offset),\r\n                FM.formatU4Field(\"Size\", v.Size, true),\r\n                FM.formatStringField(\"Name\", v.Name),\r\n                FM.formatBytesField(\"Padding\", v.Padding),\r\n            ]\r\n        }))\r\n    };\r\n    return s;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateHeadersPageData(pe: PEImage): W.HeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.HEADERS,\r\n            title: W.KnownTitle.HEADERS,\r\n        },\r\n        dosHeader: generateDosHeader(pe),\r\n        peSignature: generatePESignature(pe),\r\n        fileHeader: generateFileHeader(pe),\r\n        optionalHeader: generateOptionalHeader(pe),\r\n        dataDirectories: generateDataDirectories(pe),\r\n        sectionHeaders: generateSectionHeaders(pe),\r\n    };\r\n}\r\n\r\nfunction generateDosHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.DOS_HEADER,\r\n        elemID: W.KnownElemID.DOS_HEADER,\r\n    };\r\n\r\n    const h = pe.getDosHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"e_magic\", h.e_magic),\r\n        FM.formatU2Field(\"e_cblp\", h.e_cblp),\r\n        FM.formatU2Field(\"e_cp\", h.e_cp),\r\n        FM.formatU2Field(\"e_crlc\", h.e_crlc),\r\n        FM.formatU2Field(\"e_cparhdr\", h.e_cparhdr),\r\n        FM.formatU2Field(\"e_minalloc\", h.e_minalloc),\r\n        FM.formatU2Field(\"e_maxalloc\", h.e_maxalloc),\r\n        FM.formatU2Field(\"e_ss\", h.e_ss),\r\n        FM.formatU2Field(\"e_sp\", h.e_sp),\r\n        FM.formatU2Field(\"e_csum\", h.e_csum),\r\n        FM.formatU2Field(\"e_ip\", h.e_ip),\r\n        FM.formatU2Field(\"e_cs\", h.e_cs),\r\n        FM.formatU2Field(\"e_lfarlc\", h.e_lfarlc),\r\n        FM.formatU2Field(\"e_ovno\", h.e_ovno),\r\n        FM.formatBytesField(\"e_res\", h.e_res),\r\n        FM.formatU2Field(\"e_oemid\", h.e_oemid),\r\n        FM.formatU2Field(\"e_oeminfo\", h.e_oeminfo),\r\n        FM.formatBytesField(\"e_res2\", h.e_res2),\r\n        FM.formatU4Field(\"e_lfanew\", h.e_lfanew),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generatePESignature(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.PE_SIGNATURE,\r\n        elemID: W.KnownElemID.PE_SIGNATURE,\r\n    };\r\n\r\n    const h = pe.getPESignature();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"PE Signature\", h),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateFileHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.FILE_HEADER,\r\n        elemID: W.KnownElemID.FILE_HEADER,\r\n    };\r\n\r\n    const h = pe.getFileHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"Machine\", h.Machine),\r\n        FM.formatU2Field(\"NumberOfSections\", h.NumberOfSections, true),\r\n        FM.formatU4Field(\"TimeDateStamp\", h.TimeDateStamp),\r\n        FM.formatU4Field(\"PointerToSymbolTable\", h.PointerToSymbolTable),\r\n        FM.formatU4Field(\"NumberOfSymbols\", h.NumberOfSymbols, true),\r\n        FM.formatU2Field(\"SizeOfOptionalHeader\", h.SizeOfOptionalHeader, true),\r\n        FM.formatU2Field(\"Characteristics\", h.Characteristics),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateOptionalHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.OPTIONAL_HEADER,\r\n        elemID: W.KnownElemID.OPTIONAL_HEADER,\r\n    };\r\n\r\n    const h = pe.getOptionalHeader();\r\n    if (!h) return s;\r\n\r\n    switch (h.Magic.value) {\r\n        case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n            s.title += \" (32-bit)\";\r\n            fillOptionalHeader32Fields(s, <S.ImageOptionalHeader32>h);\r\n            break;\r\n\r\n        case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n            s.title += \" (64-bit)\";\r\n            fillOptionalHeader64Fields(s, <S.ImageOptionalHeader64>h);\r\n            break;\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nfunction fillOptionalHeader32Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader32): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n            FM.formatU4Field(\"BaseOfData\", h.BaseOfData),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU4Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU4Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU4Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU4Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU4Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction fillOptionalHeader64Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader64): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU8Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU8Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU8Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU8Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU8Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction generateDataDirectories(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.DATA_DIRECTORIES,\r\n        elemID: W.KnownElemID.DATA_DIRECTORIES,\r\n    };\r\n\r\n    const h = pe.getDataDirectories();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] ${F.ImageDirectoryEntry[i] || \"\"}`,\r\n        items: [\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"Size\", v.Size, true),\r\n        ]\r\n    } as W.SimpleStruct));\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSectionHeaders(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.SECTION_HEADERS,\r\n        elemID: W.KnownElemID.SECTION_HEADERS,\r\n    };\r\n\r\n    const h = pe.getSectionHeaders();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] (${v.Name.value})`,\r\n        items: [\r\n            FM.formatStringField(\"Name\", v.Name),\r\n            FM.formatU4Field(\"VirtualSize\", v.VirtualSize, true),\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"SizeOfRawData\", v.SizeOfRawData, true),\r\n            FM.formatU4Field(\"PointerToRawData\", v.PointerToRawData),\r\n            FM.formatU4Field(\"PointerToRelocations\", v.PointerToRelocations),\r\n            FM.formatU4Field(\"PointerToLinenumbers\", v.PointerToLinenumbers),\r\n            FM.formatU2Field(\"NumberOfRelocations\", v.NumberOfRelocations, true),\r\n            FM.formatU2Field(\"NumberOfLinenumbers\", v.NumberOfLinenumbers, true),\r\n            FM.formatU4Field(\"Characteristics\", v.Characteristics),\r\n        ]\r\n    }));\r\n\r\n    return s;\r\n}\r\n","import { PEImage } from \"../pe/image\";\r\nimport { generateHeadersPageData } from \"./headers\";\r\nimport { generateMetadataHeadersPageData } from \"./metadata-headers\";\r\nimport { generateMdsTablePageData } from \"./mds-table\";\r\nimport { generateMdsStringsPageData } from \"./mds-strings\";\r\n\r\nexport function generatePageData(pe: PEImage, pageID: W.PageID, pageNum?: number): W.PageData {\r\n    switch (pageID) {\r\n        case W.PageID.HEADERS: return generateHeadersPageData(pe);\r\n        case W.PageID.MD_HEADERS: return generateMetadataHeadersPageData(pe);\r\n        case W.PageID.MDS_TABLE: return generateMdsTablePageData(pe);\r\n        case W.PageID.MDS_STRINGS: return generateMdsStringsPageData(pe, cache, cfg, pageNum || 0);\r\n        default: return { nav: { pageID: W.PageID.NOTFOUND, title: W.KnownTitle.NOTFOUND } };\r\n    }\r\n}\r\n\r\nexport interface GeneratorCache {\r\n    mdsStrings?: MdsStringsCache;\r\n}\r\n\r\nexport type MdsStringsCache = {\r\n    pages: MdsStringsPageCache[];\r\n}\r\n\r\nexport type MdsStringsPageCache = number[];\r\n\r\nexport function clearGeneratorCache(): void {\r\n    cache = {};\r\n}\r\n\r\nexport interface GeneratorConfig {\r\n    mdsStringsPageSize: number;\r\n}\r\n\r\nlet cache: GeneratorCache = {};\r\n\r\nconst cfg: GeneratorConfig = {\r\n    mdsStringsPageSize: 5000,  // Total bytes per page.\r\n}","export const enum PEErrorType {\r\n    INVALID_DATA_POSITION = \"INVALID_DATA_POSITION\",\r\n    INVALID_DOS_SIGNATURE = \"INVALID_DOS_SIGNATURE\",\r\n    INVALID_PE_SIGNATURE = \"INVALID_PE_SIGNATURE\",\r\n    INVALID_OPTIONAL_HEADER_MAGIC = \"INVALID_OPTIONAL_HEADER_MAGIC\",\r\n    INVALID_DATA_DIRECTORY_COUNT = \"INVALID_DATA_DIRECTORY_COUNT\",\r\n}\r\n\r\nexport class PEError extends Error {\r\n    constructor(\r\n        public type: PEErrorType,\r\n        public offset?: number,\r\n        public size?: number\r\n    ) {\r\n        super(type);\r\n    }\r\n}\r\n","import * as S from \"./structures\";\r\nimport * as F from \"./image-flags\";\r\nimport * as U from \"./utils\";\r\n\r\nexport interface FileDataProvider {\r\n    getU1(p: number): number;\r\n    getU2(p: number): number;\r\n    getU4(p: number): number;\r\n    getData(p: number, sz: number): Uint8Array;\r\n}\r\n\r\n//\r\n// Basic structures.\r\n//\r\n\r\nexport function loadU1Field(d: FileDataProvider, p: number): S.U1Field {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p)\r\n    };\r\n}\r\n\r\nexport function loadU2Field(d: FileDataProvider, p: number): S.U2Field {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p)\r\n    };\r\n}\r\n\r\nexport function loadU4Field(d: FileDataProvider, p: number): S.U4Field {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p)\r\n    };\r\n}\r\n\r\nexport function loadU8Field(d: FileDataProvider, p: number): S.U8Field {\r\n    const low = d.getU4(p);\r\n    const high = d.getU4(p + 4);\r\n\r\n    return {\r\n        _offset: p, _size: 8, data: d.getData(p, 8), low, high\r\n    };\r\n}\r\n\r\nexport function loadU1EnumField<T>(d: FileDataProvider, p: number): S.U1EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU2EnumField<T>(d: FileDataProvider, p: number): S.U2EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU4EnumField<T>(d: FileDataProvider, p: number): S.U4EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeByteArrayField(d: FileDataProvider, p: number, sz: number): S.Field {\r\n    return {\r\n        _offset: p, _size: sz, data: d.getData(p, sz)\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeAsciiStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const value = String.fromCharCode.apply(null, Array.from(data).filter(v => v != 0));\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadNullTerminatedStringField(d: FileDataProvider, p: number): S.StringField {\r\n    let bytes: number[] = [];\r\n    let ptr = p;\r\n    let b: number;\r\n\r\n    do {\r\n        b = d.getU1(ptr++);\r\n        bytes.push(b);\r\n    } while (b != 0);\r\n    const str = bytes.slice(0, bytes.length - 1).map(v => `%${v.toString(16)}`).join(\"\");\r\n    const value = decodeURIComponent(str);\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p, data: Uint8Array.from(bytes), value\r\n    };\r\n}\r\n\r\nexport function loadStructArrayByCount<T extends S.FileData>(\r\n    d: FileDataProvider,\r\n    p: number,\r\n    loader: (d: FileDataProvider, p: number) => T,\r\n    count: number): S.StructArray<T> {\r\n\r\n    let items: T[] = [];\r\n    let ptr = p;\r\n    for (let i = 0; i < count; i++) {\r\n        const s = loader(d, ptr);\r\n        items.push(s);\r\n        ptr += s._size;\r\n    }\r\n\r\n    return { _offset: p, _size: ptr - p, items };\r\n}\r\n\r\n//\r\n// Image headers.\r\n//\r\n\r\nexport function loadImageDosHeader(d: FileDataProvider, p: number): S.ImageDosHeader {\r\n    let ptr = p;\r\n\r\n    const e_magic = loadU2Field(d, ptr);\r\n    ptr += e_magic._size;\r\n\r\n    const e_cblp = loadU2Field(d, ptr);\r\n    ptr += e_cblp._size;\r\n\r\n    const e_cp = loadU2Field(d, ptr);\r\n    ptr += e_cp._size;\r\n\r\n    const e_crlc = loadU2Field(d, ptr);\r\n    ptr += e_crlc._size;\r\n\r\n    const e_cparhdr = loadU2Field(d, ptr);\r\n    ptr += e_cparhdr._size;\r\n\r\n    const e_minalloc = loadU2Field(d, ptr);\r\n    ptr += e_minalloc._size;\r\n\r\n    const e_maxalloc = loadU2Field(d, ptr);\r\n    ptr += e_maxalloc._size;\r\n\r\n    const e_ss = loadU2Field(d, ptr);\r\n    ptr += e_ss._size;\r\n\r\n    const e_sp = loadU2Field(d, ptr);\r\n    ptr += e_sp._size;\r\n\r\n    const e_csum = loadU2Field(d, ptr);\r\n    ptr += e_csum._size;\r\n\r\n    const e_ip = loadU2Field(d, ptr);\r\n    ptr += e_ip._size;\r\n\r\n    const e_cs = loadU2Field(d, ptr);\r\n    ptr += e_cs._size;\r\n\r\n    const e_lfarlc = loadU2Field(d, ptr);\r\n    ptr += e_lfarlc._size;\r\n\r\n    const e_ovno = loadU2Field(d, ptr);\r\n    ptr += e_ovno._size;\r\n\r\n    const e_res = loadFixedSizeByteArrayField(d, ptr, 4 * 2);\r\n    ptr += e_res._size;\r\n\r\n    const e_oemid = loadU2Field(d, ptr);\r\n    ptr += e_oemid._size;\r\n\r\n    const e_oeminfo = loadU2Field(d, ptr);\r\n    ptr += e_oeminfo._size;\r\n\r\n    const e_res2 = loadFixedSizeByteArrayField(d, ptr, 10 * 2);\r\n    ptr += e_res2._size;\r\n\r\n    const e_lfanew = loadU4Field(d, ptr);\r\n    ptr += e_lfanew._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        e_magic,\r\n        e_cblp,\r\n        e_cp,\r\n        e_crlc,\r\n        e_cparhdr,\r\n        e_minalloc,\r\n        e_maxalloc,\r\n        e_ss,\r\n        e_sp,\r\n        e_csum,\r\n        e_ip,\r\n        e_cs,\r\n        e_lfarlc,\r\n        e_ovno,\r\n        e_res,\r\n        e_oemid,\r\n        e_oeminfo,\r\n        e_res2,\r\n        e_lfanew,\r\n    };\r\n}\r\n\r\nexport function loadImageFileHeader(d: FileDataProvider, p: number): S.ImageFileHeader {\r\n    let ptr = p;\r\n\r\n    const Machine = loadU2Field(d, ptr);\r\n    ptr += Machine._size;\r\n\r\n    const NumberOfSections = loadU2Field(d, ptr);\r\n    ptr += NumberOfSections._size;\r\n\r\n    const TimeDateStamp = loadU4Field(d, ptr);\r\n    ptr += TimeDateStamp._size;\r\n\r\n    const PointerToSymbolTable = loadU4Field(d, ptr);\r\n    ptr += PointerToSymbolTable._size;\r\n\r\n    const NumberOfSymbols = loadU4Field(d, ptr);\r\n    ptr += NumberOfSymbols._size;\r\n\r\n    const SizeOfOptionalHeader = loadU2Field(d, ptr);\r\n    ptr += SizeOfOptionalHeader._size;\r\n\r\n    const Characteristics = loadU2EnumField<F.ImageFile>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Machine,\r\n        NumberOfSections,\r\n        TimeDateStamp,\r\n        PointerToSymbolTable,\r\n        NumberOfSymbols,\r\n        SizeOfOptionalHeader,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader32(d: FileDataProvider, p: number): S.ImageOptionalHeader32 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const BaseOfData = loadU4Field(d, ptr);\r\n    ptr += BaseOfData._size;\r\n\r\n    const ImageBase = loadU4Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        BaseOfData,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader64(d: FileDataProvider, p: number): S.ImageOptionalHeader64 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const ImageBase = loadU8Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageDataDirectory(d: FileDataProvider, p: number): S.ImageDataDirectory {\r\n    let ptr = p;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        VirtualAddress,\r\n        Size,\r\n    };\r\n}\r\n\r\nexport function loadImageSectionHeader(d: FileDataProvider, p: number): S.ImageSectionHeader {\r\n    let ptr = p;\r\n\r\n    const Name = loadFixedSizeAsciiStringField(d, ptr, 8);\r\n    ptr += Name._size;\r\n\r\n    const VirtualSize = loadU4Field(d, ptr);\r\n    ptr += VirtualSize._size;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const SizeOfRawData = loadU4Field(d, ptr);\r\n    ptr += SizeOfRawData._size;\r\n\r\n    const PointerToRawData = loadU4Field(d, ptr);\r\n    ptr += PointerToRawData._size;\r\n\r\n    const PointerToRelocations = loadU4Field(d, ptr);\r\n    ptr += PointerToRelocations._size;\r\n\r\n    const PointerToLinenumbers = loadU4Field(d, ptr);\r\n    ptr += PointerToLinenumbers._size;\r\n\r\n    const NumberOfRelocations = loadU2Field(d, ptr);\r\n    ptr += NumberOfRelocations._size;\r\n\r\n    const NumberOfLinenumbers = loadU2Field(d, ptr);\r\n    ptr += NumberOfLinenumbers._size;\r\n\r\n    const Characteristics = loadU4EnumField<F.ImageSection>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Name,\r\n        VirtualSize,\r\n        VirtualAddress,\r\n        SizeOfRawData,\r\n        PointerToRawData,\r\n        PointerToRelocations,\r\n        PointerToLinenumbers,\r\n        NumberOfRelocations,\r\n        NumberOfLinenumbers,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\n//\r\n// Metadata structures.\r\n//\r\n\r\nexport function loadCliHeader(d: FileDataProvider, p: number): S.CliHeader {\r\n    let ptr = p;\r\n\r\n    const cb = loadU4Field(d, ptr);\r\n    ptr += cb._size;\r\n\r\n    const MajorRuntimeVersion = loadU2Field(d, ptr);\r\n    ptr += MajorRuntimeVersion._size;\r\n\r\n    const MinorRuntimeVersion = loadU2Field(d, ptr);\r\n    ptr += MinorRuntimeVersion._size;\r\n\r\n    const MetaData = loadImageDataDirectory(d, ptr);\r\n    ptr += MetaData._size;\r\n\r\n    const Flags = loadU4Field(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const EntryPointToken = loadU4Field(d, ptr);\r\n    ptr += EntryPointToken._size;\r\n\r\n    const Resources = loadImageDataDirectory(d, ptr);\r\n    ptr += Resources._size;\r\n\r\n    const StrongNameSignature = loadImageDataDirectory(d, ptr);\r\n    ptr += StrongNameSignature._size;\r\n\r\n    const CodeManagerTable = loadImageDataDirectory(d, ptr);\r\n    ptr += CodeManagerTable._size;\r\n\r\n    const VTableFixups = loadImageDataDirectory(d, ptr);\r\n    ptr += VTableFixups._size;\r\n\r\n    const ExportAddressTableJumps = loadImageDataDirectory(d, ptr);\r\n    ptr += ExportAddressTableJumps._size;\r\n\r\n    const ManagedNativeHeader = loadImageDataDirectory(d, ptr);\r\n    ptr += ManagedNativeHeader._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        cb,\r\n        MajorRuntimeVersion,\r\n        MinorRuntimeVersion,\r\n        MetaData,\r\n        Flags,\r\n        EntryPointToken,\r\n        Resources,\r\n        StrongNameSignature,\r\n        CodeManagerTable,\r\n        VTableFixups,\r\n        ExportAddressTableJumps,\r\n        ManagedNativeHeader,\r\n    };\r\n}\r\n\r\nexport function loadMetadataRoot(d: FileDataProvider, p: number): S.MetadataRoot {\r\n    let ptr = p;\r\n\r\n    const Signature = loadU4Field(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    const MajorVersion = loadU2Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU2Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const Reserved = loadU4Field(d, ptr);\r\n    ptr += Reserved._size;\r\n\r\n    const VersionLength = loadU4Field(d, ptr);\r\n    ptr += VersionLength._size;\r\n\r\n    const VersionString = loadNullTerminatedStringField(d, ptr);\r\n    ptr += VersionString._size;\r\n\r\n    const paddingSize = U.calculatePadding(VersionString._size);\r\n    const VersionPadding = loadFixedSizeByteArrayField(d, ptr, paddingSize);\r\n    ptr += VersionPadding._size;\r\n\r\n    const Flags = loadU2Field(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Streams = loadU2Field(d, ptr);\r\n    ptr += Streams._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Signature,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        Reserved,\r\n        VersionLength,\r\n        VersionString,\r\n        VersionPadding,\r\n        Flags,\r\n        Streams,\r\n    };\r\n}\r\n\r\nexport function loadMetadataStreamHeader(d: FileDataProvider, p: number): S.MetadataStreamHeader {\r\n    let ptr = p;\r\n\r\n    const Offset = loadU4Field(d, ptr);\r\n    ptr += Offset._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    const Name = loadNullTerminatedStringField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const paddingSize = U.calculatePadding(Name._size);\r\n    const Padding = loadFixedSizeByteArrayField(d, ptr, paddingSize);\r\n    ptr += Padding._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Offset,\r\n        Size,\r\n        Name,\r\n        Padding,\r\n    };\r\n}\r\n\r\nexport function loadMetadataTableHeader(d: FileDataProvider, p: number): S.MetadataTableHeader {\r\n    let ptr = p;\r\n\r\n    const Reserved = loadU4Field(d, ptr);\r\n    ptr += Reserved._size;\r\n\r\n    const MajorVersion = loadU1Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU1Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const HeapSizes = loadU1Field(d, ptr);\r\n    ptr += HeapSizes._size;\r\n\r\n    const Reserved2 = loadU1Field(d, ptr);\r\n    ptr += Reserved2._size;\r\n\r\n    const Valid = loadU8Field(d, ptr);\r\n    ptr += Valid._size;\r\n\r\n    const Sorted = loadU8Field(d, ptr);\r\n    ptr += Sorted._size;\r\n\r\n    const tables = U.count1(Valid.high) + U.count1(Valid.low);\r\n    const Rows = loadStructArrayByCount(d, ptr, loadU4Field, tables);\r\n    ptr += Rows._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Reserved,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        HeapSizes,\r\n        Reserved2,\r\n        Valid,\r\n        Sorted,\r\n        Rows,\r\n    }\r\n}","import * as S from \"./structures\";\r\nimport * as A from \"./aux-structures\";\r\nimport * as L from \"./loader\";\r\nimport * as F from \"./image-flags\";\r\nimport * as E from \"./error\";\r\nimport * as U from \"./utils\";\r\n\r\nexport class PEImage implements L.FileDataProvider {\r\n    public static load(buf: ArrayBuffer): PEImage {\r\n        return new PEImage(buf);\r\n    }\r\n\r\n    //\r\n    // FileDataProvider functions.\r\n    //\r\n\r\n    public getU1(p: number): number {\r\n        this.check(p, 1);\r\n        return this.data.getUint8(p);\r\n    }\r\n\r\n    public getU2(p: number): number {\r\n        this.check(p, 2);\r\n        return this.data.getUint16(p, true);\r\n    }\r\n\r\n    public getU4(p: number): number {\r\n        this.check(p, 3);\r\n        return this.data.getUint32(p, true);\r\n    }\r\n\r\n    public getData(p: number, sz: number): Uint8Array {\r\n        this.check(p, sz);\r\n        return new Uint8Array(this.data.buffer.slice(p, p + sz));\r\n    }\r\n\r\n    //\r\n    // Image attributes.\r\n    //\r\n\r\n    public is32Bit(): boolean | undefined {\r\n        const optHdr = this.getOptionalHeader();\r\n        if (optHdr == null) {\r\n            return undefined;\r\n        }\r\n\r\n        switch (optHdr.Magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC: return true;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC: return false;\r\n            default: return undefined;\r\n        }\r\n    }\r\n\r\n    public isManaged(): boolean {\r\n        const dd = this.getDataDirectories();\r\n        return dd != null && this.isDataDirectoryValid(\r\n            dd.items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR]\r\n        );\r\n    }\r\n\r\n    public hasMetadata(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.MetaData);\r\n    }\r\n\r\n    public hasManagedResources(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.Resources);\r\n    }\r\n\r\n    public hasStrongNameSignature(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.StrongNameSignature);\r\n    }\r\n\r\n    public isMetadataTableValid(id: F.MetadataTableIndex): boolean {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].valid;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public isMetadataTableSorted(id: F.MetadataTableIndex): boolean {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].sorted;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public getMetadataTableRows(id: F.MetadataTableIndex): number {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].rows;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    //\r\n    // Image headers.\r\n    //\r\n\r\n    public getDosHeader(): S.ImageDosHeader | undefined {\r\n        return this.dosHeader;\r\n    }\r\n\r\n    public getPESignature(): S.U4Field | undefined {\r\n        return this.peSignature;\r\n    }\r\n\r\n    public getFileHeader(): S.ImageFileHeader | undefined {\r\n        return this.fileHeader;\r\n    }\r\n\r\n    public getOptionalHeader(): S.ImageOptionalHeader32 | S.ImageOptionalHeader64 | undefined {\r\n        return this.optionalHeader;\r\n    }\r\n\r\n    public getDataDirectories(): S.StructArray<S.ImageDataDirectory> | undefined {\r\n        return this.dataDirectories;\r\n    }\r\n\r\n    public getSectionHeaders(): S.StructArray<S.ImageSectionHeader> | undefined {\r\n        return this.sectionHeaders;\r\n    }\r\n\r\n    //\r\n    // Metadata structures.\r\n    //\r\n\r\n    public getCliHeader(): S.CliHeader | undefined {\r\n        if (this.cliHeader) return this.cliHeader;\r\n        if (!this.isManaged()) return undefined;\r\n\r\n        const offset = this.rvaToOffset(this.dataDirectories!\r\n            .items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR]\r\n            .VirtualAddress.value);\r\n\r\n        this.cliHeader = L.loadCliHeader(this, offset);\r\n        return this.cliHeader;\r\n    }\r\n\r\n    public getMetadataRoot(): S.MetadataRoot | undefined {\r\n        if (this.metadataRoot) return this.metadataRoot;\r\n\r\n        const cliHeader = this.getCliHeader();\r\n        if (!cliHeader) return undefined;\r\n\r\n        const offset = this.rvaToOffset(cliHeader.MetaData.VirtualAddress.value);\r\n        if (!offset) return undefined;\r\n\r\n        this.metadataRoot = L.loadMetadataRoot(this, offset);\r\n        return this.metadataRoot;\r\n    }\r\n\r\n    public getMetadataStreamHeaders(): S.StructArray<S.MetadataStreamHeader> | undefined {\r\n        if (this.metadataStreamHeaders) return this.metadataStreamHeaders;\r\n\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot || !mdRoot.Streams.value) return undefined;\r\n\r\n        this.metadataStreamHeaders = L.loadStructArrayByCount(\r\n            this,\r\n            mdRoot._offset + mdRoot._size,\r\n            L.loadMetadataStreamHeader,\r\n            mdRoot.Streams.value\r\n        );\r\n        return this.metadataStreamHeaders;\r\n    }\r\n\r\n    public getMetadataStreamHeader(name: F.MetadataStreamName): S.MetadataStreamHeader | undefined {\r\n        const headers = this.getMetadataStreamHeaders();\r\n        if (!headers) return undefined;\r\n\r\n        return headers.items.filter(v => v.Name.value == name).shift();\r\n    }\r\n\r\n    public getStrongNameSignature(): S.Field | undefined {\r\n        if (this.strongNameSignature) return this.strongNameSignature;\r\n\r\n        const cliHeader = this.getCliHeader();\r\n        if (!cliHeader) return undefined;\r\n\r\n        const offset = this.rvaToOffset(cliHeader.StrongNameSignature.VirtualAddress.value);\r\n        if (!offset) return undefined;\r\n\r\n        this.strongNameSignature = L.loadFixedSizeByteArrayField(\r\n            this, offset,\r\n            cliHeader.StrongNameSignature.Size.value);\r\n        return this.strongNameSignature;\r\n    }\r\n\r\n    public getMetadataTableHeader(): S.MetadataTableHeader | undefined {\r\n        if (this.metadataTableHeader) return this.metadataTableHeader;\r\n\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.Table);\r\n        if (!sh) return undefined;\r\n\r\n        const offset = mdRoot._offset + sh.Offset.value;\r\n        this.metadataTableHeader = L.loadMetadataTableHeader(this, offset);\r\n        this.fillMetadataTableInfo();\r\n\r\n        return this.metadataTableHeader;\r\n    }\r\n\r\n    public getMdsStringsItem(offset: number): S.StringField | undefined {\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.Strings);\r\n        if (!sh) return undefined;\r\n\r\n        if (offset < 0 || offset >= sh.Size.value) {\r\n            return undefined;\r\n        } else {\r\n            return L.loadNullTerminatedStringField(this,\r\n                mdRoot._offset + sh.Offset.value + offset);\r\n        }\r\n    }\r\n\r\n    //\r\n    // Utilities.\r\n    //\r\n\r\n    public rvaToOffset(rva: number): number {\r\n        const sh = this.getSectionHeaderByRva(rva);\r\n        if (!sh) return 0;\r\n\r\n        return rva - sh.VirtualAddress.value + sh.PointerToRawData.value;\r\n    }\r\n\r\n    public offsetToRva(offset: number): number {\r\n        const sh = this.getSectionHeaderByOffset(offset);\r\n        if (!sh) return 0;\r\n\r\n        return offset - sh.PointerToRawData.value + sh.VirtualAddress.value;\r\n    }\r\n\r\n    //\r\n    // Private implementations.\r\n    //\r\n\r\n    private check(p: number, sz: number): void {\r\n        if (p < 0 || p >= this.data.byteLength\r\n            || sz < 0 || p + sz > this.data.byteLength) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_POSITION, p, sz);\r\n        }\r\n    }\r\n\r\n    private constructor(buf: ArrayBuffer) {\r\n        this.data = new DataView(buf);\r\n        this.loadHeaders();\r\n    }\r\n\r\n    private loadHeaders(): void {\r\n        let ptr = 0;\r\n        this.dosHeader = L.loadImageDosHeader(this, ptr);\r\n\r\n        if (this.dosHeader.e_magic.value != F.IMAGE_DOS_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DOS_SIGNATURE, ptr, 2);\r\n        }\r\n\r\n        ptr = this.dosHeader.e_lfanew.value;\r\n        this.peSignature = L.loadU4Field(this, ptr);\r\n\r\n        if (this.peSignature.value != F.IMAGE_NT_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_PE_SIGNATURE, ptr, 4);\r\n        }\r\n\r\n        ptr += this.peSignature._size;\r\n        this.fileHeader = L.loadImageFileHeader(this, ptr);\r\n\r\n        ptr += this.fileHeader._size;\r\n        const magic = L.loadU2Field(this, ptr);\r\n        switch (magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader32(this, ptr);\r\n                break;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader64(this, ptr);\r\n                break;\r\n            default:\r\n                throw new E.PEError(E.PEErrorType.INVALID_OPTIONAL_HEADER_MAGIC, ptr, 2);\r\n        }\r\n\r\n        if (this.optionalHeader.NumberOfRvaAndSizes.value != F.IMAGE_NUMBEROF_DIRECTORY_ENTRIES) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_DIRECTORY_COUNT,\r\n                this.optionalHeader.NumberOfRvaAndSizes._offset,\r\n                this.optionalHeader.NumberOfRvaAndSizes._size);\r\n        }\r\n\r\n        ptr += this.optionalHeader._size;\r\n        this.dataDirectories = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageDataDirectory,\r\n            this.optionalHeader.NumberOfRvaAndSizes.value);\r\n\r\n        ptr += this.dataDirectories._size;\r\n        this.sectionHeaders = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageSectionHeader,\r\n            this.fileHeader.NumberOfSections.value);\r\n    }\r\n\r\n    private getSectionHeaderByOffset(offset: number): S.ImageSectionHeader | undefined {\r\n        return this.sectionHeaders && this.sectionHeaders.items.filter(h => {\r\n            const p = h.PointerToRawData.value;\r\n            const sz = h.SizeOfRawData.value;\r\n            return offset >= p && offset < p + sz;\r\n        }).shift();\r\n    }\r\n\r\n    private getSectionHeaderByRva(rva: number): S.ImageSectionHeader | undefined {\r\n        return this.sectionHeaders && this.sectionHeaders.items.filter(h => {\r\n            const p = h.VirtualAddress.value;\r\n            const sz = h.VirtualSize.value;\r\n            return rva >= p && rva < p + sz;\r\n        }).shift();\r\n    }\r\n\r\n    private isDataDirectoryValid(dd?: S.ImageDataDirectory): boolean {\r\n        return (dd && dd.VirtualAddress.value > 0 && dd.Size.value > 0) || false;\r\n    }\r\n\r\n    private fillMetadataTableInfo(): void {\r\n        const h = this.metadataTableHeader;\r\n        if (!h) return;\r\n\r\n        let info: A.MetadataTableInfo = {};\r\n        let nValid = 0;\r\n        for (let id = 0; id < F.NumberOfMdTables; id++) {\r\n            const valid = U.isSetLong(h.Valid.high, h.Valid.low, id);\r\n            const sorted = U.isSetLong(h.Sorted.high, h.Sorted.low, id);\r\n            const rows = valid ? h.Rows.items[nValid++].value : 0;\r\n            info[id] = { valid, sorted, rows };\r\n        }\r\n        this.metadataTableInfo = info;\r\n    }\r\n\r\n    private readonly data: DataView;\r\n\r\n    private dosHeader?: S.ImageDosHeader;\r\n    private peSignature?: S.U4Field;\r\n    private fileHeader?: S.ImageFileHeader;\r\n    private optionalHeader?: S.ImageOptionalHeader32 | S.ImageOptionalHeader64;\r\n    private dataDirectories?: S.StructArray<S.ImageDataDirectory>;\r\n    private sectionHeaders?: S.StructArray<S.ImageSectionHeader>;\r\n\r\n    private cliHeader?: S.CliHeader;\r\n    private metadataRoot?: S.MetadataRoot;\r\n    private metadataStreamHeaders?: S.StructArray<S.MetadataStreamHeader>;\r\n    private strongNameSignature?: S.Field;\r\n\r\n    private metadataTableHeader?: S.MetadataTableHeader;\r\n    private metadataTableInfo?: A.MetadataTableInfo;\r\n}\r\n","export function createResNavDataMessage(navList: W.NavData[]): W.ResNavDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_NAV_DATA,\r\n        navList\r\n    };\r\n}\r\n\r\nexport function createResPageDataMessage(pageData: W.PageData): W.ResPageDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PAGE_DATA,\r\n        pageData\r\n    };\r\n}\r\n\r\nexport function createResPEPropsMessage(is32Bit?: boolean, isManaged?: boolean): W.ResPEPropsMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_PROPS,\r\n        is32Bit,\r\n        isManaged\r\n    };\r\n}\r\n\r\nexport function createResPEErrorMessage(error: string): W.ResPEErrorMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_ERROR,\r\n        error\r\n    };\r\n}\r\n","import * as M from \"./message\";\r\nimport { PEImage } from \"./pe/image\";\r\nimport { generatePageData, clearGeneratorCache } from \"./page-data/generator\";\r\nimport { generateNavList } from \"./page-data/nav-data\";\r\n\r\nlet pe: PEImage | null = null;\r\n\r\nonmessage = (ev) => {\r\n    const msg = ev.data as W.WorkerMessage;\r\n    switch (msg.type) {\r\n        case W.WorkerMessageType.REQ_OPEN_FILE:\r\n            handleReqOpenFile(msg as W.ReqOpenFileMessage);\r\n            break;\r\n\r\n        case W.WorkerMessageType.REQ_OPEN_NAV:\r\n            handleReqOpenNav(msg as W.ReqOpenNavMessage);\r\n            break;\r\n    }\r\n};\r\n\r\nfunction handleReqOpenFile(msg: W.ReqOpenFileMessage): void {\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = ev => {\r\n        try {\r\n            const buf = <ArrayBuffer>(<FileReader>ev.target).result;\r\n            pe = PEImage.load(buf);\r\n            clearGeneratorCache();\r\n\r\n            // Response with page data.\r\n            const pageData = generatePageData(pe, W.PageID.HEADERS);\r\n            const pageDataMsg = M.createResPageDataMessage(pageData);\r\n            postMessage(pageDataMsg);\r\n\r\n            // Response with PE properties.\r\n            const is32Bit = pe.is32Bit();\r\n            const isManaged = pe.isManaged();\r\n            const pePropsMsg = M.createResPEPropsMessage(is32Bit, isManaged);\r\n            postMessage(pePropsMsg);\r\n\r\n            // Response with navigation data.\r\n            const navList = generateNavList(pe);\r\n            const navMsg = M.createResNavDataMessage(navList);\r\n            postMessage(navMsg);\r\n        } catch (ex) {\r\n            const msg = M.createResPEErrorMessage(ex.message\r\n                || `Unknown error: ${JSON.stringify(ex)}`);\r\n            postMessage(msg);\r\n        }\r\n    };\r\n\r\n    reader.onerror = ev => {\r\n        pe = null;\r\n        const msg = M.createResPEErrorMessage(\"Can't open file.\");\r\n        postMessage(msg);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(msg.file);\r\n}\r\n\r\nfunction handleReqOpenNav(msg: W.ReqOpenNavMessage): void {\r\n    if (pe != null) {\r\n        const { pageID, pageNum, elemID } = msg.target;\r\n        const pageData = generatePageData(pe, pageID, pageNum);\r\n        pageData.nav.elemID = elemID;\r\n        const res = M.createResPageDataMessage(pageData);\r\n        postMessage(res);\r\n    }\r\n}"],"sourceRoot":""}