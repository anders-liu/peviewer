{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker/pe/image-flags.ts","webpack:///./src/worker/page-data/formatter.ts","webpack:///./src/worker/pe/utils.ts","webpack:///./src/worker/page-data/nav-data.ts","webpack:///./src/worker/page-data/mds-list.ts","webpack:///./src/worker/page-data/mds-table.ts","webpack:///./src/worker/page-data/metadata-headers.ts","webpack:///./src/worker/page-data/headers.ts","webpack:///./src/worker/page-data/generator.ts","webpack:///./src/worker/pe/error.ts","webpack:///./src/worker/pe/loader.ts","webpack:///./src/worker/pe/image.ts","webpack:///./src/worker/message.ts","webpack:///./src/worker/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MetadataTableIndex","IMAGE_DOS_SIGNATURE","IMAGE_NT_SIGNATURE","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_OPTIONAL_HDR64_MAGIC","ImageFile","ImageFileMachine","ImageSubsystem","ImageDllCharacteristics","ImageDirectoryEntry","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","ImageSection","ComImageFlags","MetadataSignature","NumberOfMdTables","MetadataCodedTokenIndex","ctc","tagSize","tables","TypeDef","TypeRef","TypeSpec","Field","Param","Property","MethodDef","InterfaceImpl","MemberRef","Module","DeclSecurity","Event","StandAloneSig","ModuleRef","Assembly","AssemblyRef","File","ExportedType","ManifestResource","GenericParam","GenericParamConstraint","MethodSpec","String","AssemblyHashAlgorithm","CorAssemblyFlags","CorEventAttr","CorFieldAttr","CorFileFlags","CorGenericParamAttr","CorPinvokeMap","CorManifestResourceFlags","CorMethodAttr","CorMethodImpl","CorMethodSemanticsAttr","CorParamAttr","CorPropertyAttr","CorTypeAttr","CorDeclSecurity","CorElementType","formatU1RawHex","padZeroLeft","toString","toUpperCase","formatU2RawHex","formatU4RawHex","formatU1Hex","formatU2Hex","formatU4Hex","formatHexDec","formatDec","v","toLocaleString","formatBytes","bytes","lineWidth","lines","start","length","line","Array","from","subarray","map","b","join","push","str","len","repeat","formatUIntField","f","sz","showDec","hex","offset","_offset","size","_size","rawData","data","formatStructTitle","title","formatU1Field","formatU2Field","formatU4Field","formatU8Field","high","low","formatCompressedUIntField","formatBytesField","formatStringField","formatGuidField","decompressUint","buffer","byteLength","RangeError","calculatePadding","dataSize","align","count1","mask","isSetLong","bit","decompressInt","u","fb","getCompressedIntSize","firstByte","F","generateNavList","pe","pageID","navList","target","children","elemID","navMD","isManaged","hasMetadata","hasStrongNameSignature","getMetadataStreamHeader","pageNum","getMetadataTableHeader","ti","tid","isMetadataTableValid","getMetadataTableRows","subID","generateMDTablesNavData","generateMDHeadersNavData","U","FM","getBlobIndexes","base","indexes","dtsz","getU1","getData","putIndexToPages","pageSize","pages","pageItems","pStart","pEnd","slice","generateMdsStringsPageData","cache","cfg","pgNum","mdsStrings","mdRoot","getMetadataRoot","sh","Offset","Size","mdsOffsetListPageSize","checkAndBuildCacheForMdsStrings","items","titleOf","nav","groups","index","getMdsStringsItem","paging","currentPageNumber","pageNavList","generateMdsUSPageData","mdsUS","checkAndBuildCacheForMdsUS","item","getMdsUSItem","Value","Suffix","generateMdsBlobPageData","mdsBlob","checkAndBuildCacheForMdsBlob","getMdsBlobItem","generateMdsGuidPageData","getMdsGuidItems","generateMdtModuleItems","Generation","Name","Mvid","EncId","EncBaseId","generateMdtTypeRefItems","ResolutionScope","Namespace","generateMdtTypeDefItems","Flags","Extends","FieldList","MethodList","generateMdtFieldPtrItems","generateMdtFieldItems","Signature","generateMdtMethodPtrItems","Method","generateMdtMethodDefItems","RVA","ImplFlags","ParamList","generateMdtParamPtrItems","generateMdtParamItems","Sequence","generateMdtInterfaceImplItems","Class","Interface","generateMdtMemberRefItems","generateMdtConstantItems","Type","PaddingZero","Parent","generateMdtCustomAttributeItems","generateMdtFieldMarshalItems","NativeType","generateMdtDeclSecurityItems","Action","PermissionSet","generateMdtClassLayoutItems","PackingSize","ClassSize","generateMdtFieldLayoutItems","OffSet","generateMdtStandAloneSigItems","generateMdtEventMapItems","EventList","generateMdtEventPtrItems","generateMdtEventItems","EventFlags","EventType","generateMdtPropertyMapItems","PropertyList","generateMdtPropertyPtrItems","generateMdtPropertyItems","PropFlags","generateMdtMethodSemanticsItems","Semantic","Association","generateMdtMethodImplItems","MethodBody","MethodDeclaration","generateMdtModuleRefItems","generateMdtTypeSpecItems","generateMdtImplMapItems","MappingFlags","MemberForwarded","ImportName","ImportScope","generateMdtFieldRVAItems","generateMdtENCLogItems","Token","FuncCode","generateMdtENCMapItems","generateMdtAssemblyItems","HashAlgId","MajorVersion","MinorVersion","BuildNumber","RevisionNumber","PublicKey","Locale","generateMdtAssemblyProcessorItems","Processor","generateMdtAssemblyOSItems","OSPlatformID","OSMajorVersion","OSMinorVersion","generateMdtAssemblyRefItems","PublicKeyOrToken","HashValue","generateMdtAssemblyRefProcessorItems","generateMdtAssemblyRefOSItems","generateMdtFileItems","generateMdtExportedTypeItems","TypeDefId","TypeName","TypeNamespace","Implementation","generateMdtManifestResourceItems","generateMdtNestedClassItems","NestedClass","EnclosingClass","generateMdtGenericParamItems","Number","Owner","generateMdtMethodSpecItems","Instantiation","generateMdtGenericParamConstraintItems","Constraint","getRidOnPage","psz","mdtPageSize","rows","end","generateMdsTablePageData","tableHeader","h","Reserved","HeapSizes","Reserved2","Valid","Sorted","Rows","generateMDTableHeader","tableInfo","id","valid","sorted","isMetadataTableSorted","generateMDTableList","generateMdtPageData","loader","builder","_a","getMdtModuleItem","getMdtTypeRefItem","getMdtTypeDefItem","FieldPtr","getMdtFieldPtrItem","getMdtFieldItem","MethodPtr","getMdtMethodPtrItem","getMdtMethodDefItem","ParamPtr","getMdtParamPtrItem","getMdtParamItem","getMdtInterfaceImplItem","getMdtMemberRefItem","Constant","getMdtConstantItem","CustomAttribute","getMdtCustomAttributeItem","FieldMarshal","getMdtFieldMarshalItem","getMdtDeclSecurityItem","ClassLayout","getMdtClassLayoutItem","FieldLayout","getMdtFieldLayoutItem","getMdtStandAloneSigItem","EventMap","getMdtEventMapItem","EventPtr","getMdtEventPtrItem","getMdtEventItem","PropertyMap","getMdtPropertyMapItem","PropertyPtr","getMdtPropertyPtrItem","getMdtPropertyItem","MethodSemantics","getMdtMethodSemanticsItem","MethodImpl","getMdtMethodImplItem","getMdtModuleRefItem","getMdtTypeSpecItem","ImplMap","getMdtImplMapItem","FieldRVA","getMdtFieldRVAItem","ENCLog","getMdtENCLogItem","ENCMap","getMdtENCMapItem","getMdtAssemblyItem","AssemblyProcessor","getMdtAssemblyProcessorItem","AssemblyOS","getMdtAssemblyOSItem","getMdtAssemblyRefItem","AssemblyRefProcessor","getMdtAssemblyRefProcessorItem","AssemblyRefOS","getMdtAssemblyRefOSItem","getMdtFileItem","getMdtExportedTypeItem","getMdtManifestResourceItem","getMdtNestedClassItem","getMdtGenericParamItem","getMdtMethodSpecItem","getMdtGenericParamConstraintItem","rid","generateSignleMdtTableItems","generateTalbeItems","Math","floor","tblName","generateMdtPaging","generateMetadataHeadersPageData","cliHeader","getCliHeader","cb","MajorRuntimeVersion","MinorRuntimeVersion","MetaData","VirtualAddress","EntryPointToken","Resources","StrongNameSignature","CodeManagerTable","VTableFixups","ExportAddressTableJumps","ManagedNativeHeader","generateCliHeader","metadataRoot","VersionLength","VersionString","VersionPadding","Streams","generateMetadataRoot","streamHeaders","getMetadataStreamHeaders","Padding","generateMetadataStreamHeader","snSignature","getStrongNameSignature","generateSNSignature","generateHeadersPageData","dosHeader","getDosHeader","e_magic","e_cblp","e_cp","e_crlc","e_cparhdr","e_minalloc","e_maxalloc","e_ss","e_sp","e_csum","e_ip","e_cs","e_lfarlc","e_ovno","e_res","e_oemid","e_oeminfo","e_res2","e_lfanew","generateDosHeader","peSignature","getPESignature","generatePESignature","fileHeader","getFileHeader","Machine","NumberOfSections","TimeDateStamp","PointerToSymbolTable","NumberOfSymbols","SizeOfOptionalHeader","Characteristics","generateFileHeader","optionalHeader","getOptionalHeader","Magic","MajorLinkerVersion","MinorLinkerVersion","SizeOfCode","SizeOfInitializedData","SizeOfUninitializedData","AddressOfEntryPoint","BaseOfCode","BaseOfData","ImageBase","SectionAlignment","FileAlignment","MajorOperatingSystemVersion","MinorOperatingSystemVersion","MajorImageVersion","MinorImageVersion","MajorSubsystemVersion","MinorSubsystemVersion","Win32VersionValue","SizeOfImage","SizeOfHeaders","CheckSum","Subsystem","DllCharacteristics","SizeOfStackReserve","SizeOfStackCommit","SizeOfHeapReserve","SizeOfHeapCommit","LoaderFlags","NumberOfRvaAndSizes","fillOptionalHeader32Fields","fillOptionalHeader64Fields","generateOptionalHeader","dataDirectories","getDataDirectories","generateDataDirectories","sectionHeaders","getSectionHeaders","VirtualSize","SizeOfRawData","PointerToRawData","PointerToRelocations","PointerToLinenumbers","NumberOfRelocations","NumberOfLinenumbers","generateSectionHeaders","headers_1","metadata_headers_1","mds_table_1","mds_list_1","generatePageData","clearGeneratorCache","PEError","_super","type","_this","this","__extends","Error","loadU1Field","loadU2Field","getU2","loadU4Field","getU4","loadU8Field","loadCompressedUIntField","Uint8Array","loadU1EnumField","loadU2EnumField","loadU4EnumField","loadFixedSizeByteArrayField","loadFixedSizeAsciiStringField","fromCharCode","apply","filter","loadNullTerminatedStringField","ptr","decodeURIComponent","loadFixedSizeUnicodeStringField","arr","Uint16Array","fromCodePoint","loadStructArrayByCount","count","loadImageDataDirectory","loadMdsStringsField","getHeapSize","loadMdsGuidField","loadMdsBlobField","loadMdtRidField","getTableIDSize","loadMdCodedTokenField","baseField","getCodedTokenSize","codedTokenInfo","decodeCodedToken","__assign","token","cti","loadImageDosHeader","loadImageFileHeader","loadImageOptionalHeader32","loadImageOptionalHeader64","loadImageSectionHeader","loadCliHeader","loadMetadataRoot","loadMetadataStreamHeader","loadMetadataTableHeader","loadMetadataUSItem","suffixSize","loadMetadataBlobItem","loadMdTokenField","loadMdtModule","loadMdtTypeRef","loadMdtTypeDef","TypeDefOrRef","loadMdtFieldPtr","loadMdtField","loadMdtMethodPtr","loadMdtMethodDef","loadMdtParamPtr","loadMdtParam","loadMdtInterfaceImpl","loadMdtMemberRef","MemberRefParent","loadMdtConstant","HasConstant","loadMdtCustomAttribute","HasCustomAttribute","CustomAttributeType","loadMdtFieldMarshal","HasFieldMarshall","loadMdtDeclSecurity","HasDeclSecurity","loadMdtClassLayout","loadMdtFieldLayout","loadMdtStandAloneSig","loadMdtEventMap","loadMdtEventPtr","loadMdtEvent","loadMdtPropertyMap","loadMdtPropertyPtr","loadMdtProperty","loadMdtMethodSemantics","HasSemantics","loadMdtMethodImpl","MethodDefOrRef","loadMdtModuleRef","loadMdtTypeSpec","loadMdtImplMap","loadMdtFieldRVA","loadMdtENCLog","loadMdtENCMap","loadMdtAssembly","loadMdtAssemblyProcessor","loadMdtAssemblyOS","loadMdtAssemblyRef","loadMdtAssemblyRefProcessor","loadMdtAssemblyRefOS","loadMdtFile","loadMdtExportedType","loadMdtManifestResource","loadMdtNestedClass","loadMdtGenericParam","TypeOrMethodDef","loadMdtMethodSpec","loadMdtGenericParamConstraint","L","E","PEImage","buf","metadataSizingCache","DataView","loadHeaders","load","check","getUint8","getUint16","getUint32","is32Bit","optHdr","dd","isDataDirectoryValid","IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","hasManagedResources","info","metadataTableInfo","rvaToOffset","metadataStreamHeaders","headers","shift","strongNameSignature","metadataTableHeader","fillMetadataTableInfo","fillMetadataTableInfoExtra","checkMdt","baseOffset","rowSize","heap","idSize","codedToken","maxRows","_i","rva","getSectionHeaderByRva","offsetToRva","getSectionHeaderByOffset","nValid","ctid","ctsz","stringsSize","guidSize","blobSize","tbli","createResNavDataMessage","createResPageDataMessage","pageData","createResPEPropsMessage","createResPEErrorMessage","error","M","image_1","generator_1","nav_data_1","onmessage","ev","msg","reader","FileReader","onload","result","pageDataMsg","postMessage","pePropsMsg","navMsg","ex","msg_1","message","JSON","stringify","onerror","readAsArrayBuffer","file","handleReqOpenFile","res","handleReqOpenNav"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","export const IMAGE_DOS_SIGNATURE = 0x5A4D;  // MZ\r\n\r\nexport const IMAGE_NT_SIGNATURE = 0x00004550;  // PE00\r\n\r\nexport const IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\r\nexport const IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\r\n\r\nexport enum ImageFile {\r\n    IMAGE_FILE_RELOCS_STRIPPED = 0x0001,\r\n    IMAGE_FILE_EXECUTABLE_IMAGE = 0x0002,\r\n    IMAGE_FILE_LINE_NUMS_STRIPPED = 0x0004,\r\n    IMAGE_FILE_LOCAL_SYMS_STRIPPED = 0x0008,\r\n    IMAGE_FILE_AGGRESIVE_WS_TRIM = 0x0010,\r\n    IMAGE_FILE_LARGE_ADDRESS_AWARE = 0x0020,\r\n    IMAGE_FILE_BYTES_REVERSED_LO = 0x0080,\r\n    IMAGE_FILE_32BIT_MACHINE = 0x0100,\r\n    IMAGE_FILE_DEBUG_STRIPPED = 0x0200,\r\n    IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 0x0400,\r\n    IMAGE_FILE_NET_RUN_FROM_SWAP = 0x0800,\r\n    IMAGE_FILE_SYSTEM = 0x1000,\r\n    IMAGE_FILE_DLL = 0x2000,\r\n    IMAGE_FILE_UP_SYSTEM_ONLY = 0x4000,\r\n    IMAGE_FILE_BYTES_REVERSED_HI = 0x8000,\r\n}\r\n\r\nexport enum ImageFileMachine {\r\n    IMAGE_FILE_MACHINE_UNKNOWN = 0,\r\n    IMAGE_FILE_MACHINE_TARGET_HOST = 0x0001,\r\n    IMAGE_FILE_MACHINE_I386 = 0x014c,\r\n    IMAGE_FILE_MACHINE_R3000 = 0x0162,\r\n    IMAGE_FILE_MACHINE_R4000 = 0x0166,\r\n    IMAGE_FILE_MACHINE_R10000 = 0x0168,\r\n    IMAGE_FILE_MACHINE_WCEMIPSV2 = 0x0169,\r\n    IMAGE_FILE_MACHINE_ALPHA = 0x0184,\r\n    IMAGE_FILE_MACHINE_SH3 = 0x01a2,\r\n    IMAGE_FILE_MACHINE_SH3DSP = 0x01a3,\r\n    IMAGE_FILE_MACHINE_SH3E = 0x01a4,\r\n    IMAGE_FILE_MACHINE_SH4 = 0x01a6,\r\n    IMAGE_FILE_MACHINE_SH5 = 0x01a8,\r\n    IMAGE_FILE_MACHINE_ARM = 0x01c0,\r\n    IMAGE_FILE_MACHINE_THUMB = 0x01c2,\r\n    IMAGE_FILE_MACHINE_ARMNT = 0x01c4,\r\n    IMAGE_FILE_MACHINE_AM33 = 0x01d3,\r\n    IMAGE_FILE_MACHINE_POWERPC = 0x01F0,\r\n    IMAGE_FILE_MACHINE_POWERPCFP = 0x01f1,\r\n    IMAGE_FILE_MACHINE_IA64 = 0x0200,\r\n    IMAGE_FILE_MACHINE_MIPS16 = 0x0266,\r\n    IMAGE_FILE_MACHINE_ALPHA64 = 0x0284,\r\n    IMAGE_FILE_MACHINE_MIPSFPU = 0x0366,\r\n    IMAGE_FILE_MACHINE_MIPSFPU16 = 0x0466,\r\n    IMAGE_FILE_MACHINE_AXP64 = IMAGE_FILE_MACHINE_ALPHA64,\r\n    IMAGE_FILE_MACHINE_TRICORE = 0x0520,\r\n    IMAGE_FILE_MACHINE_CEF = 0x0CEF,\r\n    IMAGE_FILE_MACHINE_EBC = 0x0EBC,\r\n    IMAGE_FILE_MACHINE_AMD64 = 0x8664,\r\n    IMAGE_FILE_MACHINE_M32R = 0x9041,\r\n    IMAGE_FILE_MACHINE_ARM64 = 0xAA64,\r\n    IMAGE_FILE_MACHINE_CEE = 0xC0EE,\r\n}\r\n\r\nexport enum ImageSubsystem {\r\n    IMAGE_SUBSYSTEM_UNKNOWN = 0,\r\n    IMAGE_SUBSYSTEM_NATIVE = 1,\r\n    IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,\r\n    IMAGE_SUBSYSTEM_OS2_CUI = 5,\r\n    IMAGE_SUBSYSTEM_POSIX_CUI = 7,\r\n    IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9,\r\n    IMAGE_SUBSYSTEM_EFI_APPLICATION = 10,\r\n    IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11,\r\n    IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12,\r\n    IMAGE_SUBSYSTEM_EFI_ROM = 13,\r\n    IMAGE_SUBSYSTEM_XBOX = 14,\r\n    IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16,\r\n    IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 17,\r\n}\r\n\r\nexport enum ImageDllCharacteristics {\r\n    IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020,\r\n    IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 0x0040,\r\n    IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 0x0080,\r\n    IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 0x0100,\r\n    IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 0x0200,\r\n    IMAGE_DLLCHARACTERISTICS_NO_SEH = 0x0400,\r\n    IMAGE_DLLCHARACTERISTICS_NO_BIND = 0x0800,\r\n    IMAGE_DLLCHARACTERISTICS_APPCONTAINER = 0x1000,\r\n    IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 0x2000,\r\n    IMAGE_DLLCHARACTERISTICS_GUARD_CF = 0x4000,\r\n    IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 0x8000,\r\n}\r\n\r\nexport enum ImageDirectoryEntry {\r\n    IMAGE_DIRECTORY_ENTRY_EXPORT = 0,\r\n    IMAGE_DIRECTORY_ENTRY_IMPORT = 1,\r\n    IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,\r\n    IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,\r\n    IMAGE_DIRECTORY_ENTRY_SECURITY = 4,\r\n    IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,\r\n    IMAGE_DIRECTORY_ENTRY_DEBUG = 6,\r\n    IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7,\r\n    IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,\r\n    IMAGE_DIRECTORY_ENTRY_TLS = 9,\r\n    IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,\r\n    IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,\r\n    IMAGE_DIRECTORY_ENTRY_IAT = 12,\r\n    IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13,\r\n    IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14,\r\n}\r\n\r\nexport const IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16;\r\n\r\nexport enum ImageSection {\r\n    IMAGE_SCN_TYPE_NO_PAD = 0x00000008,\r\n\r\n    IMAGE_SCN_CNT_CODE = 0x00000020,\r\n    IMAGE_SCN_CNT_INITIALIZED_DATA = 0x00000040,\r\n    IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x00000080,\r\n\r\n    IMAGE_SCN_LNK_OTHER = 0x00000100,\r\n    IMAGE_SCN_LNK_INFO = 0x00000200,\r\n    IMAGE_SCN_LNK_REMOVE = 0x00000800,\r\n    IMAGE_SCN_LNK_COMDAT = 0x00001000,\r\n\r\n    IMAGE_SCN_NO_DEFER_SPEC_EXC = 0x00004000,\r\n    IMAGE_SCN_GPREL = 0x00008000,\r\n\r\n    IMAGE_SCN_MEM_PURGEABLE = 0x00020000,\r\n    IMAGE_SCN_MEM_16BIT = 0x00020000,\r\n    IMAGE_SCN_MEM_LOCKED = 0x00040000,\r\n    IMAGE_SCN_MEM_PRELOAD = 0x00080000,\r\n\r\n    IMAGE_SCN_ALIGN_1BYTES = 0x00100000,\r\n    IMAGE_SCN_ALIGN_2BYTES = 0x00200000,\r\n    IMAGE_SCN_ALIGN_4BYTES = 0x00300000,\r\n    IMAGE_SCN_ALIGN_8BYTES = 0x00400000,\r\n    IMAGE_SCN_ALIGN_16BYTES = 0x00500000,\r\n    IMAGE_SCN_ALIGN_32BYTES = 0x00600000,\r\n    IMAGE_SCN_ALIGN_64BYTES = 0x00700000,\r\n    IMAGE_SCN_ALIGN_128BYTES = 0x00800000,\r\n    IMAGE_SCN_ALIGN_256BYTES = 0x00900000,\r\n    IMAGE_SCN_ALIGN_512BYTES = 0x00A00000,\r\n    IMAGE_SCN_ALIGN_1024BYTES = 0x00B00000,\r\n    IMAGE_SCN_ALIGN_2048BYTES = 0x00C00000,\r\n    IMAGE_SCN_ALIGN_4096BYTES = 0x00D00000,\r\n    IMAGE_SCN_ALIGN_8192BYTES = 0x00E00000,\r\n\r\n    IMAGE_SCN_LNK_NRELOC_OVFL = 0x01000000,\r\n    IMAGE_SCN_MEM_DISCARDABLE = 0x02000000,\r\n    IMAGE_SCN_MEM_NOT_CACHED = 0x04000000,\r\n    IMAGE_SCN_MEM_NOT_PAGED = 0x08000000,\r\n    IMAGE_SCN_MEM_SHARED = 0x10000000,\r\n    IMAGE_SCN_MEM_EXECUTE = 0x20000000,\r\n    IMAGE_SCN_MEM_READ = 0x40000000,\r\n    IMAGE_SCN_MEM_WRITE = 0x80000000,\r\n\r\n    IMAGE_SCN_SCALE_INDEX = 0x00000001,\r\n}\r\n\r\n//\r\n// Metadata structures.\r\n//\r\n\r\nexport enum ComImageFlags {\r\n    COMIMAGE_FLAGS_ILONLY = 0x00000001,\r\n    COMIMAGE_FLAGS_32BITREQUIRED = 0x00000002,\r\n    COMIMAGE_FLAGS_IL_LIBRARY = 0x00000004,\r\n    COMIMAGE_FLAGS_STRONGNAMESIGNED = 0x00000008,\r\n    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 0x00000010,\r\n    COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x00010000,\r\n    COMIMAGE_FLAGS_32BITPREFERRED = 0x00020000,\r\n}\r\n\r\nexport const MetadataSignature = 0x424A5342;\r\n\r\nexport const enum MetadataStreamName {\r\n    Table = \"#~\",\r\n    Strings = \"#Strings\",\r\n    US = \"#US\",\r\n    GUID = \"#GUID\",\r\n    Blob = \"#Blob\",\r\n}\r\n\r\nexport const enum MetadataHeapSizeID {\r\n    String = 0,\r\n    GUID = 1,\r\n    Blob = 2,\r\n}\r\n\r\nexport enum MetadataTableIndex {\r\n    Module = 0x00,\r\n    TypeRef = 0x01,\r\n    TypeDef = 0x02,\r\n    FieldPtr = 0x03,\r\n    Field = 0x04,\r\n    MethodPtr = 0x05,\r\n    MethodDef = 0x06,\r\n    ParamPtr = 0x07,\r\n    Param = 0x08,\r\n    InterfaceImpl = 0x09,\r\n    MemberRef = 0x0A,\r\n    Constant = 0x0B,\r\n    CustomAttribute = 0x0C,\r\n    FieldMarshal = 0x0D,\r\n    DeclSecurity = 0x0E,\r\n    ClassLayout = 0x0F,\r\n    FieldLayout = 0x10,\r\n    StandAloneSig = 0x11,\r\n    EventMap = 0x12,\r\n    EventPtr = 0x13,\r\n    Event = 0x14,\r\n    PropertyMap = 0x15,\r\n    PropertyPtr = 0x16,\r\n    Property = 0x17,\r\n    MethodSemantics = 0x18,\r\n    MethodImpl = 0x19,\r\n    ModuleRef = 0x1A,\r\n    TypeSpec = 0x1B,\r\n    ImplMap = 0x1C,\r\n    FieldRVA = 0x1D,\r\n    ENCLog = 0x1E,\r\n    ENCMap = 0x1F,\r\n    Assembly = 0x20,\r\n    AssemblyProcessor = 0x21,\r\n    AssemblyOS = 0x22,\r\n    AssemblyRef = 0x23,\r\n    AssemblyRefProcessor = 0x24,\r\n    AssemblyRefOS = 0x25,\r\n    File = 0x26,\r\n    ExportedType = 0x27,\r\n    ManifestResource = 0x28,\r\n    NestedClass = 0x29,\r\n    GenericParam = 0x2A,\r\n    MethodSpec = 0x2B,\r\n    GenericParamConstraint = 0x2C,\r\n\r\n    String = 0x70,\r\n}\r\n\r\nexport const NumberOfMdTables = 45;\r\n\r\nexport enum MetadataCodedTokenIndex {\r\n    TypeDefOrRef = 0,\r\n    HasConstant = 1,\r\n    HasCustomAttribute = 2,\r\n    HasFieldMarshall = 3,\r\n    HasDeclSecurity = 4,\r\n    MemberRefParent = 5,\r\n    HasSemantics = 6,\r\n    MethodDefOrRef = 7,\r\n    MemberForwarded = 8,\r\n    Implementation = 9,\r\n    CustomAttributeType = 10,\r\n    ResolutionScope = 11,\r\n    TypeOrMethodDef = 12,\r\n}\r\n\r\nexport interface MetadataCodedTokenInfo {\r\n    tagSize: number;\r\n    tables: MetadataTableIndex[];\r\n}\r\n\r\nexport const ctc: MetadataCodedTokenInfo[] = [{\r\n    tagSize: 2, tables: [  // TypeDefOrRef\r\n        MetadataTableIndex.TypeDef,\r\n        MetadataTableIndex.TypeRef,\r\n        MetadataTableIndex.TypeSpec,\r\n    ]\r\n}, {\r\n    tagSize: 2, tables: [  // HasConstant\r\n        MetadataTableIndex.Field,\r\n        MetadataTableIndex.Param,\r\n        MetadataTableIndex.Property,\r\n    ]\r\n}, {\r\n    tagSize: 5, tables: [  // HasCustomAttribute\r\n        MetadataTableIndex.MethodDef,\r\n        MetadataTableIndex.Field,\r\n        MetadataTableIndex.TypeRef,\r\n        MetadataTableIndex.TypeDef,\r\n        MetadataTableIndex.Param,\r\n        MetadataTableIndex.InterfaceImpl,\r\n        MetadataTableIndex.MemberRef,\r\n        MetadataTableIndex.Module,\r\n        MetadataTableIndex.DeclSecurity,\r\n        MetadataTableIndex.Property,\r\n        MetadataTableIndex.Event,\r\n        MetadataTableIndex.StandAloneSig,\r\n        MetadataTableIndex.ModuleRef,\r\n        MetadataTableIndex.TypeSpec,\r\n        MetadataTableIndex.Assembly,\r\n        MetadataTableIndex.AssemblyRef,\r\n        MetadataTableIndex.File,\r\n        MetadataTableIndex.ExportedType,\r\n        MetadataTableIndex.ManifestResource,\r\n        MetadataTableIndex.GenericParam,\r\n        MetadataTableIndex.GenericParamConstraint,\r\n        MetadataTableIndex.MethodSpec,\r\n    ]\r\n}, {\r\n    tagSize: 1, tables: [  // HasFieldMarshall\r\n        MetadataTableIndex.Field,\r\n        MetadataTableIndex.Param,\r\n    ]\r\n}, {\r\n    tagSize: 2, tables: [  // HasDeclSecurity\r\n        MetadataTableIndex.TypeDef,\r\n        MetadataTableIndex.MethodDef,\r\n        MetadataTableIndex.Assembly,\r\n    ]\r\n}, {\r\n    tagSize: 3, tables: [  // MemberRefParent\r\n        MetadataTableIndex.TypeDef,\r\n        MetadataTableIndex.TypeRef,\r\n        MetadataTableIndex.ModuleRef,\r\n        MetadataTableIndex.MethodDef,\r\n        MetadataTableIndex.TypeSpec,\r\n    ]\r\n}, {\r\n    tagSize: 1, tables: [  // HasSemantics\r\n        MetadataTableIndex.Event,\r\n        MetadataTableIndex.Property,\r\n    ]\r\n}, {\r\n    tagSize: 1, tables: [  // MethodDefOrRef\r\n        MetadataTableIndex.MethodDef,\r\n        MetadataTableIndex.MemberRef,\r\n    ]\r\n}, {\r\n    tagSize: 1, tables: [  // MemberForwarded\r\n        MetadataTableIndex.Field,\r\n        MetadataTableIndex.MethodDef,\r\n    ]\r\n}, {\r\n    tagSize: 2, tables: [  // Implementation\r\n        MetadataTableIndex.File,\r\n        MetadataTableIndex.AssemblyRef,\r\n        MetadataTableIndex.ExportedType,\r\n    ]\r\n}, {\r\n    tagSize: 3, tables: [  // CustomAttributeType\r\n        MetadataTableIndex.TypeRef,\r\n        MetadataTableIndex.TypeDef,\r\n        MetadataTableIndex.MethodDef,\r\n        MetadataTableIndex.MemberRef,\r\n        MetadataTableIndex.String,\r\n    ]\r\n}, {\r\n    tagSize: 2, tables: [  // ResolutionScope\r\n        MetadataTableIndex.Module,\r\n        MetadataTableIndex.ModuleRef,\r\n        MetadataTableIndex.AssemblyRef,\r\n        MetadataTableIndex.TypeRef,\r\n    ]\r\n}, {\r\n    tagSize: 1, tables: [  // TypeOrMethodDef\r\n        MetadataTableIndex.TypeDef,\r\n        MetadataTableIndex.MethodDef,\r\n    ]\r\n}];\r\n\r\nexport enum AssemblyHashAlgorithm {\r\n    None = 0x0000,\r\n    MD5 = 0x8003,  // Reserved\r\n    SHA1 = 0x8004,\r\n}\r\n\r\nexport enum CorAssemblyFlags {\r\n    PublicKey = 0x0001,\r\n\r\n    pa__Mask = 0x0070,\r\n    pa_ProcessorArchitectureNone = 0x0000,\r\n    pa_ProcessorArchitectureMsil = 0x0010,\r\n    pa_ProcessorArchitectureX86 = 0x0020,\r\n    pa_ProcessorArchitectureIa64 = 0x0030,\r\n    pa_ProcessorArchitectureAmd64 = 0x0040,\r\n\r\n    ProcessorArchitectureSpecified = 0x0080,\r\n\r\n    EnableJitcompileTracking = 0x8000,\r\n    DisableJitcompileOptimizer = 0x4000,\r\n\r\n    Retargetable = 0x0100,\r\n}\r\n\r\nexport enum CorEventAttr {\r\n    SpecialName = 0x0200,\r\n    RtSpecialName = 0x0400,\r\n}\r\n\r\nexport enum CorFieldAttr {\r\n    fa__Mask = 0x0007,\r\n    fa_PrivateScope = 0x0000,\r\n    fa_Private = 0x0001,\r\n    fa_FamAndAssem = 0x0002,\r\n    fa_Assembly = 0x0003,\r\n    fa_Family = 0x0004,\r\n    fa_FamOrAssem = 0x0005,\r\n    fa_Public = 0x0006,\r\n\r\n    Static = 0x0010,\r\n    InitOnly = 0x0020,\r\n    Literal = 0x0040,\r\n    NotSerialized = 0x0080,\r\n\r\n    SpecialName = 0x0200,\r\n\r\n    PinvokeImpl = 0x2000,\r\n\r\n    RtSpecialName = 0x0400,\r\n    HasFieldMarshal = 0x1000,\r\n    HasDefault = 0x8000,\r\n    HasFieldRva = 0x0100,\r\n}\r\n\r\nexport enum CorFileFlags {\r\n    ContainsMetaData = 0x0000,\r\n    ContainsNoMetaData = 0x0001,\r\n}\r\n\r\nexport enum CorGenericParamAttr {\r\n    v__Mask = 0x0003,\r\n    v_NonVariant = 0x0000,\r\n    v_Covariant = 0x0001,\r\n    v_Contravariant = 0x0002,\r\n\r\n    NoSpecialConstraint = 0x0000,\r\n    ReferenceTypeConstraint = 0x0004,\r\n    NotNullableValueTypeConstraint = 0x0008,\r\n    DefaultConstructorConstraint = 0x0010,\r\n}\r\n\r\nexport enum CorPinvokeMap {\r\n    NoMangle = 0x0001,\r\n    cs__Mask = 0x0006,\r\n    cs_CharSetNotSpec = 0x0000,\r\n    cs_CharSetAnsi = 0x0002,\r\n    cs_CharSetUnicode = 0x0004,\r\n    cs_CharSetAuto = 0x0006,\r\n\r\n    bf__Mask = 0x0030,\r\n    bf_BestFitUseAssem = 0x0000,\r\n    bf_BestFitEnabled = 0x0010,\r\n    bf_BestFitDisabled = 0x0020,\r\n\r\n    touc__Mask = 0x3000,\r\n    touc_ThrowOnUnmappableCharUseAssem = 0x0000,\r\n    touc_ThrowOnUnmappableCharEnabled = 0x1000,\r\n    touc_ThrowOnUnmappableCharDisabled = 0x2000,\r\n\r\n    SupportsLastError = 0x0040,\r\n\r\n    cc__Mask = 0x0700,\r\n    cc_CallConvWinapi = 0x0100,\r\n    cc_CallConvCdecl = 0x0200,\r\n    cc_CallConvStdcall = 0x0300,\r\n    cc_CallConvThiscall = 0x0400,\r\n    cc_CallConvFastcall = 0x0500,\r\n}\r\n\r\nexport enum CorManifestResourceFlags {\r\n    v__Mask = 0x0007,\r\n    v_Public = 0x0001,\r\n    v_Private = 0x0002,\r\n}\r\n\r\nexport enum CorMethodAttr {\r\n    ma__Mask = 0x0007,\r\n    ma_PrivateScope = 0x0000,\r\n    ma_Private = 0x0001,\r\n    ma_FamAndAssem = 0x0002,\r\n    ma_Assem = 0x0003,\r\n    ma_Family = 0x0004,\r\n    ma_FamOrAssem = 0x0005,\r\n    ma_Public = 0x0006,\r\n\r\n    Static = 0x0010,\r\n    Final = 0x0020,\r\n    Virtual = 0x0040,\r\n    HideBySig = 0x0080,\r\n\r\n    vl__Mask = 0x0100,\r\n    vl_ReuseSlot = 0x0000,\r\n    vl_NewSlot = 0x0100,\r\n\r\n    CheckAccessOnOverride = 0x0200,\r\n    Abstract = 0x0400,\r\n    SpecialName = 0x0800,\r\n\r\n    PInvokeImpl = 0x2000,\r\n    UnmanagedExport = 0x0008,\r\n\r\n    RtSpecialName = 0x1000,\r\n    HasSecurity = 0x4000,\r\n    RequireSecObject = 0x8000,\r\n}\r\n\r\nexport enum CorMethodImpl {\r\n    ct__Mask = 0x0003,\r\n    ct_IL = 0x0000,\r\n    ct_Native = 0x0001,\r\n    ct_OptIL = 0x0002,\r\n    ct_Runtime = 0x0003,\r\n\r\n    m__Mask = 0x0004,\r\n    m_Unmanaged = 0x0004,\r\n    m_Managed = 0x0000,\r\n\r\n    ForwardRef = 0x0010,\r\n    PreserveSig = 0x0080,\r\n\r\n    InternalCall = 0x1000,\r\n\r\n    Synchronized = 0x0020,\r\n    NoInlining = 0x0008,\r\n}\r\n\r\nexport enum CorMethodSemanticsAttr {\r\n    Setter = 0x0001,\r\n    Getter = 0x0002,\r\n    Other = 0x0004,\r\n    AddOn = 0x0008,\r\n    RemoveOn = 0x0010,\r\n    Fire = 0x0020,\r\n}\r\n\r\nexport enum CorParamAttr {\r\n    In = 0x0001,\r\n    Out = 0x0002,\r\n    Optional = 0x0010,\r\n\r\n    HasDefault = 0x1000,\r\n    HasFieldMarshal = 0x2000,\r\n\r\n    Unused = 0xcfe0,\r\n}\r\n\r\nexport enum CorPropertyAttr {\r\n    SpecialName = 0x0200,\r\n\r\n    RtSpecialName = 0x0400,\r\n    HasDefault = 0x1000,\r\n\r\n    Unused = 0xe9ff,\r\n}\r\n\r\nexport enum CorTypeAttr {\r\n    v__Mask = 0x00000007,\r\n    v_NotPublic = 0x00000000,\r\n    v_Public = 0x00000001,\r\n    v_NestedPublic = 0x00000002,\r\n    v_NestedPrivate = 0x00000003,\r\n    v_NestedFamily = 0x00000004,\r\n    v_NestedAssembly = 0x00000005,\r\n    v_NestedFamAndAssem = 0x00000006,\r\n    v_NestedFamOrAssem = 0x00000007,\r\n\r\n    l__Mask = 0x00000018,\r\n    l_AutoLayout = 0x00000000,\r\n    l_SequentialLayout = 0x00000008,\r\n    l_ExplicitLayout = 0x00000010,\r\n\r\n    cs__Mask = 0x00000060,\r\n    cs_Class = 0x00000000,\r\n    cs_Interface = 0x00000020,\r\n\r\n    Abstract = 0x00000080,\r\n    Sealed = 0x00000100,\r\n    SpecialName = 0x00000400,\r\n\r\n    Import = 0x00001000,\r\n    Serializable = 0x00002000,\r\n    WindowsRuntime = 0x00004000,\r\n\r\n    sf__Mask = 0x00030000,\r\n    sf_AnsiClass = 0x00000000,\r\n    sf_UnicodeClass = 0x00010000,\r\n    sf_AutoClass = 0x00020000,\r\n    sf_CustomFormatClass = 0x00030000,\r\n    CustomFormatMask = 0x00C00000,\r\n\r\n    BeforeFieldInit = 0x00100000,\r\n    Forwarder = 0x00200000,\r\n\r\n    RtSpecialName = 0x00000800,\r\n    HasSecurity = 0x00040000,\r\n}\r\n\r\nexport enum CorDeclSecurity {\r\n    ActionNil = 0x0000,\r\n    Request = 0x0001,\r\n    Demand = 0x0002,\r\n    Assert = 0x0003,\r\n    Deny = 0x0004,\r\n    PermitOnly = 0x0005,\r\n    LinktimeCheck = 0x0006,\r\n    InheritanceCheck = 0x0007,\r\n    RequestMinimum = 0x0008,\r\n    RequestOptional = 0x0009,\r\n    RequestRefuse = 0x000a,\r\n    PrejitGrant = 0x000b,\r\n    PrejitDenied = 0x000c,\r\n    NonCasDemand = 0x000d,\r\n    NonCasLinkDemand = 0x000e,\r\n    NonCasInheritance = 0x000f,\r\n}\r\n\r\nexport enum CorElementType {\r\n    End = 0x00,\r\n    Void = 0x01,\r\n    Boolean = 0x02,\r\n    Char = 0x03,\r\n    I1 = 0x04,\r\n    U1 = 0x05,\r\n    I2 = 0x06,\r\n    U2 = 0x07,\r\n    I4 = 0x08,\r\n    U4 = 0x09,\r\n    I8 = 0x0A,\r\n    U8 = 0x0B,\r\n    R4 = 0x0C,\r\n    R8 = 0x0D,\r\n    String = 0x0E,\r\n\r\n    Ptr = 0x0F,\r\n    ByRef = 0x10,\r\n\r\n    ValueType = 0x11,\r\n    Class = 0x12,\r\n    Var = 0x13,\r\n    Array = 0x14,\r\n    GenericInst = 0x15,\r\n    TypedByRef = 0x16,\r\n\r\n    I = 0x18,\r\n    U = 0x19,\r\n    FnPtr = 0x1B,\r\n    Object = 0x1C,\r\n    SzArray = 0x1D,\r\n\r\n    MVar = 0x1E,\r\n\r\n    CModReqd = 0x1F,\r\n    CModOpt = 0x20,\r\n    Internal = 0x21,\r\n\r\n    Modifier = 0x40,\r\n    Sentinel = 0x01 | Modifier,\r\n    Pinned = 0x05 | Modifier,\r\n    R4HFA = 0x06 | Modifier,\r\n    R8HFA = 0x07 | Modifier,\r\n}\r\n","import * as S from \"../pe/structures\";\r\n\r\nexport function formatU1RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 2);\r\n}\r\n\r\nexport function formatU2RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 4);\r\n}\r\n\r\nexport function formatU4RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 8);\r\n}\r\n\r\nexport function formatU1Hex(d: number): string {\r\n    return `${formatU1RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU2Hex(d: number): string {\r\n    return `${formatU2RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU4Hex(d: number): string {\r\n    return `${formatU4RawHex(d)}h`;\r\n}\r\n\r\nexport function formatHexDec(d: number): string {\r\n    return `${d.toString(16).toUpperCase()}h (${d})`;\r\n}\r\n\r\nexport function formatDec(v: number): string {\r\n    return v.toLocaleString();\r\n}\r\n\r\nexport function formatBytes(bytes: Uint8Array, lineWidth: number = 16): string[] {\r\n    let lines: string[] = [];\r\n    for (let start = 0; start < bytes.length; start += lineWidth) {\r\n        const line = Array.from(bytes.subarray(start, start + lineWidth))\r\n            .map(b => formatU1RawHex(b)).join(\"-\");\r\n        lines.push(line);\r\n    }\r\n    return lines;\r\n}\r\n\r\nexport function formatStructTitle(s: S.FileData, title: string): string {\r\n    return `${title} [${formatU4Hex(s._offset)} - ${formatU4Hex(s._offset + s._size)} : ${formatHexDec(s._size)}]`;\r\n}\r\n\r\nexport function formatU1Field(name: string, f: S.U1Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 1, showDec);\r\n}\r\n\r\nexport function formatU2Field(name: string, f: S.U2Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 2, showDec);\r\n}\r\n\r\nexport function formatU4Field(name: string, f: S.U4Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 4, showDec);\r\n}\r\n\r\nexport function formatU8Field(name: string, f: S.U8Field, showDec?: boolean): W.StructItem {\r\n    let value = `${formatU4RawHex(f.high)} ${formatU4Hex(f.low)}`;\r\n\r\n    if (showDec && f.high < 0x1FFFFF) {\r\n        const long = f.high * 0x100000000 + f.low;\r\n        value += ` (${formatDec(long)})`;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value,\r\n    };\r\n}\r\n\r\nexport function formatCompressedUIntField(name: string, f: S.CompressedUIntField): W.StructItem {\r\n    return formatUIntField(name, f, f._size, true);\r\n}\r\n\r\nexport function formatBytesField(name: string, f: S.Field): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: \"\",\r\n    };\r\n}\r\n\r\nexport function formatStringField(name: string, f: S.StringField): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: `\"${f.value}\"`,\r\n    };\r\n}\r\n\r\nexport function formatGuidField(name: string, f: S.Field): W.StructItem {\r\n    const b = (n: number) => formatU1RawHex(f.data[n]);\r\n    const value = \"{\" + b(3) + b(2) + b(1) + b(0) + \"-\"\r\n        + b(5) + b(4) + \"-\" + b(7) + b(6) + \"-\" + b(8) + b(9) + \"-\"\r\n        + b(10) + b(11) + b(12) + b(13) + b(14) + b(15) + \"}\";\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value,\r\n    };\r\n}\r\n\r\nfunction padZeroLeft(str: string, len: number): string {\r\n    if (str.length < len) {\r\n        return \"0\".repeat(len - str.length) + str;\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n\r\nfunction formatUIntField(name: string, f: S.UIntField, sz: number, showDec?: boolean): W.StructItem {\r\n    let hex: string;\r\n    switch (sz) {\r\n        case 1: hex = formatU1Hex(f.value); break;\r\n        case 2: hex = formatU2Hex(f.value); break;\r\n        case 4: hex = formatU4Hex(f.value); break;\r\n        default: hex = f.value.toString(16).toUpperCase(); break;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: showDec ? `${hex} (${formatDec(f.value)})` : hex,\r\n    }\r\n}\r\n","export function calculatePadding(dataSize: number, align: number = 4): number {\n    const r = dataSize % align;\n    if (r == 0) {\n        return 0;\n    } else {\n        return align - r;\n    }\n}\n\nexport function count1(n: number) {\n    let c = 0;\n    for (let i = 0, mask = 1; i < 32; i++ , mask <<= 1) {\n        if (n & mask)\n            c++;\n    }\n    return c;\n}\n\nexport function isSetLong(high: number, low: number, bit: number): boolean {\n    return bit >= 0 && bit < 64 &&\n        (bit < 32 && ((low & (1 << bit)) != 0)) ||\n        (bit >= 32 && (high & (1 << (bit - 32))) != 0);\n}\n\nexport function decompressUint(data: Uint8Array): number {\n    if ((data[0] & 0x80) == 0 && data.buffer.byteLength == 1)\n        return data[0];\n    else if ((data[0] & 0xC0) == 0x80 && data.buffer.byteLength == 2)\n        return (data[0] & 0x3F) << 8 | data[1];\n    else if ((data[0] & 0xE0) == 0xC0 && data.buffer.byteLength == 4)\n        return (data[0] & 0x1F) << 24 | data[1] << 16 | data[2] << 8 | data[3];\n    else\n        throw new RangeError();\n}\n\nexport function decompressInt(data: Uint8Array): number {\n    const u = decompressUint(data);\n    if ((u & 0x00000001) == 0)\n        return (u >> 1);\n\n    const fb = data[0];\n    if ((fb & 0x80) == 0)\n        return (u >> 1) | 0xFFFFFFC0;\n    else if ((fb & 0xC0) == 0x80)\n        return (u >> 1) | 0xFFFFE000;\n    else if ((fb & 0xE0) == 0xC0)\n        return (u >> 1) | 0xF0000000;\n    else\n        throw new RangeError();\n}\n\nexport function getCompressedIntSize(firstByte: number): number {\n    if ((firstByte & 0xFFFFFF00) != 0)\n        throw new RangeError();\n    else if ((firstByte & 0x80) == 0)\n        return 1;\n    else if ((firstByte & 0xC0) == 0x80)\n        return 2;\n    else if ((firstByte & 0xE0) == 0xC0)\n        return 4;\n    else\n        throw new RangeError();\n}","import { PEImage } from \"../pe/image\";\r\nimport * as F from \"../pe/image-flags\";\r\n\r\nexport function generateNavList(pe: PEImage): W.NavData[] {\r\n    let navList: W.NavData[] = [generateHeadersNavData(pe)];\r\n\r\n    const navMD = generateMDHeadersNavData(pe);\r\n    if (navMD) navList.push(navMD);\r\n\r\n    return navList;\r\n}\r\n\r\nfunction generateHeadersNavData(pe: PEImage): W.NavData {\r\n    const pageID = W.PageID.HEADERS;\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.HEADERS },\r\n        children: [{\r\n            target: { pageID, title: W.KnownTitle.DOS_HEADER, elemID: W.KnownElemID.DOS_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.PE_SIGNATURE, elemID: W.KnownElemID.PE_SIGNATURE }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.FILE_HEADER, elemID: W.KnownElemID.FILE_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.OPTIONAL_HEADER, elemID: W.KnownElemID.OPTIONAL_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.DATA_DIRECTORIES, elemID: W.KnownElemID.DATA_DIRECTORIES }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.SECTION_HEADERS, elemID: W.KnownElemID.SECTION_HEADERS }\r\n        }]\r\n    };\r\n}\r\n\r\nfunction generateMDHeadersNavData(pe: PEImage): W.NavData | undefined {\r\n    const pageID = W.PageID.MD_HEADERS;\r\n\r\n    if (!pe.isManaged()) return undefined;\r\n\r\n    let children: W.NavData[] = [{\r\n        target: { pageID, title: W.KnownTitle.CLI_HEADER, elemID: W.KnownElemID.CLI_HEADER }\r\n    }];\r\n\r\n    if (pe.hasMetadata()) {\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.MD_ROOT, elemID: W.KnownElemID.MD_ROOT }\r\n        });\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.MDS_HEADERS, elemID: W.KnownElemID.MDS_HEADERS }\r\n        });\r\n    }\r\n\r\n    if (pe.hasStrongNameSignature()) {\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.SN_SIG, elemID: W.KnownElemID.SN_SIG }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.Strings)) {\r\n        children.push({\r\n            target: { pageID: W.PageID.MDS_STRINGS, title: W.KnownTitle.MDS_STRINGS, pageNum: 0 }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.US)) {\r\n        children.push({\r\n            target: { pageID: W.PageID.MDS_US, title: W.KnownTitle.MDS_US, pageNum: 0 }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.GUID)) {\r\n        children.push({\r\n            target: { pageID: W.PageID.MDS_GUID, title: W.KnownTitle.MDS_GUID, pageNum: 0 }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.Blob)) {\r\n        children.push({\r\n            target: { pageID: W.PageID.MDS_BLOB, title: W.KnownTitle.MDS_BLOB, pageNum: 0 }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.Table)) {\r\n        children.push(generateMDTablesNavData(pe));\r\n    }\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.MD_HEADERS },\r\n        children\r\n    };\r\n}\r\n\r\nfunction generateMDTablesNavData(pe: PEImage): W.NavData {\r\n    const pageID = W.PageID.MDS_TABLE;\r\n    const h = pe.getMetadataTableHeader();\r\n\r\n    let children: W.NavData[] = [];\r\n    const ti = F.MetadataTableIndex;\r\n    const buildMdtNav = (t: F.MetadataTableIndex) => ({\r\n        target: {\r\n            pageID: W.PageID.MDT_TBL,\r\n            title: `${ti[t]} (${pe.getMetadataTableRows(t)})`,\r\n            subID: ti[t],\r\n            pageNum: 0\r\n        }\r\n    } as W.NavData);\r\n\r\n    for (let tid = 0; tid < F.NumberOfMdTables; tid++) {\r\n        if (pe.isMetadataTableValid(tid)) {\r\n            children.push(buildMdtNav(tid));\r\n        }\r\n    }\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.MDS_TABLE },\r\n        children\r\n    };\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as U from \"../pe/utils\";\r\nimport * as FM from \"./formatter\";\r\nimport * as G from \"./generator\";\r\n\r\nexport function generateMdsStringsPageData(pe: PEImage,\r\n    cache: G.GeneratorCache, cfg: G.GeneratorConfig,\r\n    pgNum: number): W.PagedItemListPageData {\r\n\r\n    checkAndBuildCacheForMdsStrings(pe, cache, cfg);\r\n    const items = cache.mdsStrings && cache.mdsStrings.pages[pgNum];\r\n\r\n    const titleOf = (i: number) => `#String [${FM.formatHexDec(i)}]`;\r\n\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_STRINGS,\r\n            title: W.KnownTitle.MDS_STRINGS,\r\n        },\r\n        items: {\r\n            title: W.KnownTitle.MDS_STRINGS,\r\n            groups: [{\r\n                title: \"\",\r\n                items: items && items.map(index =>\r\n                    FM.formatStringField(titleOf(index), pe.getMdsStringsItem(index)!)\r\n                )\r\n            }]\r\n        },\r\n        paging: {\r\n            currentPageNumber: pgNum,\r\n            pageNavList: cache.mdsStrings!.pages.map((v, i) => ({\r\n                title: `Page [${i + 1}] (${titleOf(v[0])} - ${titleOf(v[v.length - 1])}})`,\r\n                pageID: W.PageID.MDS_STRINGS,\r\n                pageNum: i\r\n            }))\r\n        }\r\n    };\r\n}\r\n\r\nexport function generateMdsUSPageData(pe: PEImage,\r\n    cache: G.GeneratorCache, cfg: G.GeneratorConfig,\r\n    pgNum: number): W.PagedItemListPageData {\r\n\r\n    checkAndBuildCacheForMdsUS(pe, cache, cfg);\r\n    const items = cache.mdsUS && cache.mdsUS.pages[pgNum];\r\n\r\n    const titleOf = (i: number) => `#US [${FM.formatHexDec(i)}]`;\r\n\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_US,\r\n            title: W.KnownTitle.MDS_US,\r\n        },\r\n        items: {\r\n            title: W.KnownTitle.MDS_US,\r\n            groups: items && items.map(index => {\r\n                const item = pe.getMdsUSItem(index)!;\r\n                return {\r\n                    title: titleOf(index),\r\n                    items: [\r\n                        FM.formatCompressedUIntField(\"Size\", item.Size),\r\n                        FM.formatStringField(\"Value\", item.Value),\r\n                        FM.formatBytesField(\"Suffix\", item.Suffix),\r\n                    ]\r\n                }\r\n            })\r\n        },\r\n        paging: {\r\n            currentPageNumber: pgNum,\r\n            pageNavList: cache.mdsUS!.pages.map((v, i) => ({\r\n                title: `Page [${i + 1}] (${titleOf(v[0])} - ${titleOf(v[v.length - 1])}})`,\r\n                pageID: W.PageID.MDS_US,\r\n                pageNum: i\r\n            }))\r\n        }\r\n    };\r\n}\r\n\r\nexport function generateMdsBlobPageData(pe: PEImage,\r\n    cache: G.GeneratorCache, cfg: G.GeneratorConfig,\r\n    pgNum: number): W.PagedItemListPageData {\r\n\r\n    checkAndBuildCacheForMdsBlob(pe, cache, cfg);\r\n    const items = cache.mdsBlob && cache.mdsBlob.pages[pgNum];\r\n\r\n    const titleOf = (i: number) => `#Blob [${FM.formatHexDec(i)}]`;\r\n\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_BLOB,\r\n            title: W.KnownTitle.MDS_BLOB,\r\n        },\r\n        items: {\r\n            title: W.KnownTitle.MDS_BLOB,\r\n            groups: items && items.map(index => {\r\n                const item = pe.getMdsBlobItem(index)!;\r\n                return {\r\n                    title: titleOf(index),\r\n                    items: [\r\n                        FM.formatCompressedUIntField(\"Size\", item.Size),\r\n                        FM.formatBytesField(\"Value\", item.Value),\r\n                    ]\r\n                }\r\n            })\r\n        },\r\n        paging: {\r\n            currentPageNumber: pgNum,\r\n            pageNavList: cache.mdsBlob!.pages.map((v, i) => ({\r\n                title: `Page [${i + 1}] (${titleOf(v[0])} - ${titleOf(v[v.length - 1])}})`,\r\n                pageID: W.PageID.MDS_BLOB,\r\n                pageNum: i\r\n            }))\r\n        }\r\n    };\r\n}\r\n\r\nexport function generateMdsGuidPageData(pe: PEImage): W.PagedItemListPageData {\r\n    const titleOf = (i: number) => `#GUID[${FM.formatHexDec(i)}]`;\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_GUID,\r\n            title: W.KnownTitle.MDS_GUID,\r\n        },\r\n        items: {\r\n            title: W.KnownTitle.MDS_GUID,\r\n            groups: [{\r\n                title: \"\",\r\n                items: pe.getMdsGuidItems()!.items.map((v, i) =>\r\n                    FM.formatGuidField(titleOf(i + 1), v))\r\n            }]\r\n        },\r\n    };\r\n}\r\n\r\nfunction checkAndBuildCacheForMdsStrings(pe: PEImage, cache: G.GeneratorCache, cfg: G.GeneratorConfig): void {\r\n    if (cache.mdsStrings) return;\r\n\r\n    const mdRoot = pe.getMetadataRoot();\r\n    if (!mdRoot) return;\r\n\r\n    const sh = pe.getMetadataStreamHeader(F.MetadataStreamName.Strings);\r\n    if (!sh) return;\r\n\r\n    let indexes: number[] = [0];\r\n    const base = mdRoot._offset + sh.Offset.value;\r\n    for (let p = 1; p < sh.Size.value; p++) {\r\n        if (pe.getU1(base + p - 1) == 0) {\r\n            indexes.push(p);\r\n        }\r\n    }\r\n\r\n    cache.mdsStrings = {\r\n        pages: putIndexToPages(indexes, cfg.mdsOffsetListPageSize)\r\n    };\r\n}\r\n\r\nfunction checkAndBuildCacheForMdsUS(pe: PEImage, cache: G.GeneratorCache, cfg: G.GeneratorConfig): void {\r\n    if (cache.mdsUS) return;\r\n\r\n    const mdRoot = pe.getMetadataRoot();\r\n    if (!mdRoot) return;\r\n\r\n    const sh = pe.getMetadataStreamHeader(F.MetadataStreamName.US);\r\n    if (!sh) return;\r\n\r\n    const indexes = getBlobIndexes(pe, mdRoot._offset + sh.Offset.value, sh.Size.value);\r\n\r\n    cache.mdsUS = {\r\n        pages: putIndexToPages(indexes, cfg.mdsOffsetListPageSize)\r\n    };\r\n}\r\n\r\nfunction checkAndBuildCacheForMdsBlob(pe: PEImage, cache: G.GeneratorCache, cfg: G.GeneratorConfig): void {\r\n    if (cache.mdsBlob) return;\r\n\r\n    const mdRoot = pe.getMetadataRoot();\r\n    if (!mdRoot) return;\r\n\r\n    const sh = pe.getMetadataStreamHeader(F.MetadataStreamName.Blob);\r\n    if (!sh) return;\r\n\r\n    const indexes = getBlobIndexes(pe, mdRoot._offset + sh.Offset.value, sh.Size.value);\r\n\r\n    cache.mdsBlob = {\r\n        pages: putIndexToPages(indexes, cfg.mdsOffsetListPageSize)\r\n    };\r\n}\r\n\r\nfunction getBlobIndexes(pe: PEImage, base: number, size: number): number[] {\r\n    let indexes: number[] = [];\r\n    let p = 0;\r\n\r\n    while (p < size) {\r\n        indexes.push(p);\r\n        const dtsz = U.getCompressedIntSize(pe.getU1(base + p));\r\n        const szval = U.decompressUint(pe.getData(base + p, dtsz));\r\n        p += szval + dtsz;\r\n    }\r\n\r\n    return indexes;\r\n}\r\n\r\nfunction putIndexToPages(indexes: number[], pageSize: number): G.MdsOffsetListPageCache[] {\r\n    let pages: G.MdsOffsetListPageCache[] = [];\r\n    let pageItems: G.MdsOffsetListPageCache = [];\r\n\r\n    for (let pStart = 0, pEnd = 0; pStart < indexes.length; pStart = pEnd) {\r\n        while (indexes[pEnd] - indexes[pStart] < pageSize\r\n            && pEnd < indexes.length) {\r\n            pageItems.push(indexes[pEnd++]);\r\n        }\r\n        pages.push(pageItems.slice());\r\n        pageItems = [];\r\n    }\r\n\r\n    return pages;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as FM from \"./formatter\";\r\nimport * as G from \"./generator\";\r\n\r\nexport function generateMdsTablePageData(pe: PEImage): W.MdsTablePageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_TABLE,\r\n            title: W.KnownTitle.MDS_TABLE,\r\n        },\r\n        tableHeader: generateMDTableHeader(pe),\r\n        tableInfo: generateMDTableList(pe),\r\n    };\r\n}\r\n\r\nfunction generateMDTableHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.MDT_HEADER,\r\n        elemID: W.KnownElemID.MDT_HEADER,\r\n    };\r\n\r\n    const h = pe.getMetadataTableHeader();\r\n    if (!h) return s;\r\n\r\n    s.groups = [{\r\n        title: \"\",\r\n        items: [\r\n            FM.formatU4Field(\"Reserved\", h.Reserved),\r\n            FM.formatU1Field(\"MajorVersion\", h.MajorVersion, true),\r\n            FM.formatU1Field(\"MinorVersion\", h.MinorVersion, true),\r\n            FM.formatU1Field(\"HeapSizes\", h.HeapSizes),\r\n            FM.formatU1Field(\"Reserved2\", h.Reserved2),\r\n            FM.formatU8Field(\"Valid\", h.Valid),\r\n            FM.formatU8Field(\"Sorted\", h.Sorted),\r\n        ]\r\n    }, {\r\n        title: \"Rows\",\r\n        items: h.Rows.items.map((v, i) => FM.formatU4Field(`Rows[${i}]`, v, true))\r\n    }];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateMDTableList(pe: PEImage): W.MdTableInfo[] {\r\n    let s: W.MdTableInfo[] = [];\r\n    for (let id = 0; id < F.NumberOfMdTables; id++) {\r\n        s.push({\r\n            index: `${FM.formatU1Hex(id)} (${FM.formatDec(id)})`,\r\n            name: F.MetadataTableIndex[id],\r\n            valid: pe.isMetadataTableValid(id),\r\n            sorted: pe.isMetadataTableSorted(id),\r\n            rows: FM.formatDec(pe.getMetadataTableRows(id)),\r\n        });\r\n    }\r\n    return s;\r\n}\r\n\r\nexport function generateMdtPageData(\r\n    pe: PEImage,\r\n    tid: F.MetadataTableIndex,\r\n    cfg: G.GeneratorConfig,\r\n    pgNum: number): W.PagedItemListPageData {\r\n    const ti = F.MetadataTableIndex;\r\n    const title = ti[tid] + \" Table\";\r\n\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDT_TBL,\r\n            subID: ti[tid],\r\n            title,\r\n        },\r\n        items: generateTalbeItems(pe, tid, cfg, pgNum, title),\r\n        paging: generateMdtPaging(pe, tid, cfg, pgNum)\r\n    };\r\n}\r\n\r\nfunction generateTalbeItems(\r\n    pe: PEImage,\r\n    tid: F.MetadataTableIndex,\r\n    cfg: G.GeneratorConfig,\r\n    pgNum: number,\r\n    title: string): W.GroupedStruct {\r\n    const { start, end } = getRidOnPage(pe, tid, cfg, pgNum);\r\n\r\n    let loader: (rid: number) => S.FileData;\r\n    let builder: (item: S.FileData) => W.StructItem[];\r\n\r\n    switch (tid) {\r\n        case F.MetadataTableIndex.Module:\r\n            loader = pe.getMdtModuleItem.bind(pe);\r\n            builder = generateMdtModuleItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.TypeRef:\r\n            loader = pe.getMdtTypeRefItem.bind(pe);\r\n            builder = generateMdtTypeRefItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.TypeDef:\r\n            loader = pe.getMdtTypeDefItem.bind(pe);\r\n            builder = generateMdtTypeDefItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.FieldPtr:\r\n            loader = pe.getMdtFieldPtrItem.bind(pe);\r\n            builder = generateMdtFieldPtrItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.Field:\r\n            loader = pe.getMdtFieldItem.bind(pe);\r\n            builder = generateMdtFieldItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.MethodPtr:\r\n            loader = pe.getMdtMethodPtrItem.bind(pe);\r\n            builder = generateMdtMethodPtrItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.MethodDef:\r\n            loader = pe.getMdtMethodDefItem.bind(pe);\r\n            builder = generateMdtMethodDefItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ParamPtr:\r\n            loader = pe.getMdtParamPtrItem.bind(pe);\r\n            builder = generateMdtParamPtrItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.Param:\r\n            loader = pe.getMdtParamItem.bind(pe);\r\n            builder = generateMdtParamItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.InterfaceImpl:\r\n            loader = pe.getMdtInterfaceImplItem.bind(pe);\r\n            builder = generateMdtInterfaceImplItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.MemberRef:\r\n            loader = pe.getMdtMemberRefItem.bind(pe);\r\n            builder = generateMdtMemberRefItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.Constant:\r\n            loader = pe.getMdtConstantItem.bind(pe);\r\n            builder = generateMdtConstantItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.CustomAttribute:\r\n            loader = pe.getMdtCustomAttributeItem.bind(pe);\r\n            builder = generateMdtCustomAttributeItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.FieldMarshal:\r\n            loader = pe.getMdtFieldMarshalItem.bind(pe);\r\n            builder = generateMdtFieldMarshalItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.DeclSecurity:\r\n            loader = pe.getMdtDeclSecurityItem.bind(pe);\r\n            builder = generateMdtDeclSecurityItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ClassLayout:\r\n            loader = pe.getMdtClassLayoutItem.bind(pe);\r\n            builder = generateMdtClassLayoutItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.FieldLayout:\r\n            loader = pe.getMdtFieldLayoutItem.bind(pe);\r\n            builder = generateMdtFieldLayoutItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.StandAloneSig:\r\n            loader = pe.getMdtStandAloneSigItem.bind(pe);\r\n            builder = generateMdtStandAloneSigItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.EventMap:\r\n            loader = pe.getMdtEventMapItem.bind(pe);\r\n            builder = generateMdtEventMapItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.EventPtr:\r\n            loader = pe.getMdtEventPtrItem.bind(pe);\r\n            builder = generateMdtEventPtrItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.Event:\r\n            loader = pe.getMdtEventItem.bind(pe);\r\n            builder = generateMdtEventItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.PropertyMap:\r\n            loader = pe.getMdtPropertyMapItem.bind(pe);\r\n            builder = generateMdtPropertyMapItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.PropertyPtr:\r\n            loader = pe.getMdtPropertyPtrItem.bind(pe);\r\n            builder = generateMdtPropertyPtrItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.Property:\r\n            loader = pe.getMdtPropertyItem.bind(pe);\r\n            builder = generateMdtPropertyItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.MethodSemantics:\r\n            loader = pe.getMdtMethodSemanticsItem.bind(pe);\r\n            builder = generateMdtMethodSemanticsItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.MethodImpl:\r\n            loader = pe.getMdtMethodImplItem.bind(pe);\r\n            builder = generateMdtMethodImplItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ModuleRef:\r\n            loader = pe.getMdtModuleRefItem.bind(pe);\r\n            builder = generateMdtModuleRefItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.TypeSpec:\r\n            loader = pe.getMdtTypeSpecItem.bind(pe);\r\n            builder = generateMdtTypeSpecItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ImplMap:\r\n            loader = pe.getMdtImplMapItem.bind(pe);\r\n            builder = generateMdtImplMapItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.FieldRVA:\r\n            loader = pe.getMdtFieldRVAItem.bind(pe);\r\n            builder = generateMdtFieldRVAItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ENCLog:\r\n            loader = pe.getMdtENCLogItem.bind(pe);\r\n            builder = generateMdtENCLogItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ENCMap:\r\n            loader = pe.getMdtENCMapItem.bind(pe);\r\n            builder = generateMdtENCMapItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.Assembly:\r\n            loader = pe.getMdtAssemblyItem.bind(pe);\r\n            builder = generateMdtAssemblyItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.AssemblyProcessor:\r\n            loader = pe.getMdtAssemblyProcessorItem.bind(pe);\r\n            builder = generateMdtAssemblyProcessorItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.AssemblyOS:\r\n            loader = pe.getMdtAssemblyOSItem.bind(pe);\r\n            builder = generateMdtAssemblyOSItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.AssemblyRef:\r\n            loader = pe.getMdtAssemblyRefItem.bind(pe);\r\n            builder = generateMdtAssemblyRefItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.AssemblyRefProcessor:\r\n            loader = pe.getMdtAssemblyRefProcessorItem.bind(pe);\r\n            builder = generateMdtAssemblyRefProcessorItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.AssemblyRefOS:\r\n            loader = pe.getMdtAssemblyRefOSItem.bind(pe);\r\n            builder = generateMdtAssemblyRefOSItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.File:\r\n            loader = pe.getMdtFileItem.bind(pe);\r\n            builder = generateMdtFileItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ExportedType:\r\n            loader = pe.getMdtExportedTypeItem.bind(pe);\r\n            builder = generateMdtExportedTypeItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ManifestResource:\r\n            loader = pe.getMdtManifestResourceItem.bind(pe);\r\n            builder = generateMdtManifestResourceItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.NestedClass:\r\n            loader = pe.getMdtNestedClassItem.bind(pe);\r\n            builder = generateMdtNestedClassItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.GenericParam:\r\n            loader = pe.getMdtGenericParamItem.bind(pe);\r\n            builder = generateMdtGenericParamItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.MethodSpec:\r\n            loader = pe.getMdtMethodSpecItem.bind(pe);\r\n            builder = generateMdtMethodSpecItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.GenericParamConstraint:\r\n            loader = pe.getMdtGenericParamConstraintItem.bind(pe);\r\n            builder = generateMdtGenericParamConstraintItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        default:\r\n            return { title };\r\n    }\r\n\r\n    return generateSignleMdtTableItems(pe, tid, title, start, end, loader, builder);\r\n}\r\n\r\nfunction generateSignleMdtTableItems<T>(\r\n    pe: PEImage, tid: F.MetadataTableIndex, title: string, start: number, end: number,\r\n    loader: (rid: number) => T,\r\n    builder: (item: T) => W.StructItem[]): W.GroupedStruct {\r\n    let items: T[] = [];\r\n    for (let rid = start; rid <= end; rid++) {\r\n        items.push(loader(rid));\r\n    }\r\n\r\n    return {\r\n        title,\r\n        groups: items.map((v, i) => ({\r\n            title: `${F.MetadataTableIndex[tid]} [${FM.formatHexDec(start + i)}]`,\r\n            items: builder(v)\r\n        }))\r\n    };\r\n}\r\n\r\nfunction generateMdtModuleItems(item: S.MdtModuleItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU2Field(\"Generation\", item.Generation),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Mvid\", item.Mvid),\r\n        FM.formatU4Field(\"EncId\", item.EncId),\r\n        FM.formatU4Field(\"EncBaseId\", item.EncBaseId),\r\n    ];\r\n}\r\n\r\nfunction generateMdtTypeRefItems(item: S.MdtTypeRefItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"ResolutionScope\", item.ResolutionScope),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Namespace\", item.Namespace),\r\n    ];\r\n}\r\n\r\nfunction generateMdtTypeDefItems(item: S.MdtTypeDefItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Flags\", item.Flags),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Namespace\", item.Namespace),\r\n        FM.formatU4Field(\"Extends\", item.Extends),\r\n        FM.formatU4Field(\"FieldList\", item.FieldList),\r\n        FM.formatU4Field(\"MethodList\", item.MethodList),\r\n    ];\r\n}\r\n\r\nfunction generateMdtFieldPtrItems(item: S.MdtFieldPtrItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Field\", item.Field),\r\n    ];\r\n}\r\n\r\nfunction generateMdtFieldItems(item: S.MdtFieldItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Flags\", item.Flags),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Signature\", item.Signature),\r\n    ];\r\n}\r\n\r\nfunction generateMdtMethodPtrItems(item: S.MdtMethodPtrItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Method\", item.Method),\r\n    ];\r\n}\r\n\r\nfunction generateMdtMethodDefItems(item: S.MdtMethodDefItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"RVA\", item.RVA),\r\n        FM.formatU4Field(\"ImplFlags\", item.ImplFlags),\r\n        FM.formatU4Field(\"Flags\", item.Flags),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Signature\", item.Signature),\r\n        FM.formatU4Field(\"ParamList\", item.ParamList),\r\n    ];\r\n}\r\n\r\nfunction generateMdtParamPtrItems(item: S.MdtParamPtrItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Param\", item.Param),\r\n    ];\r\n}\r\n\r\nfunction generateMdtParamItems(item: S.MdtParamItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Flags\", item.Flags),\r\n        FM.formatU4Field(\"Sequence\", item.Sequence),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n    ];\r\n}\r\n\r\nfunction generateMdtInterfaceImplItems(item: S.MdtInterfaceImplItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Class\", item.Class),\r\n        FM.formatU4Field(\"Interface\", item.Interface),\r\n    ];\r\n}\r\n\r\nfunction generateMdtMemberRefItems(item: S.MdtMemberRefItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Class\", item.Class),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Signature\", item.Signature),\r\n    ];\r\n}\r\n\r\nfunction generateMdtConstantItems(item: S.MdtConstantItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Type\", item.Type),\r\n        FM.formatU4Field(\"PaddingZero\", item.PaddingZero),\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n        FM.formatU4Field(\"Value\", item.Value),\r\n    ];\r\n}\r\n\r\nfunction generateMdtCustomAttributeItems(item: S.MdtCustomAttributeItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n        FM.formatU4Field(\"Type\", item.Type),\r\n        FM.formatU4Field(\"Value\", item.Value),\r\n    ];\r\n}\r\n\r\nfunction generateMdtFieldMarshalItems(item: S.MdtFieldMarshalItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n        FM.formatU4Field(\"NativeType\", item.NativeType),\r\n    ];\r\n}\r\n\r\nfunction generateMdtDeclSecurityItems(item: S.MdtDeclSecurityItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Action\", item.Action),\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n        FM.formatU4Field(\"PermissionSet\", item.PermissionSet),\r\n    ];\r\n}\r\n\r\nfunction generateMdtClassLayoutItems(item: S.MdtClassLayoutItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"PackingSize\", item.PackingSize),\r\n        FM.formatU4Field(\"ClassSize\", item.ClassSize),\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n    ];\r\n}\r\n\r\nfunction generateMdtFieldLayoutItems(item: S.MdtFieldLayoutItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"OffSet\", item.OffSet),\r\n        FM.formatU4Field(\"Field\", item.Field),\r\n    ];\r\n}\r\n\r\nfunction generateMdtStandAloneSigItems(item: S.MdtStandAloneSigItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Signature\", item.Signature),\r\n    ];\r\n}\r\n\r\nfunction generateMdtEventMapItems(item: S.MdtEventMapItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n        FM.formatU4Field(\"EventList\", item.EventList),\r\n    ];\r\n}\r\n\r\nfunction generateMdtEventPtrItems(item: S.MdtEventPtrItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Generation\", item.Event),\r\n    ];\r\n}\r\n\r\nfunction generateMdtEventItems(item: S.MdtEventItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"EventFlags\", item.EventFlags),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"EventType\", item.EventType),\r\n    ];\r\n}\r\n\r\nfunction generateMdtPropertyMapItems(item: S.MdtPropertyMapItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n        FM.formatU4Field(\"PropertyList\", item.PropertyList),\r\n    ];\r\n}\r\n\r\nfunction generateMdtPropertyPtrItems(item: S.MdtPropertyPtrItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Property\", item.Property),\r\n    ];\r\n}\r\n\r\nfunction generateMdtPropertyItems(item: S.MdtPropertyItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"PropFlags\", item.PropFlags),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Type\", item.Type),\r\n    ];\r\n}\r\n\r\nfunction generateMdtMethodSemanticsItems(item: S.MdtMethodSemanticsItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Semantic\", item.Semantic),\r\n        FM.formatU4Field(\"Method\", item.Method),\r\n        FM.formatU4Field(\"Association\", item.Association),\r\n    ];\r\n}\r\n\r\nfunction generateMdtMethodImplItems(item: S.MdtMethodImplItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Class\", item.Class),\r\n        FM.formatU4Field(\"MethodBody\", item.MethodBody),\r\n        FM.formatU4Field(\"MethodDeclaration\", item.MethodDeclaration),\r\n    ];\r\n}\r\n\r\nfunction generateMdtModuleRefItems(item: S.MdtModuleRefItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n    ];\r\n}\r\n\r\nfunction generateMdtTypeSpecItems(item: S.MdtTypeSpecItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Signature\", item.Signature),\r\n    ];\r\n}\r\n\r\nfunction generateMdtImplMapItems(item: S.MdtImplMapItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"MappingFlags\", item.MappingFlags),\r\n        FM.formatU4Field(\"MemberForwarded\", item.MemberForwarded),\r\n        FM.formatU4Field(\"ImportName\", item.ImportName),\r\n        FM.formatU4Field(\"ImportScope\", item.ImportScope),\r\n    ];\r\n}\r\n\r\nfunction generateMdtFieldRVAItems(item: S.MdtFieldRVAItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"RVA\", item.RVA),\r\n        FM.formatU4Field(\"Field\", item.Field),\r\n    ];\r\n}\r\n\r\nfunction generateMdtENCLogItems(item: S.MdtENCLogItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Token\", item.Token),\r\n        FM.formatU4Field(\"FuncCode\", item.FuncCode),\r\n    ];\r\n}\r\n\r\nfunction generateMdtENCMapItems(item: S.MdtENCMapItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Token\", item.Token),\r\n    ];\r\n}\r\n\r\nfunction generateMdtAssemblyItems(item: S.MdtAssemblyItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"HashAlgId\", item.HashAlgId),\r\n        FM.formatU4Field(\"MajorVersion\", item.MajorVersion),\r\n        FM.formatU4Field(\"MinorVersion\", item.MinorVersion),\r\n        FM.formatU4Field(\"BuildNumber\", item.BuildNumber),\r\n        FM.formatU4Field(\"RevisionNumber\", item.RevisionNumber),\r\n        FM.formatU4Field(\"Flags\", item.Flags),\r\n        FM.formatU4Field(\"PublicKey\", item.PublicKey),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Locale\", item.Locale),\r\n    ];\r\n}\r\n\r\nfunction generateMdtAssemblyProcessorItems(item: S.MdtAssemblyProcessorItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Processor\", item.Processor),\r\n    ];\r\n}\r\n\r\nfunction generateMdtAssemblyOSItems(item: S.MdtAssemblyOSItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"OSPlatformID\", item.OSPlatformID),\r\n        FM.formatU4Field(\"OSMajorVersion\", item.OSMajorVersion),\r\n        FM.formatU4Field(\"OSMinorVersion\", item.OSMinorVersion),\r\n    ];\r\n}\r\n\r\nfunction generateMdtAssemblyRefItems(item: S.MdtAssemblyRefItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"MajorVersion\", item.MajorVersion),\r\n        FM.formatU4Field(\"MinorVersion\", item.MinorVersion),\r\n        FM.formatU4Field(\"BuildNumber\", item.BuildNumber),\r\n        FM.formatU4Field(\"RevisionNumber\", item.RevisionNumber),\r\n        FM.formatU4Field(\"Flags\", item.Flags),\r\n        FM.formatU4Field(\"PublicKeyOrToken\", item.PublicKeyOrToken),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Locale\", item.Locale),\r\n        FM.formatU4Field(\"HashValue\", item.HashValue),\r\n    ];\r\n}\r\n\r\nfunction generateMdtAssemblyRefProcessorItems(item: S.MdtAssemblyRefProcessorItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Processor\", item.Processor),\r\n        FM.formatU4Field(\"AssemblyRef\", item.AssemblyRef),\r\n    ];\r\n}\r\n\r\nfunction generateMdtAssemblyRefOSItems(item: S.MdtAssemblyRefOSItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"OSPlatformID\", item.OSPlatformID),\r\n        FM.formatU4Field(\"OSMajorVersion\", item.OSMajorVersion),\r\n        FM.formatU4Field(\"OSMinorVersion\", item.OSMinorVersion),\r\n        FM.formatU4Field(\"AssemblyRef\", item.AssemblyRef),\r\n    ];\r\n}\r\n\r\nfunction generateMdtFileItems(item: S.MdtFileItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Flags\", item.Flags),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"HashValue\", item.HashValue),\r\n    ];\r\n}\r\n\r\nfunction generateMdtExportedTypeItems(item: S.MdtExportedTypeItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Flags\", item.Flags),\r\n        FM.formatU4Field(\"TypeDefId\", item.TypeDefId),\r\n        FM.formatU4Field(\"TypeName\", item.TypeName),\r\n        FM.formatU4Field(\"TypeNamespace\", item.TypeNamespace),\r\n        FM.formatU4Field(\"Implementation\", item.Implementation),\r\n    ];\r\n}\r\n\r\nfunction generateMdtManifestResourceItems(item: S.MdtManifestResourceItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Offset\", item.Offset),\r\n        FM.formatU4Field(\"Flags\", item.Flags),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Implementation\", item.Implementation),\r\n    ];\r\n}\r\n\r\nfunction generateMdtNestedClassItems(item: S.MdtNestedClassItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"NestedClass\", item.NestedClass),\r\n        FM.formatU4Field(\"EnclosingClass\", item.EnclosingClass),\r\n    ];\r\n}\r\n\r\nfunction generateMdtGenericParamItems(item: S.MdtGenericParamItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Number\", item.Number),\r\n        FM.formatU4Field(\"Flags\", item.Flags),\r\n        FM.formatU4Field(\"Owner\", item.Owner),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n    ];\r\n}\r\n\r\nfunction generateMdtMethodSpecItems(item: S.MdtMethodSpecItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Method\", item.Method),\r\n        FM.formatU4Field(\"Instantiation\", item.Instantiation),\r\n    ];\r\n}\r\n\r\nfunction generateMdtGenericParamConstraintItems(item: S.MdtGenericParamConstraintItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Owner\", item.Owner),\r\n        FM.formatU4Field(\"Constraint\", item.Constraint),\r\n    ];\r\n}\r\n\r\nfunction generateMdtPaging(\r\n    pe: PEImage,\r\n    tid: F.MetadataTableIndex,\r\n    cfg: G.GeneratorConfig,\r\n    pgNum: number): W.Paging {\r\n    const paging: W.Paging = {\r\n        currentPageNumber: pgNum,\r\n        pageNavList: []\r\n    };\r\n\r\n    const psz = cfg.mdtPageSize;\r\n    const rows = pe.getMetadataTableRows(tid);\r\n    const pages = Math.floor((rows + psz - 1) / psz);\r\n    for (let p = 0; p < pages; p++) {\r\n        const tblName = F.MetadataTableIndex[tid];\r\n        const titleOf = (r: number) => `${tblName}[${FM.formatHexDec(r)}]`;\r\n        const { start, end } = getRidOnPage(pe, tid, cfg, p);\r\n        const target: W.NavTarget = {\r\n            title: `Page[${p + 1}] (${titleOf(start)} - ${titleOf(end)})`,\r\n            pageID: W.PageID.MDT_TBL,\r\n            subID: tblName,\r\n            pageNum: p,\r\n        };\r\n        paging.pageNavList.push(target);\r\n    }\r\n\r\n    return paging;\r\n}\r\n\r\nfunction getRidOnPage(\r\n    pe: PEImage,\r\n    tid: F.MetadataTableIndex,\r\n    cfg: G.GeneratorConfig,\r\n    pgNum: number): { start: number, end: number } {\r\n    const psz = cfg.mdtPageSize;\r\n    const rows = pe.getMetadataTableRows(tid);\r\n    const start = pgNum * psz + 1;\r\n    let end = start + psz - 1;\r\n    if (end > rows) end = rows;\r\n    return { start, end };\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateMetadataHeadersPageData(pe: PEImage): W.MetadataHeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MD_HEADERS,\r\n            title: W.KnownTitle.MD_HEADERS,\r\n        },\r\n        cliHeader: generateCliHeader(pe),\r\n        metadataRoot: generateMetadataRoot(pe),\r\n        streamHeaders: generateMetadataStreamHeader(pe),\r\n        snSignature: generateSNSignature(pe),\r\n    };\r\n}\r\n\r\nfunction generateCliHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.CLI_HEADER,\r\n        elemID: W.KnownElemID.CLI_HEADER,\r\n    };\r\n\r\n    const h = pe.getCliHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"cb\", h.cb, true),\r\n        FM.formatU2Field(\"MajorRuntimeVersion\", h.MajorRuntimeVersion, true),\r\n        FM.formatU2Field(\"MinorRuntimeVersion\", h.MinorRuntimeVersion, true),\r\n        FM.formatU4Field(\"MetaData.VirtualAddress\", h.MetaData.VirtualAddress),\r\n        FM.formatU4Field(\"MetaData.Size\", h.MetaData.Size, true),\r\n        FM.formatU4Field(\"Flags\", h.Flags),\r\n        FM.formatU4Field(\"EntryPointToken\", h.EntryPointToken),\r\n        FM.formatU4Field(\"Resources.VirtualAddress\", h.Resources.VirtualAddress),\r\n        FM.formatU4Field(\"Resources.Size\", h.Resources.Size, true),\r\n        FM.formatU4Field(\"StrongNameSignature.VirtualAddress\", h.StrongNameSignature.VirtualAddress),\r\n        FM.formatU4Field(\"StrongNameSignature.Size\", h.StrongNameSignature.Size, true),\r\n        FM.formatU4Field(\"CodeManagerTable.VirtualAddress\", h.CodeManagerTable.VirtualAddress),\r\n        FM.formatU4Field(\"CodeManagerTable.Size\", h.CodeManagerTable.Size, true),\r\n        FM.formatU4Field(\"VTableFixups.VirtualAddress\", h.VTableFixups.VirtualAddress),\r\n        FM.formatU4Field(\"VTableFixups.Size\", h.VTableFixups.Size, true),\r\n        FM.formatU4Field(\"ExportAddressTableJumps.VirtualAddress\", h.ExportAddressTableJumps.VirtualAddress),\r\n        FM.formatU4Field(\"ExportAddressTableJumps.Size\", h.ExportAddressTableJumps.Size, true),\r\n        FM.formatU4Field(\"ManagedNativeHeader.VirtualAddress\", h.ManagedNativeHeader.VirtualAddress),\r\n        FM.formatU4Field(\"ManagedNativeHeader.Size\", h.ManagedNativeHeader.Size, true),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSNSignature(pe: PEImage): W.SimpleStruct | undefined {\r\n    const d = pe.getStrongNameSignature();\r\n    if (!d) return undefined;\r\n\r\n    const s: W.SimpleStruct = {\r\n        title: W.KnownTitle.SN_SIG,\r\n        elemID: W.KnownElemID.SN_SIG,\r\n        items: [FM.formatBytesField(\"Signature\", d)]\r\n    };\r\n    return s;\r\n}\r\n\r\nfunction generateMetadataRoot(pe: PEImage): W.SimpleStruct | undefined {\r\n    const h = pe.getMetadataRoot();\r\n    if (!h) return undefined;\r\n\r\n    const s: W.SimpleStruct = {\r\n        title: W.KnownTitle.MD_ROOT,\r\n        elemID: W.KnownElemID.MD_ROOT,\r\n        items: [\r\n            FM.formatU4Field(\"Signature\", h.Signature),\r\n            FM.formatU2Field(\"MajorVersion\", h.MajorVersion, true),\r\n            FM.formatU2Field(\"MinorVersion\", h.MinorVersion, true),\r\n            FM.formatU4Field(\"Reserved\", h.Reserved),\r\n            FM.formatU4Field(\"VersionLength\", h.VersionLength, true),\r\n            FM.formatStringField(\"VersionString\", h.VersionString),\r\n            FM.formatBytesField(\"VersionPadding\", h.VersionPadding),\r\n            FM.formatU2Field(\"Flags\", h.Flags),\r\n            FM.formatU2Field(\"Streams\", h.Streams, true),\r\n        ]\r\n    };\r\n    return s;\r\n}\r\n\r\nfunction generateMetadataStreamHeader(pe: PEImage): W.GroupedStruct | undefined {\r\n    const h = pe.getMetadataStreamHeaders();\r\n    if (!h) return undefined;\r\n\r\n    const s: W.GroupedStruct = {\r\n        title: W.KnownTitle.MDS_HEADERS,\r\n        elemID: W.KnownElemID.MDS_HEADERS,\r\n        groups: h.items.map((v, i) => ({\r\n            title: `[${i}] (${v.Name.value})`,\r\n            items: [\r\n                FM.formatU4Field(\"Offset\", v.Offset),\r\n                FM.formatU4Field(\"Size\", v.Size, true),\r\n                FM.formatStringField(\"Name\", v.Name),\r\n                FM.formatBytesField(\"Padding\", v.Padding),\r\n            ]\r\n        }))\r\n    };\r\n    return s;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateHeadersPageData(pe: PEImage): W.HeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.HEADERS,\r\n            title: W.KnownTitle.HEADERS,\r\n        },\r\n        dosHeader: generateDosHeader(pe),\r\n        peSignature: generatePESignature(pe),\r\n        fileHeader: generateFileHeader(pe),\r\n        optionalHeader: generateOptionalHeader(pe),\r\n        dataDirectories: generateDataDirectories(pe),\r\n        sectionHeaders: generateSectionHeaders(pe),\r\n    };\r\n}\r\n\r\nfunction generateDosHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.DOS_HEADER,\r\n        elemID: W.KnownElemID.DOS_HEADER,\r\n    };\r\n\r\n    const h = pe.getDosHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"e_magic\", h.e_magic),\r\n        FM.formatU2Field(\"e_cblp\", h.e_cblp),\r\n        FM.formatU2Field(\"e_cp\", h.e_cp),\r\n        FM.formatU2Field(\"e_crlc\", h.e_crlc),\r\n        FM.formatU2Field(\"e_cparhdr\", h.e_cparhdr),\r\n        FM.formatU2Field(\"e_minalloc\", h.e_minalloc),\r\n        FM.formatU2Field(\"e_maxalloc\", h.e_maxalloc),\r\n        FM.formatU2Field(\"e_ss\", h.e_ss),\r\n        FM.formatU2Field(\"e_sp\", h.e_sp),\r\n        FM.formatU2Field(\"e_csum\", h.e_csum),\r\n        FM.formatU2Field(\"e_ip\", h.e_ip),\r\n        FM.formatU2Field(\"e_cs\", h.e_cs),\r\n        FM.formatU2Field(\"e_lfarlc\", h.e_lfarlc),\r\n        FM.formatU2Field(\"e_ovno\", h.e_ovno),\r\n        FM.formatBytesField(\"e_res\", h.e_res),\r\n        FM.formatU2Field(\"e_oemid\", h.e_oemid),\r\n        FM.formatU2Field(\"e_oeminfo\", h.e_oeminfo),\r\n        FM.formatBytesField(\"e_res2\", h.e_res2),\r\n        FM.formatU4Field(\"e_lfanew\", h.e_lfanew),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generatePESignature(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.PE_SIGNATURE,\r\n        elemID: W.KnownElemID.PE_SIGNATURE,\r\n    };\r\n\r\n    const h = pe.getPESignature();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"PE Signature\", h),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateFileHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.FILE_HEADER,\r\n        elemID: W.KnownElemID.FILE_HEADER,\r\n    };\r\n\r\n    const h = pe.getFileHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"Machine\", h.Machine),\r\n        FM.formatU2Field(\"NumberOfSections\", h.NumberOfSections, true),\r\n        FM.formatU4Field(\"TimeDateStamp\", h.TimeDateStamp),\r\n        FM.formatU4Field(\"PointerToSymbolTable\", h.PointerToSymbolTable),\r\n        FM.formatU4Field(\"NumberOfSymbols\", h.NumberOfSymbols, true),\r\n        FM.formatU2Field(\"SizeOfOptionalHeader\", h.SizeOfOptionalHeader, true),\r\n        FM.formatU2Field(\"Characteristics\", h.Characteristics),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateOptionalHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.OPTIONAL_HEADER,\r\n        elemID: W.KnownElemID.OPTIONAL_HEADER,\r\n    };\r\n\r\n    const h = pe.getOptionalHeader();\r\n    if (!h) return s;\r\n\r\n    switch (h.Magic.value) {\r\n        case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n            s.title += \" (32-bit)\";\r\n            fillOptionalHeader32Fields(s, <S.ImageOptionalHeader32>h);\r\n            break;\r\n\r\n        case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n            s.title += \" (64-bit)\";\r\n            fillOptionalHeader64Fields(s, <S.ImageOptionalHeader64>h);\r\n            break;\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nfunction fillOptionalHeader32Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader32): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n            FM.formatU4Field(\"BaseOfData\", h.BaseOfData),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU4Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU4Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU4Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU4Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU4Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction fillOptionalHeader64Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader64): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU8Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU8Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU8Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU8Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU8Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction generateDataDirectories(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.DATA_DIRECTORIES,\r\n        elemID: W.KnownElemID.DATA_DIRECTORIES,\r\n    };\r\n\r\n    const h = pe.getDataDirectories();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] ${F.ImageDirectoryEntry[i] || \"\"}`,\r\n        items: [\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"Size\", v.Size, true),\r\n        ]\r\n    } as W.SimpleStruct));\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSectionHeaders(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.SECTION_HEADERS,\r\n        elemID: W.KnownElemID.SECTION_HEADERS,\r\n    };\r\n\r\n    const h = pe.getSectionHeaders();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] (${v.Name.value})`,\r\n        items: [\r\n            FM.formatStringField(\"Name\", v.Name),\r\n            FM.formatU4Field(\"VirtualSize\", v.VirtualSize, true),\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"SizeOfRawData\", v.SizeOfRawData, true),\r\n            FM.formatU4Field(\"PointerToRawData\", v.PointerToRawData),\r\n            FM.formatU4Field(\"PointerToRelocations\", v.PointerToRelocations),\r\n            FM.formatU4Field(\"PointerToLinenumbers\", v.PointerToLinenumbers),\r\n            FM.formatU2Field(\"NumberOfRelocations\", v.NumberOfRelocations, true),\r\n            FM.formatU2Field(\"NumberOfLinenumbers\", v.NumberOfLinenumbers, true),\r\n            FM.formatU4Field(\"Characteristics\", v.Characteristics),\r\n        ]\r\n    }));\r\n\r\n    return s;\r\n}\r\n","import { PEImage } from \"../pe/image\";\r\nimport * as F from \"../pe/image-flags\";\r\n\r\nimport { generateHeadersPageData } from \"./headers\";\r\nimport { generateMetadataHeadersPageData } from \"./metadata-headers\";\r\nimport { generateMdsTablePageData, generateMdtPageData } from \"./mds-table\";\r\nimport {\r\n    generateMdsStringsPageData,\r\n    generateMdsUSPageData,\r\n    generateMdsGuidPageData,\r\n    generateMdsBlobPageData\r\n} from \"./mds-list\";\r\n\r\nexport function generatePageData(pe: PEImage, pageID: W.PageID, subID?: string, pageNum?: number): W.PageData {\r\n    switch (pageID) {\r\n        case W.PageID.HEADERS: return generateHeadersPageData(pe);\r\n        case W.PageID.MD_HEADERS: return generateMetadataHeadersPageData(pe);\r\n        case W.PageID.MDS_TABLE: return generateMdsTablePageData(pe);\r\n        case W.PageID.MDS_STRINGS: return generateMdsStringsPageData(pe, cache, cfg, pageNum || 0);\r\n        case W.PageID.MDS_US: return generateMdsUSPageData(pe, cache, cfg, pageNum || 0);\r\n        case W.PageID.MDS_GUID: return generateMdsGuidPageData(pe);\r\n        case W.PageID.MDS_BLOB: return generateMdsBlobPageData(pe, cache, cfg, pageNum || 0);\r\n        case W.PageID.MDT_TBL: {\r\n            const tid = F.MetadataTableIndex[subID! as any] as any as F.MetadataTableIndex;\r\n            return generateMdtPageData(pe, tid, cfg, pageNum || 0);\r\n        }\r\n        default: return { nav: { pageID: W.PageID.NOTFOUND, title: W.KnownTitle.NOTFOUND } };\r\n    }\r\n}\r\n\r\nexport interface GeneratorCache {\r\n    mdsStrings?: MdsOffsetListCache;\r\n    mdsUS?: MdsOffsetListCache;\r\n    mdsBlob?: MdsOffsetListCache;\r\n}\r\n\r\nexport type MdsOffsetListCache = {\r\n    pages: MdsOffsetListPageCache[];\r\n}\r\n\r\nexport type MdsOffsetListPageCache = number[];\r\n\r\nexport function clearGeneratorCache(): void {\r\n    cache = {};\r\n}\r\n\r\nexport interface GeneratorConfig {\r\n    mdsOffsetListPageSize: number;  // Total bytes per page.\r\n    mdtPageSize: number;  // Total items per page.\r\n}\r\n\r\nlet cache: GeneratorCache = {};\r\n\r\nconst cfg: GeneratorConfig = {\r\n    mdsOffsetListPageSize: 4000,\r\n    mdtPageSize: 100,\r\n}\r\n","export const enum PEErrorType {\r\n    INVALID_DATA_POSITION = \"INVALID_DATA_POSITION\",\r\n    INVALID_DOS_SIGNATURE = \"INVALID_DOS_SIGNATURE\",\r\n    INVALID_PE_SIGNATURE = \"INVALID_PE_SIGNATURE\",\r\n    INVALID_OPTIONAL_HEADER_MAGIC = \"INVALID_OPTIONAL_HEADER_MAGIC\",\r\n    INVALID_DATA_DIRECTORY_COUNT = \"INVALID_DATA_DIRECTORY_COUNT\",\r\n}\r\n\r\nexport class PEError extends Error {\r\n    constructor(\r\n        public type: PEErrorType,\r\n        public offset?: number,\r\n        public size?: number\r\n    ) {\r\n        super(type);\r\n    }\r\n}\r\n","import * as S from \"./structures\";\r\nimport * as F from \"./image-flags\";\r\nimport * as U from \"./utils\";\r\n\r\nexport interface FileDataProvider {\r\n    getU1(p: number): number;\r\n    getU2(p: number): number;\r\n    getU4(p: number): number;\r\n    getData(p: number, sz: number): Uint8Array;\r\n}\r\n\r\nexport interface MetadataSizingProvider {\r\n    getHeapSize(heap: F.MetadataHeapSizeID): number;\r\n    getTableIDSize(t: F.MetadataTableIndex): number;\r\n    getCodedTokenSize(t: F.MetadataCodedTokenIndex): number;\r\n}\r\n\r\n//\r\n// Basic structures.\r\n//\r\n\r\nexport function loadU1Field(d: FileDataProvider, p: number): S.U1Field {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p)\r\n    };\r\n}\r\n\r\nexport function loadU2Field(d: FileDataProvider, p: number): S.U2Field {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p)\r\n    };\r\n}\r\n\r\nexport function loadU4Field(d: FileDataProvider, p: number): S.U4Field {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p)\r\n    };\r\n}\r\n\r\nexport function loadU8Field(d: FileDataProvider, p: number): S.U8Field {\r\n    const low = d.getU4(p);\r\n    const high = d.getU4(p + 4);\r\n\r\n    return {\r\n        _offset: p, _size: 8, data: d.getData(p, 8), low, high\r\n    };\r\n}\r\n\r\nexport function loadCompressedUIntField(d: FileDataProvider, p: number): S.CompressedUIntField {\r\n    const sz = U.getCompressedIntSize(d.getU1(p));\r\n    const data = new Uint8Array(d.getData(p, sz));\r\n    const value = U.decompressUint(data);\r\n\r\n    return { _offset: p, _size: sz, data, value };\r\n}\r\n\r\nexport function loadU1EnumField<T>(d: FileDataProvider, p: number): S.U1EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU2EnumField<T>(d: FileDataProvider, p: number): S.U2EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU4EnumField<T>(d: FileDataProvider, p: number): S.U4EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeByteArrayField(d: FileDataProvider, p: number, sz: number): S.Field {\r\n    return {\r\n        _offset: p, _size: sz, data: d.getData(p, sz)\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeAsciiStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const value = String.fromCharCode.apply(null, Array.from(data).filter(v => v != 0));\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadNullTerminatedStringField(d: FileDataProvider, p: number): S.StringField {\r\n    let bytes: number[] = [];\r\n    let ptr = p;\r\n    let b: number;\r\n\r\n    do {\r\n        b = d.getU1(ptr++);\r\n        bytes.push(b);\r\n    } while (b != 0);\r\n    const str = bytes.slice(0, bytes.length - 1).map(v => `%${v.toString(16)}`).join(\"\");\r\n    const value = decodeURIComponent(str);\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p, data: Uint8Array.from(bytes), value\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeUnicodeStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const arr = new Uint16Array(data.buffer);\r\n    const value = String.fromCodePoint.apply(null, arr);\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadStructArrayByCount<T extends S.FileData>(\r\n    d: FileDataProvider,\r\n    p: number,\r\n    loader: (d: FileDataProvider, p: number) => T,\r\n    count: number): S.StructArray<T> {\r\n\r\n    let items: T[] = [];\r\n    let ptr = p;\r\n    for (let i = 0; i < count; i++) {\r\n        const s = loader(d, ptr);\r\n        items.push(s);\r\n        ptr += s._size;\r\n    }\r\n\r\n    return { _offset: p, _size: ptr - p, items };\r\n}\r\n\r\n//\r\n// Image headers.\r\n//\r\n\r\nexport function loadImageDosHeader(d: FileDataProvider, p: number): S.ImageDosHeader {\r\n    let ptr = p;\r\n\r\n    const e_magic = loadU2Field(d, ptr);\r\n    ptr += e_magic._size;\r\n\r\n    const e_cblp = loadU2Field(d, ptr);\r\n    ptr += e_cblp._size;\r\n\r\n    const e_cp = loadU2Field(d, ptr);\r\n    ptr += e_cp._size;\r\n\r\n    const e_crlc = loadU2Field(d, ptr);\r\n    ptr += e_crlc._size;\r\n\r\n    const e_cparhdr = loadU2Field(d, ptr);\r\n    ptr += e_cparhdr._size;\r\n\r\n    const e_minalloc = loadU2Field(d, ptr);\r\n    ptr += e_minalloc._size;\r\n\r\n    const e_maxalloc = loadU2Field(d, ptr);\r\n    ptr += e_maxalloc._size;\r\n\r\n    const e_ss = loadU2Field(d, ptr);\r\n    ptr += e_ss._size;\r\n\r\n    const e_sp = loadU2Field(d, ptr);\r\n    ptr += e_sp._size;\r\n\r\n    const e_csum = loadU2Field(d, ptr);\r\n    ptr += e_csum._size;\r\n\r\n    const e_ip = loadU2Field(d, ptr);\r\n    ptr += e_ip._size;\r\n\r\n    const e_cs = loadU2Field(d, ptr);\r\n    ptr += e_cs._size;\r\n\r\n    const e_lfarlc = loadU2Field(d, ptr);\r\n    ptr += e_lfarlc._size;\r\n\r\n    const e_ovno = loadU2Field(d, ptr);\r\n    ptr += e_ovno._size;\r\n\r\n    const e_res = loadFixedSizeByteArrayField(d, ptr, 4 * 2);\r\n    ptr += e_res._size;\r\n\r\n    const e_oemid = loadU2Field(d, ptr);\r\n    ptr += e_oemid._size;\r\n\r\n    const e_oeminfo = loadU2Field(d, ptr);\r\n    ptr += e_oeminfo._size;\r\n\r\n    const e_res2 = loadFixedSizeByteArrayField(d, ptr, 10 * 2);\r\n    ptr += e_res2._size;\r\n\r\n    const e_lfanew = loadU4Field(d, ptr);\r\n    ptr += e_lfanew._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        e_magic,\r\n        e_cblp,\r\n        e_cp,\r\n        e_crlc,\r\n        e_cparhdr,\r\n        e_minalloc,\r\n        e_maxalloc,\r\n        e_ss,\r\n        e_sp,\r\n        e_csum,\r\n        e_ip,\r\n        e_cs,\r\n        e_lfarlc,\r\n        e_ovno,\r\n        e_res,\r\n        e_oemid,\r\n        e_oeminfo,\r\n        e_res2,\r\n        e_lfanew,\r\n    };\r\n}\r\n\r\nexport function loadImageFileHeader(d: FileDataProvider, p: number): S.ImageFileHeader {\r\n    let ptr = p;\r\n\r\n    const Machine = loadU2Field(d, ptr);\r\n    ptr += Machine._size;\r\n\r\n    const NumberOfSections = loadU2Field(d, ptr);\r\n    ptr += NumberOfSections._size;\r\n\r\n    const TimeDateStamp = loadU4Field(d, ptr);\r\n    ptr += TimeDateStamp._size;\r\n\r\n    const PointerToSymbolTable = loadU4Field(d, ptr);\r\n    ptr += PointerToSymbolTable._size;\r\n\r\n    const NumberOfSymbols = loadU4Field(d, ptr);\r\n    ptr += NumberOfSymbols._size;\r\n\r\n    const SizeOfOptionalHeader = loadU2Field(d, ptr);\r\n    ptr += SizeOfOptionalHeader._size;\r\n\r\n    const Characteristics = loadU2EnumField<F.ImageFile>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Machine,\r\n        NumberOfSections,\r\n        TimeDateStamp,\r\n        PointerToSymbolTable,\r\n        NumberOfSymbols,\r\n        SizeOfOptionalHeader,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader32(d: FileDataProvider, p: number): S.ImageOptionalHeader32 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const BaseOfData = loadU4Field(d, ptr);\r\n    ptr += BaseOfData._size;\r\n\r\n    const ImageBase = loadU4Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        BaseOfData,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader64(d: FileDataProvider, p: number): S.ImageOptionalHeader64 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const ImageBase = loadU8Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageDataDirectory(d: FileDataProvider, p: number): S.ImageDataDirectory {\r\n    let ptr = p;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        VirtualAddress,\r\n        Size,\r\n    };\r\n}\r\n\r\nexport function loadImageSectionHeader(d: FileDataProvider, p: number): S.ImageSectionHeader {\r\n    let ptr = p;\r\n\r\n    const Name = loadFixedSizeAsciiStringField(d, ptr, 8);\r\n    ptr += Name._size;\r\n\r\n    const VirtualSize = loadU4Field(d, ptr);\r\n    ptr += VirtualSize._size;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const SizeOfRawData = loadU4Field(d, ptr);\r\n    ptr += SizeOfRawData._size;\r\n\r\n    const PointerToRawData = loadU4Field(d, ptr);\r\n    ptr += PointerToRawData._size;\r\n\r\n    const PointerToRelocations = loadU4Field(d, ptr);\r\n    ptr += PointerToRelocations._size;\r\n\r\n    const PointerToLinenumbers = loadU4Field(d, ptr);\r\n    ptr += PointerToLinenumbers._size;\r\n\r\n    const NumberOfRelocations = loadU2Field(d, ptr);\r\n    ptr += NumberOfRelocations._size;\r\n\r\n    const NumberOfLinenumbers = loadU2Field(d, ptr);\r\n    ptr += NumberOfLinenumbers._size;\r\n\r\n    const Characteristics = loadU4EnumField<F.ImageSection>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Name,\r\n        VirtualSize,\r\n        VirtualAddress,\r\n        SizeOfRawData,\r\n        PointerToRawData,\r\n        PointerToRelocations,\r\n        PointerToLinenumbers,\r\n        NumberOfRelocations,\r\n        NumberOfLinenumbers,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\n//\r\n// Metadata structures.\r\n//\r\n\r\nexport function loadCliHeader(d: FileDataProvider, p: number): S.CliHeader {\r\n    let ptr = p;\r\n\r\n    const cb = loadU4Field(d, ptr);\r\n    ptr += cb._size;\r\n\r\n    const MajorRuntimeVersion = loadU2Field(d, ptr);\r\n    ptr += MajorRuntimeVersion._size;\r\n\r\n    const MinorRuntimeVersion = loadU2Field(d, ptr);\r\n    ptr += MinorRuntimeVersion._size;\r\n\r\n    const MetaData = loadImageDataDirectory(d, ptr);\r\n    ptr += MetaData._size;\r\n\r\n    const Flags = loadU4Field(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const EntryPointToken = loadU4Field(d, ptr);\r\n    ptr += EntryPointToken._size;\r\n\r\n    const Resources = loadImageDataDirectory(d, ptr);\r\n    ptr += Resources._size;\r\n\r\n    const StrongNameSignature = loadImageDataDirectory(d, ptr);\r\n    ptr += StrongNameSignature._size;\r\n\r\n    const CodeManagerTable = loadImageDataDirectory(d, ptr);\r\n    ptr += CodeManagerTable._size;\r\n\r\n    const VTableFixups = loadImageDataDirectory(d, ptr);\r\n    ptr += VTableFixups._size;\r\n\r\n    const ExportAddressTableJumps = loadImageDataDirectory(d, ptr);\r\n    ptr += ExportAddressTableJumps._size;\r\n\r\n    const ManagedNativeHeader = loadImageDataDirectory(d, ptr);\r\n    ptr += ManagedNativeHeader._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        cb,\r\n        MajorRuntimeVersion,\r\n        MinorRuntimeVersion,\r\n        MetaData,\r\n        Flags,\r\n        EntryPointToken,\r\n        Resources,\r\n        StrongNameSignature,\r\n        CodeManagerTable,\r\n        VTableFixups,\r\n        ExportAddressTableJumps,\r\n        ManagedNativeHeader,\r\n    };\r\n}\r\n\r\nexport function loadMetadataRoot(d: FileDataProvider, p: number): S.MetadataRoot {\r\n    let ptr = p;\r\n\r\n    const Signature = loadU4Field(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    const MajorVersion = loadU2Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU2Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const Reserved = loadU4Field(d, ptr);\r\n    ptr += Reserved._size;\r\n\r\n    const VersionLength = loadU4Field(d, ptr);\r\n    ptr += VersionLength._size;\r\n\r\n    const VersionString = loadNullTerminatedStringField(d, ptr);\r\n    ptr += VersionString._size;\r\n\r\n    const paddingSize = U.calculatePadding(VersionString._size);\r\n    const VersionPadding = loadFixedSizeByteArrayField(d, ptr, paddingSize);\r\n    ptr += VersionPadding._size;\r\n\r\n    const Flags = loadU2Field(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Streams = loadU2Field(d, ptr);\r\n    ptr += Streams._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Signature,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        Reserved,\r\n        VersionLength,\r\n        VersionString,\r\n        VersionPadding,\r\n        Flags,\r\n        Streams,\r\n    };\r\n}\r\n\r\nexport function loadMetadataStreamHeader(d: FileDataProvider, p: number): S.MetadataStreamHeader {\r\n    let ptr = p;\r\n\r\n    const Offset = loadU4Field(d, ptr);\r\n    ptr += Offset._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    const Name = loadNullTerminatedStringField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const paddingSize = U.calculatePadding(Name._size);\r\n    const Padding = loadFixedSizeByteArrayField(d, ptr, paddingSize);\r\n    ptr += Padding._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Offset,\r\n        Size,\r\n        Name,\r\n        Padding,\r\n    };\r\n}\r\n\r\nexport function loadMetadataTableHeader(d: FileDataProvider, p: number): S.MetadataTableHeader {\r\n    let ptr = p;\r\n\r\n    const Reserved = loadU4Field(d, ptr);\r\n    ptr += Reserved._size;\r\n\r\n    const MajorVersion = loadU1Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU1Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const HeapSizes = loadU1Field(d, ptr);\r\n    ptr += HeapSizes._size;\r\n\r\n    const Reserved2 = loadU1Field(d, ptr);\r\n    ptr += Reserved2._size;\r\n\r\n    const Valid = loadU8Field(d, ptr);\r\n    ptr += Valid._size;\r\n\r\n    const Sorted = loadU8Field(d, ptr);\r\n    ptr += Sorted._size;\r\n\r\n    const tables = U.count1(Valid.high) + U.count1(Valid.low);\r\n    const Rows = loadStructArrayByCount(d, ptr, loadU4Field, tables);\r\n    ptr += Rows._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Reserved,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        HeapSizes,\r\n        Reserved2,\r\n        Valid,\r\n        Sorted,\r\n        Rows,\r\n    };\r\n}\r\n\r\nexport function loadMetadataUSItem(d: FileDataProvider, p: number): S.MetadataUSItem {\r\n    let ptr = p;\r\n\r\n    const Size = loadCompressedUIntField(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    const sz = Size.value;\r\n    const strSize = sz > 0 ? sz - 1 : 0;\r\n    const suffixSize = sz > 0 ? 1 : 0;\r\n\r\n    const Value = loadFixedSizeUnicodeStringField(d, ptr, strSize);\r\n    ptr += Value._size;\r\n\r\n    const Suffix = loadFixedSizeByteArrayField(d, ptr, suffixSize);\r\n    ptr += Suffix._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Size,\r\n        Value,\r\n        Suffix,\r\n    };\r\n}\r\n\r\nexport function loadMetadataBlobItem(d: FileDataProvider, p: number): S.MetadataBlobItem {\r\n    let ptr = p;\r\n\r\n    const Size = loadCompressedUIntField(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    const Value = loadFixedSizeByteArrayField(d, ptr, Size.value);\r\n    ptr += Value._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Size,\r\n        Value,\r\n    };\r\n}\r\n\r\nexport function loadMdsStringsField(\r\n    d: FileDataProvider & MetadataSizingProvider,\r\n    p: number): S.MdsStringsField {\r\n\r\n    return d.getHeapSize(F.MetadataHeapSizeID.String) == 4\r\n        ? loadU4Field(d, p) : loadU2Field(d, p);\r\n}\r\n\r\nexport function loadMdsGuidField(\r\n    d: FileDataProvider & MetadataSizingProvider,\r\n    p: number): S.MdsGuidField {\r\n\r\n    return d.getHeapSize(F.MetadataHeapSizeID.GUID) == 4\r\n        ? loadU4Field(d, p) : loadU2Field(d, p);\r\n}\r\n\r\nexport function loadMdsBlobField(\r\n    d: FileDataProvider & MetadataSizingProvider,\r\n    p: number): S.MdsBlobField {\r\n\r\n    return d.getHeapSize(F.MetadataHeapSizeID.Blob) == 4\r\n        ? loadU4Field(d, p) : loadU2Field(d, p);\r\n}\r\n\r\nexport function loadMdtRidField(\r\n    d: FileDataProvider & MetadataSizingProvider,\r\n    t: F.MetadataTableIndex, p: number): S.MdtRidField {\r\n\r\n    return d.getTableIDSize(t) == 4\r\n        ? loadU4Field(d, p) : loadU2Field(d, p);\r\n}\r\n\r\nexport function loadMdCodedTokenField(\r\n    d: FileDataProvider & MetadataSizingProvider,\r\n    t: F.MetadataCodedTokenIndex, p: number): S.MdCodedTokenField {\r\n\r\n    const baseField = d.getCodedTokenSize(t) == 4\r\n        ? loadU4Field(d, p) : loadU2Field(d, p);\r\n    const codedTokenInfo = decodeCodedToken(baseField.value, t);\r\n\r\n    return {\r\n        ...baseField, ...codedTokenInfo\r\n    };\r\n}\r\n\r\nexport function loadMdTokenField(d: FileDataProvider, p: number): S.MdTokenField {\r\n    const baseField = loadU4Field(d, p);\r\n    const tid: F.MetadataTableIndex = (baseField.value & 0xFF000000) >> 24;\r\n    const rid = baseField.value & 0x00FFFFFF;\r\n    return {\r\n        ...baseField, tid, rid\r\n    };\r\n}\r\n\r\nexport function decodeCodedToken(token: number, t: F.MetadataCodedTokenIndex): { tid: F.MetadataTableIndex, rid: number } {\r\n    const cti = F.ctc[t];\r\n    const tid = cti.tables[token & ((1 << cti.tagSize) - 1)];\r\n    const rid = token >> cti.tagSize;\r\n    return { tid, rid };\r\n}\r\n\r\n//\r\n// Metadata tables.\r\n//\r\n\r\nexport function loadMdtModule(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtModuleItem {\r\n    let ptr = p;\r\n\r\n    const Generation = loadU2Field(d, ptr);\r\n    ptr += Generation._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Mvid = loadMdsGuidField(d, ptr);\r\n    ptr += Mvid._size;\r\n\r\n    const EncId = loadMdsGuidField(d, ptr);\r\n    ptr += EncId._size;\r\n\r\n    const EncBaseId = loadMdsGuidField(d, ptr);\r\n    ptr += EncBaseId._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Generation,\r\n        Name,\r\n        Mvid,\r\n        EncId,\r\n        EncBaseId,\r\n    };\r\n}\r\n\r\nexport function loadMdtTypeRef(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtTypeRefItem {\r\n    let ptr = p;\r\n\r\n    const ResolutionScope = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.ResolutionScope, ptr);\r\n    ptr += ResolutionScope._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Namespace = loadMdsStringsField(d, ptr);\r\n    ptr += Namespace._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        ResolutionScope,\r\n        Name,\r\n        Namespace,\r\n    };\r\n}\r\n\r\nexport function loadMdtTypeDef(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtTypeDefItem {\r\n    let ptr = p;\r\n\r\n    const Flags = loadU4EnumField<F.CorTypeAttr>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Namespace = loadMdsStringsField(d, ptr);\r\n    ptr += Namespace._size;\r\n\r\n    const Extends = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.TypeDefOrRef, ptr);\r\n    ptr += Extends._size;\r\n\r\n    const FieldList = loadMdtRidField(d, F.MetadataTableIndex.Field, ptr);\r\n    ptr += FieldList._size;\r\n\r\n    const MethodList = loadMdtRidField(d, F.MetadataTableIndex.MethodDef, ptr);\r\n    ptr += MethodList._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Flags,\r\n        Name,\r\n        Namespace,\r\n        Extends,\r\n        FieldList,\r\n        MethodList,\r\n    };\r\n}\r\n\r\nexport function loadMdtFieldPtr(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtFieldPtrItem {\r\n    let ptr = p;\r\n\r\n    const Field = loadMdtRidField(d, F.MetadataTableIndex.Field, ptr);\r\n    ptr += Field._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Field,\r\n    };\r\n}\r\n\r\nexport function loadMdtField(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtFieldItem {\r\n    let ptr = p;\r\n\r\n    const Flags = loadU2EnumField<F.CorFieldAttr>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Signature = loadMdsBlobField(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Flags,\r\n        Name,\r\n        Signature,\r\n    };\r\n}\r\n\r\nexport function loadMdtMethodPtr(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtMethodPtrItem {\r\n    let ptr = p;\r\n\r\n    const Method = loadMdtRidField(d, F.MetadataTableIndex.MethodDef, ptr);\r\n    ptr += Method._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Method,\r\n    };\r\n}\r\n\r\nexport function loadMdtMethodDef(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtMethodDefItem {\r\n    let ptr = p;\r\n\r\n    const RVA = loadU4Field(d, ptr);\r\n    ptr += RVA._size;\r\n\r\n    const ImplFlags = loadU2EnumField<F.CorMethodImpl>(d, ptr);\r\n    ptr += ImplFlags._size;\r\n\r\n    const Flags = loadU2EnumField<F.CorMethodAttr>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Signature = loadMdsBlobField(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    const ParamList = loadMdtRidField(d, F.MetadataTableIndex.Param, ptr);\r\n    ptr += ParamList._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        RVA,\r\n        ImplFlags,\r\n        Flags,\r\n        Name,\r\n        Signature,\r\n        ParamList,\r\n    };\r\n}\r\n\r\nexport function loadMdtParamPtr(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtParamPtrItem {\r\n    let ptr = p;\r\n\r\n    const Param = loadMdtRidField(d, F.MetadataTableIndex.Param, ptr);\r\n    ptr += Param._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Param,\r\n    };\r\n}\r\n\r\nexport function loadMdtParam(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtParamItem {\r\n    let ptr = p;\r\n\r\n    const Flags = loadU2EnumField<F.CorParamAttr>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Sequence = loadU2Field(d, ptr);\r\n    ptr += Sequence._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Flags,\r\n        Sequence,\r\n        Name,\r\n    };\r\n}\r\n\r\nexport function loadMdtInterfaceImpl(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtInterfaceImplItem {\r\n    let ptr = p;\r\n\r\n    const Class = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += Class._size;\r\n\r\n    const Interface = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.TypeDefOrRef, ptr);\r\n    ptr += Interface._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Class,\r\n        Interface,\r\n    };\r\n}\r\n\r\nexport function loadMdtMemberRef(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtMemberRefItem {\r\n    let ptr = p;\r\n\r\n    const Class = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.MemberRefParent, ptr);\r\n    ptr += Class._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Signature = loadMdsBlobField(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Class,\r\n        Name,\r\n        Signature,\r\n    };\r\n}\r\n\r\nexport function loadMdtConstant(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtConstantItem {\r\n    let ptr = p;\r\n\r\n    const Type = loadU1EnumField<F.CorElementType>(d, ptr);\r\n    ptr += Type._size;\r\n\r\n    const PaddingZero = loadU1Field(d, ptr);\r\n    ptr += PaddingZero._size;\r\n\r\n    const Parent = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.HasConstant, ptr);\r\n    ptr += Parent._size;\r\n\r\n    const Value = loadMdsBlobField(d, ptr);\r\n    ptr += Value._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Type,\r\n        PaddingZero,\r\n        Parent,\r\n        Value,\r\n    };\r\n}\r\n\r\nexport function loadMdtCustomAttribute(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtCustomAttributeItem {\r\n    let ptr = p;\r\n\r\n    const Parent = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.HasCustomAttribute, ptr);\r\n    ptr += Parent._size;\r\n\r\n    const Type = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.CustomAttributeType, ptr);\r\n    ptr += Type._size;\r\n\r\n    const Value = loadMdsBlobField(d, ptr);\r\n    ptr += Value._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Parent,\r\n        Type,\r\n        Value,\r\n    };\r\n}\r\n\r\nexport function loadMdtFieldMarshal(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtFieldMarshalItem {\r\n    let ptr = p;\r\n\r\n    const Parent = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.HasFieldMarshall, ptr);\r\n    ptr += Parent._size;\r\n\r\n    const NativeType = loadMdsBlobField(d, ptr);\r\n    ptr += NativeType._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Parent,\r\n        NativeType,\r\n    };\r\n}\r\n\r\nexport function loadMdtDeclSecurity(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtDeclSecurityItem {\r\n    let ptr = p;\r\n\r\n    const Action = loadU2EnumField<F.CorDeclSecurity>(d, ptr);\r\n    ptr += Action._size;\r\n\r\n    const Parent = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.HasDeclSecurity, ptr);\r\n    ptr += Parent._size;\r\n\r\n    const PermissionSet = loadMdsBlobField(d, ptr);\r\n    ptr += PermissionSet._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Action,\r\n        Parent,\r\n        PermissionSet,\r\n    };\r\n}\r\n\r\nexport function loadMdtClassLayout(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtClassLayoutItem {\r\n    let ptr = p;\r\n\r\n    const PackingSize = loadU2Field(d, ptr);\r\n    ptr += PackingSize._size;\r\n\r\n    const ClassSize = loadU4Field(d, ptr);\r\n    ptr += ClassSize._size;\r\n\r\n    const Parent = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += Parent._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        PackingSize,\r\n        ClassSize,\r\n        Parent,\r\n    };\r\n}\r\n\r\nexport function loadMdtFieldLayout(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtFieldLayoutItem {\r\n    let ptr = p;\r\n\r\n    const OffSet = loadU4Field(d, ptr);\r\n    ptr += OffSet._size;\r\n\r\n    const Field = loadMdtRidField(d, F.MetadataTableIndex.Field, ptr);\r\n    ptr += Field._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        OffSet,\r\n        Field,\r\n    };\r\n}\r\n\r\nexport function loadMdtStandAloneSig(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtStandAloneSigItem {\r\n    let ptr = p;\r\n\r\n    const Signature = loadMdsBlobField(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Signature,\r\n    };\r\n}\r\n\r\nexport function loadMdtEventMap(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtEventMapItem {\r\n    let ptr = p;\r\n\r\n    const Parent = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += Parent._size;\r\n\r\n    const EventList = loadMdtRidField(d, F.MetadataTableIndex.Event, ptr);\r\n    ptr += EventList._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Parent,\r\n        EventList,\r\n    };\r\n}\r\n\r\nexport function loadMdtEventPtr(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtEventPtrItem {\r\n    let ptr = p;\r\n\r\n    const Event = loadMdtRidField(d, F.MetadataTableIndex.Event, ptr);\r\n    ptr += Event._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Event,\r\n    };\r\n}\r\n\r\nexport function loadMdtEvent(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtEventItem {\r\n    let ptr = p;\r\n\r\n    const EventFlags = loadU2EnumField<F.CorEventAttr>(d, ptr);\r\n    ptr += EventFlags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const EventType = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.TypeDefOrRef, ptr);\r\n    ptr += EventType._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        EventFlags,\r\n        Name,\r\n        EventType,\r\n    };\r\n}\r\n\r\nexport function loadMdtPropertyMap(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtPropertyMapItem {\r\n    let ptr = p;\r\n\r\n    const Parent = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += Parent._size;\r\n\r\n    const PropertyList = loadMdtRidField(d, F.MetadataTableIndex.Property, ptr);\r\n    ptr += PropertyList._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Parent,\r\n        PropertyList,\r\n    };\r\n}\r\n\r\nexport function loadMdtPropertyPtr(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtPropertyPtrItem {\r\n    let ptr = p;\r\n\r\n    const Property = loadMdtRidField(d, F.MetadataTableIndex.Property, ptr);\r\n    ptr += Property._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Property,\r\n    };\r\n}\r\n\r\nexport function loadMdtProperty(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtPropertyItem {\r\n    let ptr = p;\r\n\r\n    const PropFlags = loadU2EnumField<F.CorPropertyAttr>(d, ptr);\r\n    ptr += PropFlags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Type = loadMdsBlobField(d, ptr);\r\n    ptr += Type._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        PropFlags,\r\n        Name,\r\n        Type,\r\n    };\r\n}\r\n\r\nexport function loadMdtMethodSemantics(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtMethodSemanticsItem {\r\n    let ptr = p;\r\n\r\n    const Semantic = loadU2EnumField<F.CorMethodSemanticsAttr>(d, ptr);\r\n    ptr += Semantic._size;\r\n\r\n    const Method = loadMdtRidField(d, F.MetadataTableIndex.MethodDef, ptr);\r\n    ptr += Method._size;\r\n\r\n    const Association = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.HasSemantics, ptr);\r\n    ptr += Association._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Semantic,\r\n        Method,\r\n        Association,\r\n    };\r\n}\r\n\r\nexport function loadMdtMethodImpl(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtMethodImplItem {\r\n    let ptr = p;\r\n\r\n    const Class = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += Class._size;\r\n\r\n    const MethodBody = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.MethodDefOrRef, ptr);\r\n    ptr += MethodBody._size;\r\n\r\n    const MethodDeclaration = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.MethodDefOrRef, ptr);\r\n    ptr += MethodDeclaration._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Class,\r\n        MethodBody,\r\n        MethodDeclaration,\r\n    };\r\n}\r\n\r\nexport function loadMdtModuleRef(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtModuleRefItem {\r\n    let ptr = p;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Name,\r\n    };\r\n}\r\n\r\nexport function loadMdtTypeSpec(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtTypeSpecItem {\r\n    let ptr = p;\r\n\r\n    const Signature = loadMdsBlobField(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Signature,\r\n    };\r\n}\r\n\r\nexport function loadMdtImplMap(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtImplMapItem {\r\n    let ptr = p;\r\n\r\n    const MappingFlags = loadU2EnumField<F.CorPinvokeMap>(d, ptr);\r\n    ptr += MappingFlags._size;\r\n\r\n    const MemberForwarded = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.MemberForwarded, ptr);\r\n    ptr += MemberForwarded._size;\r\n\r\n    const ImportName = loadMdsStringsField(d, ptr);\r\n    ptr += ImportName._size;\r\n\r\n    const ImportScope = loadMdtRidField(d, F.MetadataTableIndex.ModuleRef, ptr);\r\n    ptr += ImportScope._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        MappingFlags,\r\n        MemberForwarded,\r\n        ImportName,\r\n        ImportScope,\r\n    };\r\n}\r\n\r\nexport function loadMdtFieldRVA(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtFieldRVAItem {\r\n    let ptr = p;\r\n\r\n    const RVA = loadU4Field(d, ptr);\r\n    ptr += RVA._size;\r\n\r\n    const Field = loadMdtRidField(d, F.MetadataTableIndex.Field, ptr);\r\n    ptr += Field._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        RVA,\r\n        Field,\r\n    };\r\n}\r\n\r\nexport function loadMdtENCLog(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtENCLogItem {\r\n    let ptr = p;\r\n\r\n    const Token = loadU4Field(d, ptr);\r\n    ptr += Token._size;\r\n\r\n    const FuncCode = loadU4Field(d, ptr);\r\n    ptr += FuncCode._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Token,\r\n        FuncCode,\r\n    };\r\n}\r\n\r\nexport function loadMdtENCMap(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtENCMapItem {\r\n    let ptr = p;\r\n\r\n    const Token = loadU4Field(d, ptr);\r\n    ptr += Token._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Token,\r\n    };\r\n}\r\n\r\nexport function loadMdtAssembly(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtAssemblyItem {\r\n    let ptr = p;\r\n\r\n    const HashAlgId = loadU4EnumField<F.AssemblyHashAlgorithm>(d, ptr);\r\n    ptr += HashAlgId._size;\r\n\r\n    const MajorVersion = loadU2Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU2Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const BuildNumber = loadU2Field(d, ptr);\r\n    ptr += BuildNumber._size;\r\n\r\n    const RevisionNumber = loadU2Field(d, ptr);\r\n    ptr += RevisionNumber._size;\r\n\r\n    const Flags = loadU4EnumField<F.CorAssemblyFlags>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const PublicKey = loadMdsBlobField(d, ptr);\r\n    ptr += PublicKey._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Locale = loadMdsStringsField(d, ptr);\r\n    ptr += Locale._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        HashAlgId,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        BuildNumber,\r\n        RevisionNumber,\r\n        Flags,\r\n        PublicKey,\r\n        Name,\r\n        Locale,\r\n    };\r\n}\r\n\r\nexport function loadMdtAssemblyProcessor(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtAssemblyProcessorItem {\r\n    let ptr = p;\r\n\r\n    const Processor = loadU4Field(d, ptr);\r\n    ptr += Processor._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Processor,\r\n    };\r\n}\r\n\r\nexport function loadMdtAssemblyOS(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtAssemblyOSItem {\r\n    let ptr = p;\r\n\r\n    const OSPlatformID = loadU4Field(d, ptr);\r\n    ptr += OSPlatformID._size;\r\n\r\n    const OSMajorVersion = loadU4Field(d, ptr);\r\n    ptr += OSMajorVersion._size;\r\n\r\n    const OSMinorVersion = loadU4Field(d, ptr);\r\n    ptr += OSMinorVersion._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        OSPlatformID,\r\n        OSMajorVersion,\r\n        OSMinorVersion,\r\n    };\r\n}\r\n\r\nexport function loadMdtAssemblyRef(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtAssemblyRefItem {\r\n    let ptr = p;\r\n\r\n    const MajorVersion = loadU2Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU2Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const BuildNumber = loadU2Field(d, ptr);\r\n    ptr += BuildNumber._size;\r\n\r\n    const RevisionNumber = loadU2Field(d, ptr);\r\n    ptr += RevisionNumber._size;\r\n\r\n    const Flags = loadU4EnumField<F.CorAssemblyFlags>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const PublicKeyOrToken = loadMdsBlobField(d, ptr);\r\n    ptr += PublicKeyOrToken._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Locale = loadMdsStringsField(d, ptr);\r\n    ptr += Locale._size;\r\n\r\n    const HashValue = loadMdsBlobField(d, ptr);\r\n    ptr += HashValue._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        BuildNumber,\r\n        RevisionNumber,\r\n        Flags,\r\n        PublicKeyOrToken,\r\n        Name,\r\n        Locale,\r\n        HashValue,\r\n    };\r\n}\r\n\r\nexport function loadMdtAssemblyRefProcessor(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtAssemblyRefProcessorItem {\r\n    let ptr = p;\r\n\r\n    const Processor = loadU4Field(d, ptr);\r\n    ptr += Processor._size;\r\n\r\n    const AssemblyRef = loadMdtRidField(d, F.MetadataTableIndex.AssemblyRef, ptr);\r\n    ptr += AssemblyRef._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Processor,\r\n        AssemblyRef,\r\n    };\r\n}\r\n\r\nexport function loadMdtAssemblyRefOS(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtAssemblyRefOSItem {\r\n    let ptr = p;\r\n\r\n    const OSPlatformID = loadU4Field(d, ptr);\r\n    ptr += OSPlatformID._size;\r\n\r\n    const OSMajorVersion = loadU4Field(d, ptr);\r\n    ptr += OSMajorVersion._size;\r\n\r\n    const OSMinorVersion = loadU4Field(d, ptr);\r\n    ptr += OSMinorVersion._size;\r\n\r\n    const AssemblyRef = loadMdtRidField(d, F.MetadataTableIndex.AssemblyRef, ptr);\r\n    ptr += AssemblyRef._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        OSPlatformID,\r\n        OSMajorVersion,\r\n        OSMinorVersion,\r\n        AssemblyRef,\r\n    };\r\n}\r\n\r\nexport function loadMdtFile(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtFileItem {\r\n    let ptr = p;\r\n\r\n    const Flags = loadU4EnumField<F.CorFileFlags>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const HashValue = loadMdsBlobField(d, ptr);\r\n    ptr += HashValue._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Flags,\r\n        Name,\r\n        HashValue,\r\n    };\r\n}\r\n\r\nexport function loadMdtExportedType(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtExportedTypeItem {\r\n    let ptr = p;\r\n\r\n    const Flags = loadU4EnumField<F.CorTypeAttr>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const TypeDefId = loadU4Field(d, ptr);\r\n    ptr += TypeDefId._size;\r\n\r\n    const TypeName = loadMdsStringsField(d, ptr);\r\n    ptr += TypeName._size;\r\n\r\n    const TypeNamespace = loadMdsStringsField(d, ptr);\r\n    ptr += TypeNamespace._size;\r\n\r\n    const Implementation = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.Implementation, ptr);\r\n    ptr += Implementation._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Flags,\r\n        TypeDefId,\r\n        TypeName,\r\n        TypeNamespace,\r\n        Implementation,\r\n    };\r\n}\r\n\r\nexport function loadMdtManifestResource(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtManifestResourceItem {\r\n    let ptr = p;\r\n\r\n    const Offset = loadU4Field(d, ptr);\r\n    ptr += Offset._size;\r\n\r\n    const Flags = loadU4EnumField<F.CorManifestResourceFlags>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Implementation = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.Implementation, ptr);\r\n    ptr += Implementation._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Offset,\r\n        Flags,\r\n        Name,\r\n        Implementation,\r\n    };\r\n}\r\n\r\nexport function loadMdtNestedClass(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtNestedClassItem {\r\n    let ptr = p;\r\n\r\n    const NestedClass = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += NestedClass._size;\r\n\r\n    const EnclosingClass = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += EnclosingClass._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        NestedClass,\r\n        EnclosingClass,\r\n    };\r\n}\r\n\r\nexport function loadMdtGenericParam(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtGenericParamItem {\r\n    let ptr = p;\r\n\r\n    const Number = loadU2Field(d, ptr);\r\n    ptr += Number._size;\r\n\r\n    const Flags = loadU2EnumField<F.CorGenericParamAttr>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Owner = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.TypeOrMethodDef, ptr);\r\n    ptr += Owner._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Number,\r\n        Flags,\r\n        Owner,\r\n        Name,\r\n    };\r\n}\r\n\r\nexport function loadMdtMethodSpec(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtMethodSpecItem {\r\n    let ptr = p;\r\n\r\n    const Method = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.MethodDefOrRef, ptr);\r\n    ptr += Method._size;\r\n\r\n    const Instantiation = loadMdsBlobField(d, ptr);\r\n    ptr += Instantiation._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Method,\r\n        Instantiation,\r\n    };\r\n}\r\n\r\nexport function loadMdtGenericParamConstraint(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtGenericParamConstraintItem {\r\n    let ptr = p;\r\n\r\n    const Owner = loadMdtRidField(d, F.MetadataTableIndex.GenericParam, ptr);\r\n    ptr += Owner._size;\r\n\r\n    const Constraint = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.TypeDefOrRef, ptr);\r\n    ptr += Constraint._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Owner,\r\n        Constraint,\r\n    };\r\n}\r\n","import * as S from \"./structures\";\r\nimport * as A from \"./aux-structures\";\r\nimport * as L from \"./loader\";\r\nimport * as F from \"./image-flags\";\r\nimport * as E from \"./error\";\r\nimport * as U from \"./utils\";\r\n\r\nexport class PEImage implements L.FileDataProvider, L.MetadataSizingProvider {\r\n    public static load(buf: ArrayBuffer): PEImage {\r\n        return new PEImage(buf);\r\n    }\r\n\r\n    //\r\n    // FileDataProvider functions.\r\n    //\r\n\r\n    public getU1(p: number): number {\r\n        this.check(p, 1);\r\n        return this.data.getUint8(p);\r\n    }\r\n\r\n    public getU2(p: number): number {\r\n        this.check(p, 2);\r\n        return this.data.getUint16(p, true);\r\n    }\r\n\r\n    public getU4(p: number): number {\r\n        this.check(p, 3);\r\n        return this.data.getUint32(p, true);\r\n    }\r\n\r\n    public getData(p: number, sz: number): Uint8Array {\r\n        this.check(p, sz);\r\n        return new Uint8Array(this.data.buffer.slice(p, p + sz));\r\n    }\r\n\r\n    //\r\n    // Image attributes.\r\n    //\r\n\r\n    public is32Bit(): boolean | undefined {\r\n        const optHdr = this.getOptionalHeader();\r\n        if (optHdr == null) {\r\n            return undefined;\r\n        }\r\n\r\n        switch (optHdr.Magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC: return true;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC: return false;\r\n            default: return undefined;\r\n        }\r\n    }\r\n\r\n    public isManaged(): boolean {\r\n        const dd = this.getDataDirectories();\r\n        return dd != null && this.isDataDirectoryValid(\r\n            dd.items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR]\r\n        );\r\n    }\r\n\r\n    public hasMetadata(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.MetaData);\r\n    }\r\n\r\n    public hasManagedResources(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.Resources);\r\n    }\r\n\r\n    public hasStrongNameSignature(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.StrongNameSignature);\r\n    }\r\n\r\n    public isMetadataTableValid(id: F.MetadataTableIndex): boolean {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].valid;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public isMetadataTableSorted(id: F.MetadataTableIndex): boolean {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].sorted;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public getMetadataTableRows(id: F.MetadataTableIndex): number {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].rows;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    //\r\n    // Image headers.\r\n    //\r\n\r\n    public getDosHeader(): S.ImageDosHeader | undefined {\r\n        return this.dosHeader;\r\n    }\r\n\r\n    public getPESignature(): S.U4Field | undefined {\r\n        return this.peSignature;\r\n    }\r\n\r\n    public getFileHeader(): S.ImageFileHeader | undefined {\r\n        return this.fileHeader;\r\n    }\r\n\r\n    public getOptionalHeader(): S.ImageOptionalHeader32 | S.ImageOptionalHeader64 | undefined {\r\n        return this.optionalHeader;\r\n    }\r\n\r\n    public getDataDirectories(): S.StructArray<S.ImageDataDirectory> | undefined {\r\n        return this.dataDirectories;\r\n    }\r\n\r\n    public getSectionHeaders(): S.StructArray<S.ImageSectionHeader> | undefined {\r\n        return this.sectionHeaders;\r\n    }\r\n\r\n    //\r\n    // Metadata structures.\r\n    //\r\n\r\n    public getCliHeader(): S.CliHeader | undefined {\r\n        if (this.cliHeader) return this.cliHeader;\r\n        if (!this.isManaged()) return undefined;\r\n\r\n        const offset = this.rvaToOffset(this.dataDirectories!\r\n            .items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR]\r\n            .VirtualAddress.value);\r\n\r\n        this.cliHeader = L.loadCliHeader(this, offset);\r\n        return this.cliHeader;\r\n    }\r\n\r\n    public getMetadataRoot(): S.MetadataRoot | undefined {\r\n        if (this.metadataRoot) return this.metadataRoot;\r\n\r\n        const cliHeader = this.getCliHeader();\r\n        if (!cliHeader) return undefined;\r\n\r\n        const offset = this.rvaToOffset(cliHeader.MetaData.VirtualAddress.value);\r\n        if (!offset) return undefined;\r\n\r\n        this.metadataRoot = L.loadMetadataRoot(this, offset);\r\n        return this.metadataRoot;\r\n    }\r\n\r\n    public getMetadataStreamHeaders(): S.StructArray<S.MetadataStreamHeader> | undefined {\r\n        if (this.metadataStreamHeaders) return this.metadataStreamHeaders;\r\n\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot || !mdRoot.Streams.value) return undefined;\r\n\r\n        this.metadataStreamHeaders = L.loadStructArrayByCount(\r\n            this,\r\n            mdRoot._offset + mdRoot._size,\r\n            L.loadMetadataStreamHeader,\r\n            mdRoot.Streams.value\r\n        );\r\n        return this.metadataStreamHeaders;\r\n    }\r\n\r\n    public getMetadataStreamHeader(name: F.MetadataStreamName): S.MetadataStreamHeader | undefined {\r\n        const headers = this.getMetadataStreamHeaders();\r\n        if (!headers) return undefined;\r\n\r\n        return headers.items.filter(v => v.Name.value == name).shift();\r\n    }\r\n\r\n    public getStrongNameSignature(): S.Field | undefined {\r\n        if (this.strongNameSignature) return this.strongNameSignature;\r\n\r\n        const cliHeader = this.getCliHeader();\r\n        if (!cliHeader) return undefined;\r\n\r\n        const offset = this.rvaToOffset(cliHeader.StrongNameSignature.VirtualAddress.value);\r\n        if (!offset) return undefined;\r\n\r\n        this.strongNameSignature = L.loadFixedSizeByteArrayField(\r\n            this, offset,\r\n            cliHeader.StrongNameSignature.Size.value);\r\n        return this.strongNameSignature;\r\n    }\r\n\r\n    public getMetadataTableHeader(): S.MetadataTableHeader | undefined {\r\n        if (this.metadataTableHeader) return this.metadataTableHeader;\r\n\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.Table);\r\n        if (!sh) return undefined;\r\n\r\n        const offset = mdRoot._offset + sh.Offset.value;\r\n        this.metadataTableHeader = L.loadMetadataTableHeader(this, offset);\r\n        this.fillMetadataTableInfo();\r\n        this.fillMetadataTableInfoExtra();\r\n\r\n        return this.metadataTableHeader;\r\n    }\r\n\r\n    public getMdsStringsItem(offset: number): S.StringField | undefined {\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.Strings);\r\n        if (!sh) return undefined;\r\n\r\n        if (offset < 0 || offset >= sh.Size.value) {\r\n            return undefined;\r\n        } else {\r\n            return L.loadNullTerminatedStringField(this,\r\n                mdRoot._offset + sh.Offset.value + offset);\r\n        }\r\n    }\r\n\r\n    public getMdsUSItem(offset: number): S.MetadataUSItem | undefined {\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.US);\r\n        if (!sh) return undefined;\r\n\r\n        if (offset < 0 || offset >= sh.Size.value) {\r\n            return undefined;\r\n        } else {\r\n            return L.loadMetadataUSItem(this,\r\n                mdRoot._offset + sh.Offset.value + offset);\r\n        }\r\n    }\r\n\r\n    public getMdsGuidItems(): S.StructArray<S.Field> | undefined {\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.GUID);\r\n        if (!sh) return undefined;\r\n\r\n        const count = sh.Size.value / 16;\r\n        return L.loadStructArrayByCount(\r\n            this,\r\n            mdRoot._offset + sh.Offset.value,\r\n            (d, p) => L.loadFixedSizeByteArrayField(d, p, 16),\r\n            count);\r\n    }\r\n\r\n    public getMdsBlobItem(offset: number): S.MetadataBlobItem | undefined {\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.Blob);\r\n        if (!sh) return undefined;\r\n\r\n        if (offset < 0 || offset >= sh.Size.value) {\r\n            return undefined;\r\n        } else {\r\n            return L.loadMetadataBlobItem(this,\r\n                mdRoot._offset + sh.Offset.value + offset);\r\n        }\r\n    }\r\n\r\n    public getMdtModuleItem(rid /* 1-based */: number): S.MdtModuleItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Module, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Module];\r\n        return L.loadMdtModule(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtTypeRefItem(rid /* 1-based */: number): S.MdtTypeRefItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.TypeRef, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Module];\r\n        return L.loadMdtTypeRef(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtTypeDefItem(rid /* 1-based */: number): S.MdtTypeDefItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.TypeDef, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.TypeDef];\r\n        return L.loadMdtTypeDef(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtFieldPtrItem(rid /* 1-based */: number): S.MdtFieldPtrItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.FieldPtr, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.FieldPtr];\r\n        return L.loadMdtFieldPtr(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtFieldItem(rid /* 1-based */: number): S.MdtFieldItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Field, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Field];\r\n        return L.loadMdtField(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtMethodPtrItem(rid /* 1-based */: number): S.MdtMethodPtrItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.MethodPtr, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.MethodPtr];\r\n        return L.loadMdtMethodPtr(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtMethodDefItem(rid /* 1-based */: number): S.MdtMethodDefItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.MethodDef, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.MethodDef];\r\n        return L.loadMdtMethodDef(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtParamPtrItem(rid /* 1-based */: number): S.MdtParamPtrItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ParamPtr, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ParamPtr];\r\n        return L.loadMdtParamPtr(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtParamItem(rid /* 1-based */: number): S.MdtParamItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Param, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Param];\r\n        return L.loadMdtParam(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtInterfaceImplItem(rid /* 1-based */: number): S.MdtInterfaceImplItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.InterfaceImpl, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.InterfaceImpl];\r\n        return L.loadMdtInterfaceImpl(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtMemberRefItem(rid /* 1-based */: number): S.MdtMemberRefItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.MemberRef, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.MemberRef];\r\n        return L.loadMdtMemberRef(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtConstantItem(rid /* 1-based */: number): S.MdtConstantItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Constant, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Constant];\r\n        return L.loadMdtConstant(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtCustomAttributeItem(rid /* 1-based */: number): S.MdtCustomAttributeItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.CustomAttribute, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.CustomAttribute];\r\n        return L.loadMdtCustomAttribute(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtFieldMarshalItem(rid /* 1-based */: number): S.MdtFieldMarshalItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.FieldMarshal, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.FieldMarshal];\r\n        return L.loadMdtFieldMarshal(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtDeclSecurityItem(rid /* 1-based */: number): S.MdtDeclSecurityItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.DeclSecurity, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.DeclSecurity];\r\n        return L.loadMdtDeclSecurity(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtClassLayoutItem(rid /* 1-based */: number): S.MdtClassLayoutItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ClassLayout, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ClassLayout];\r\n        return L.loadMdtClassLayout(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtFieldLayoutItem(rid /* 1-based */: number): S.MdtFieldLayoutItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.FieldLayout, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.FieldLayout];\r\n        return L.loadMdtFieldLayout(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtStandAloneSigItem(rid /* 1-based */: number): S.MdtStandAloneSigItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.StandAloneSig, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.StandAloneSig];\r\n        return L.loadMdtStandAloneSig(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtEventMapItem(rid /* 1-based */: number): S.MdtEventMapItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.EventMap, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.EventMap];\r\n        return L.loadMdtEventMap(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtEventPtrItem(rid /* 1-based */: number): S.MdtEventPtrItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.EventPtr, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.EventPtr];\r\n        return L.loadMdtEventPtr(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtEventItem(rid /* 1-based */: number): S.MdtEventItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Event, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Event];\r\n        return L.loadMdtEvent(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtPropertyMapItem(rid /* 1-based */: number): S.MdtPropertyMapItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.PropertyMap, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.PropertyMap];\r\n        return L.loadMdtPropertyMap(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtPropertyPtrItem(rid /* 1-based */: number): S.MdtPropertyPtrItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.PropertyPtr, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.PropertyPtr];\r\n        return L.loadMdtPropertyPtr(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtPropertyItem(rid /* 1-based */: number): S.MdtPropertyItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Property, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Property];\r\n        return L.loadMdtProperty(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtMethodSemanticsItem(rid /* 1-based */: number): S.MdtMethodSemanticsItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.MethodSemantics, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.MethodSemantics];\r\n        return L.loadMdtMethodSemantics(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtMethodImplItem(rid /* 1-based */: number): S.MdtMethodImplItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.MethodImpl, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.MethodImpl];\r\n        return L.loadMdtMethodImpl(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtModuleRefItem(rid /* 1-based */: number): S.MdtModuleRefItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ModuleRef, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ModuleRef];\r\n        return L.loadMdtModuleRef(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtTypeSpecItem(rid /* 1-based */: number): S.MdtTypeSpecItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.TypeSpec, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.TypeSpec];\r\n        return L.loadMdtTypeSpec(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtImplMapItem(rid /* 1-based */: number): S.MdtImplMapItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ImplMap, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ImplMap];\r\n        return L.loadMdtImplMap(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtFieldRVAItem(rid /* 1-based */: number): S.MdtFieldRVAItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.FieldRVA, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.FieldRVA];\r\n        return L.loadMdtFieldRVA(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtENCLogItem(rid /* 1-based */: number): S.MdtENCLogItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ENCLog, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ENCLog];\r\n        return L.loadMdtENCLog(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtENCMapItem(rid /* 1-based */: number): S.MdtENCMapItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ENCMap, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ENCMap];\r\n        return L.loadMdtENCMap(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtAssemblyItem(rid /* 1-based */: number): S.MdtAssemblyItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Assembly, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Assembly];\r\n        return L.loadMdtAssembly(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtAssemblyProcessorItem(rid /* 1-based */: number): S.MdtAssemblyProcessorItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.AssemblyProcessor, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.AssemblyProcessor];\r\n        return L.loadMdtAssemblyProcessor(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtAssemblyOSItem(rid /* 1-based */: number): S.MdtAssemblyOSItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.AssemblyOS, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.AssemblyOS];\r\n        return L.loadMdtAssemblyOS(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtAssemblyRefItem(rid /* 1-based */: number): S.MdtAssemblyRefItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.AssemblyRef, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.AssemblyRef];\r\n        return L.loadMdtAssemblyRef(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtAssemblyRefProcessorItem(rid /* 1-based */: number): S.MdtAssemblyRefProcessorItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.AssemblyRefProcessor, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.AssemblyRefProcessor];\r\n        return L.loadMdtAssemblyRefProcessor(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtAssemblyRefOSItem(rid /* 1-based */: number): S.MdtAssemblyRefOSItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.AssemblyRefOS, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.AssemblyRefOS];\r\n        return L.loadMdtAssemblyRefOS(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtFileItem(rid /* 1-based */: number): S.MdtFileItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.File, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.File];\r\n        return L.loadMdtFile(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtExportedTypeItem(rid /* 1-based */: number): S.MdtExportedTypeItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ExportedType, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ExportedType];\r\n        return L.loadMdtExportedType(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtManifestResourceItem(rid /* 1-based */: number): S.MdtManifestResourceItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ManifestResource, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ManifestResource];\r\n        return L.loadMdtManifestResource(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtNestedClassItem(rid /* 1-based */: number): S.MdtNestedClassItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.NestedClass, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.NestedClass];\r\n        return L.loadMdtNestedClass(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtGenericParamItem(rid /* 1-based */: number): S.MdtGenericParamItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.GenericParam, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.GenericParam];\r\n        return L.loadMdtGenericParam(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtMethodSpecItem(rid /* 1-based */: number): S.MdtMethodSpecItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.MethodSpec, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.MethodSpec];\r\n        return L.loadMdtMethodSpec(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtGenericParamConstraintItem(rid /* 1-based */: number): S.MdtGenericParamConstraintItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.GenericParamConstraint, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.GenericParamConstraint];\r\n        return L.loadMdtGenericParamConstraint(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    //\r\n    // Metadata sizing.\r\n    //\r\n\r\n    public getHeapSize(heap: F.MetadataHeapSizeID): number {\r\n        if (this.metadataSizingCache.heap) {\r\n            return this.metadataSizingCache.heap[heap];\r\n        }\r\n\r\n        const h = this.getMetadataTableHeader();\r\n        if (!h) return 0;\r\n\r\n        const getHeapSizeFunc = (heap: F.MetadataHeapSizeID) =>\r\n            (h.HeapSizes.value & (1 << heap)) != 0 ? 4 : 2;\r\n\r\n        this.metadataSizingCache.heap = [\r\n            F.MetadataHeapSizeID.String,\r\n            F.MetadataHeapSizeID.GUID,\r\n            F.MetadataHeapSizeID.Blob]\r\n            .map(v => (h.HeapSizes.value & (1 << v)) != 0 ? 4 : 2);\r\n\r\n        return this.metadataSizingCache.heap[heap];\r\n    }\r\n\r\n    public getTableIDSize(t: F.MetadataTableIndex): number {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[t]) {\r\n            return info[t].idSize;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public getCodedTokenSize(t: F.MetadataCodedTokenIndex): number {\r\n        if (this.metadataSizingCache.codedToken) {\r\n            return this.metadataSizingCache.codedToken[t];\r\n        }\r\n\r\n        this.metadataSizingCache.codedToken = F.ctc.map(c => {\r\n            const maxRows = 0xFFFF >> c.tagSize;\r\n            for (let tid of c.tables) {\r\n                if (this.getMetadataTableRows(tid) > maxRows) {\r\n                    return 4;\r\n                }\r\n            }\r\n            return 2;\r\n        });\r\n\r\n        return this.metadataSizingCache.codedToken[t];\r\n    }\r\n\r\n\r\n    //\r\n    // Utilities.\r\n    //\r\n\r\n    public rvaToOffset(rva: number): number {\r\n        const sh = this.getSectionHeaderByRva(rva);\r\n        if (!sh) return 0;\r\n\r\n        return rva - sh.VirtualAddress.value + sh.PointerToRawData.value;\r\n    }\r\n\r\n    public offsetToRva(offset: number): number {\r\n        const sh = this.getSectionHeaderByOffset(offset);\r\n        if (!sh) return 0;\r\n\r\n        return offset - sh.PointerToRawData.value + sh.VirtualAddress.value;\r\n    }\r\n\r\n    //\r\n    // Private implementations.\r\n    //\r\n\r\n    private check(p: number, sz: number): void {\r\n        if (p < 0 || p >= this.data.byteLength\r\n            || sz < 0 || p + sz > this.data.byteLength) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_POSITION, p, sz);\r\n        }\r\n    }\r\n\r\n    private constructor(buf: ArrayBuffer) {\r\n        this.data = new DataView(buf);\r\n        this.loadHeaders();\r\n    }\r\n\r\n    private loadHeaders(): void {\r\n        let ptr = 0;\r\n        this.dosHeader = L.loadImageDosHeader(this, ptr);\r\n\r\n        if (this.dosHeader.e_magic.value != F.IMAGE_DOS_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DOS_SIGNATURE, ptr, 2);\r\n        }\r\n\r\n        ptr = this.dosHeader.e_lfanew.value;\r\n        this.peSignature = L.loadU4Field(this, ptr);\r\n\r\n        if (this.peSignature.value != F.IMAGE_NT_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_PE_SIGNATURE, ptr, 4);\r\n        }\r\n\r\n        ptr += this.peSignature._size;\r\n        this.fileHeader = L.loadImageFileHeader(this, ptr);\r\n\r\n        ptr += this.fileHeader._size;\r\n        const magic = L.loadU2Field(this, ptr);\r\n        switch (magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader32(this, ptr);\r\n                break;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader64(this, ptr);\r\n                break;\r\n            default:\r\n                throw new E.PEError(E.PEErrorType.INVALID_OPTIONAL_HEADER_MAGIC, ptr, 2);\r\n        }\r\n\r\n        if (this.optionalHeader.NumberOfRvaAndSizes.value != F.IMAGE_NUMBEROF_DIRECTORY_ENTRIES) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_DIRECTORY_COUNT,\r\n                this.optionalHeader.NumberOfRvaAndSizes._offset,\r\n                this.optionalHeader.NumberOfRvaAndSizes._size);\r\n        }\r\n\r\n        ptr += this.optionalHeader._size;\r\n        this.dataDirectories = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageDataDirectory,\r\n            this.optionalHeader.NumberOfRvaAndSizes.value);\r\n\r\n        ptr += this.dataDirectories._size;\r\n        this.sectionHeaders = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageSectionHeader,\r\n            this.fileHeader.NumberOfSections.value);\r\n    }\r\n\r\n    private getSectionHeaderByOffset(offset: number): S.ImageSectionHeader | undefined {\r\n        return this.sectionHeaders && this.sectionHeaders.items.filter(h => {\r\n            const p = h.PointerToRawData.value;\r\n            const sz = h.SizeOfRawData.value;\r\n            return offset >= p && offset < p + sz;\r\n        }).shift();\r\n    }\r\n\r\n    private getSectionHeaderByRva(rva: number): S.ImageSectionHeader | undefined {\r\n        return this.sectionHeaders && this.sectionHeaders.items.filter(h => {\r\n            const p = h.VirtualAddress.value;\r\n            const sz = h.VirtualSize.value;\r\n            return rva >= p && rva < p + sz;\r\n        }).shift();\r\n    }\r\n\r\n    private isDataDirectoryValid(dd?: S.ImageDataDirectory): boolean {\r\n        return (dd && dd.VirtualAddress.value > 0 && dd.Size.value > 0) || false;\r\n    }\r\n\r\n    private fillMetadataTableInfo(): void {\r\n        const h = this.metadataTableHeader;\r\n        if (!h) return;\r\n\r\n        let info: A.MetadataTableInfo = {};\r\n        let nValid = 0;\r\n        for (let id = 0; id < F.NumberOfMdTables; id++) {\r\n            const valid = U.isSetLong(h.Valid.high, h.Valid.low, id);\r\n            const sorted = U.isSetLong(h.Sorted.high, h.Sorted.low, id);\r\n            const rows = valid ? h.Rows.items[nValid++].value : 0;\r\n            info[id] = {\r\n                valid,\r\n                sorted,\r\n                rows,\r\n                idSize: valid ? (rows > 0xFFFF ? 4 : 2) : 0,\r\n                baseOffset: 0,\r\n                rowSize: 0\r\n            };\r\n        }\r\n        this.metadataTableInfo = info;\r\n    }\r\n\r\n    private fillMetadataTableInfoExtra(): void {\r\n        const h = this.metadataTableHeader;\r\n        if (!h) return;\r\n\r\n        const ti = this.metadataTableInfo;\r\n        if (!ti) return;\r\n\r\n        const ctid = F.MetadataCodedTokenIndex;\r\n        const ctsz = this.getCodedTokenSize.bind(this);\r\n\r\n        const tid = F.MetadataTableIndex;\r\n\r\n        const stringsSize = this.getHeapSize(F.MetadataHeapSizeID.String);\r\n        const guidSize = this.getHeapSize(F.MetadataHeapSizeID.GUID);\r\n        const blobSize = this.getHeapSize(F.MetadataHeapSizeID.Blob);\r\n\r\n        let baseOffset = h._offset + h._size;\r\n\r\n        let tbli = ti[tid.Module];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + stringsSize + 3 * guidSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.TypeRef];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ctsz(ctid.ResolutionScope) + 2 * stringsSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.TypeDef];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 2 * stringsSize + ctsz(ctid.TypeDefOrRef) + ti[tid.Field].idSize + ti[tid.MethodDef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.FieldPtr];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.Field].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.Field];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + stringsSize + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.MethodPtr];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.MethodDef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.MethodDef];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 2 + 2 + stringsSize + blobSize + ti[tid.Param].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ParamPtr];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.Param].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.Param];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + 2 + stringsSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.InterfaceImpl];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.TypeDef].idSize + ctsz(ctid.TypeDefOrRef);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.MemberRef];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ctsz(ctid.MemberRefParent) + stringsSize + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.Constant];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 1 + 1 + ctsz(ctid.HasConstant) + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.CustomAttribute];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ctsz(ctid.HasCustomAttribute) + ctsz(ctid.CustomAttributeType) + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.FieldMarshal];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ctsz(ctid.HasFieldMarshall) + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.DeclSecurity];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + ctsz(ctid.HasDeclSecurity) + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ClassLayout];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + 4 + ti[tid.TypeDef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.FieldLayout];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + ti[tid.Field].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.StandAloneSig];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.EventMap];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.TypeDef].idSize + ti[tid.Event].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.EventPtr];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.Event].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.Event];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + stringsSize + ctsz(ctid.TypeDefOrRef);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.PropertyMap];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.TypeDef].idSize + ti[tid.Property].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.PropertyPtr];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.Property].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.Property];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + stringsSize + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.MethodSemantics];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + ti[tid.MethodDef].idSize + ctsz(ctid.HasSemantics);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.MethodImpl];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.TypeDef].idSize + 2 * ctsz(ctid.MethodDefOrRef);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ModuleRef];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = stringsSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.TypeSpec];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ImplMap];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + ctsz(ctid.MemberForwarded) + stringsSize + ti[tid.ModuleRef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.FieldRVA];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + ti[tid.Field].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ENCLog];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 4;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ENCMap];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.Assembly];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 2 + 2 + 2 + 2 + 4 + blobSize + 2 * stringsSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.AssemblyProcessor];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.AssemblyOS];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 4 + 4;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.AssemblyRef];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + 2 + 2 + 2 + 4 + 2 * blobSize + 2 * stringsSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.AssemblyRefProcessor];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + ti[tid.AssemblyRef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.AssemblyRefOS];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 4 + 4 + ti[tid.AssemblyRef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.File];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + stringsSize + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ExportedType];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 4 + 2 * stringsSize + ctsz(ctid.Implementation);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ManifestResource];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 4 + stringsSize + ctsz(ctid.Implementation);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.NestedClass];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 * ti[tid.TypeDef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.GenericParam];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + 2 + ctsz(ctid.TypeOrMethodDef) + stringsSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.MethodSpec];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ctsz(ctid.MethodDefOrRef) + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.GenericParamConstraint];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.GenericParam].idSize + ctsz(ctid.TypeDefOrRef);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n    }\r\n\r\n    private checkMdt(tid: F.MetadataTableIndex, rid: number): boolean {\r\n        if (!this.metadataTableInfo) {\r\n            return false;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo[tid];\r\n        return ti != null && ti.valid && rid > 0 && rid <= ti.rows;\r\n    }\r\n\r\n    private readonly data: DataView;\r\n\r\n    private dosHeader?: S.ImageDosHeader;\r\n    private peSignature?: S.U4Field;\r\n    private fileHeader?: S.ImageFileHeader;\r\n    private optionalHeader?: S.ImageOptionalHeader32 | S.ImageOptionalHeader64;\r\n    private dataDirectories?: S.StructArray<S.ImageDataDirectory>;\r\n    private sectionHeaders?: S.StructArray<S.ImageSectionHeader>;\r\n\r\n    private cliHeader?: S.CliHeader;\r\n    private metadataRoot?: S.MetadataRoot;\r\n    private metadataStreamHeaders?: S.StructArray<S.MetadataStreamHeader>;\r\n    private strongNameSignature?: S.Field;\r\n\r\n    private metadataTableHeader?: S.MetadataTableHeader;\r\n    private metadataTableInfo?: A.MetadataTableInfo;\r\n\r\n    private metadataSizingCache: {\r\n        heap?: {\r\n            [key: number /* F.MetadataHeapSizeID */]: number;\r\n        };\r\n        codedToken?: {\r\n            [key: number /* F.MetadataCodedTokenIndex */]: number;\r\n        }\r\n    } = {};\r\n}\r\n","export function createResNavDataMessage(navList: W.NavData[]): W.ResNavDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_NAV_DATA,\r\n        navList\r\n    };\r\n}\r\n\r\nexport function createResPageDataMessage(pageData: W.PageData): W.ResPageDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PAGE_DATA,\r\n        pageData\r\n    };\r\n}\r\n\r\nexport function createResPEPropsMessage(is32Bit?: boolean, isManaged?: boolean): W.ResPEPropsMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_PROPS,\r\n        is32Bit,\r\n        isManaged\r\n    };\r\n}\r\n\r\nexport function createResPEErrorMessage(error: string): W.ResPEErrorMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_ERROR,\r\n        error\r\n    };\r\n}\r\n","import * as M from \"./message\";\r\nimport { PEImage } from \"./pe/image\";\r\nimport { generatePageData, clearGeneratorCache } from \"./page-data/generator\";\r\nimport { generateNavList } from \"./page-data/nav-data\";\r\n\r\nlet pe: PEImage | null = null;\r\n\r\nonmessage = (ev) => {\r\n    const msg = ev.data as W.WorkerMessage;\r\n    switch (msg.type) {\r\n        case W.WorkerMessageType.REQ_OPEN_FILE:\r\n            handleReqOpenFile(msg as W.ReqOpenFileMessage);\r\n            break;\r\n\r\n        case W.WorkerMessageType.REQ_OPEN_NAV:\r\n            handleReqOpenNav(msg as W.ReqOpenNavMessage);\r\n            break;\r\n    }\r\n};\r\n\r\nfunction handleReqOpenFile(msg: W.ReqOpenFileMessage): void {\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = ev => {\r\n        try {\r\n            const buf = <ArrayBuffer>(<FileReader>ev.target).result;\r\n            pe = PEImage.load(buf);\r\n            clearGeneratorCache();\r\n\r\n            // Response with page data.\r\n            const pageData = generatePageData(pe, W.PageID.HEADERS);\r\n            const pageDataMsg = M.createResPageDataMessage(pageData);\r\n            postMessage(pageDataMsg);\r\n\r\n            // Response with PE properties.\r\n            const is32Bit = pe.is32Bit();\r\n            const isManaged = pe.isManaged();\r\n            const pePropsMsg = M.createResPEPropsMessage(is32Bit, isManaged);\r\n            postMessage(pePropsMsg);\r\n\r\n            // Response with navigation data.\r\n            const navList = generateNavList(pe);\r\n            const navMsg = M.createResNavDataMessage(navList);\r\n            postMessage(navMsg);\r\n        } catch (ex) {\r\n            const msg = M.createResPEErrorMessage(ex.message\r\n                || `Unknown error: ${JSON.stringify(ex)}`);\r\n            postMessage(msg);\r\n        }\r\n    };\r\n\r\n    reader.onerror = ev => {\r\n        pe = null;\r\n        const msg = M.createResPEErrorMessage(\"Can't open file.\");\r\n        postMessage(msg);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(msg.file);\r\n}\r\n\r\nfunction handleReqOpenNav(msg: W.ReqOpenNavMessage): void {\r\n    if (pe != null) {\r\n        const { pageID, subID, pageNum, elemID } = msg.target;\r\n        const pageData = generatePageData(pe, pageID, subID, pageNum);\r\n        pageData.nav.elemID = elemID;\r\n        const res = M.createResPageDataMessage(pageData);\r\n        postMessage(res);\r\n    }\r\n}"],"sourceRoot":""}