{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker/pe/image-flags.ts","webpack:///./src/worker/page-data/formatter.ts","webpack:///./src/worker/pe/utils.ts","webpack:///./src/worker/page-data/nav-data.ts","webpack:///./src/worker/page-data/mds-list.ts","webpack:///./src/worker/page-data/mds-table.ts","webpack:///./src/worker/page-data/metadata-headers.ts","webpack:///./src/worker/page-data/headers.ts","webpack:///./src/worker/page-data/generator.ts","webpack:///./src/worker/pe/error.ts","webpack:///./src/worker/pe/loader.ts","webpack:///./src/worker/pe/image.ts","webpack:///./src/worker/message.ts","webpack:///./src/worker/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ImageFile","ImageFileMachine","ImageSubsystem","ImageDllCharacteristics","ImageDirectoryEntry","ImageSection","ComImageFlags","MetadataTableIndex","MetadataCodedTokenIndex","AssemblyHashAlgorithm","CorAssemblyFlags","CorEventAttr","CorFieldAttr","CorFileFlags","CorGenericParamAttr","CorPinvokeMap","CorManifestResourceFlags","CorMethodAttr","CorMethodImpl","CorMethodSemanticsAttr","CorParamAttr","CorPropertyAttr","CorTypeAttr","CorDeclSecurity","CorElementType","IMAGE_DOS_SIGNATURE","IMAGE_NT_SIGNATURE","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_OPTIONAL_HDR64_MAGIC","__NAME__","__FLAG__","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","MetadataSignature","NumberOfMdTables","ctc","tagSize","tables","TypeDef","TypeRef","TypeSpec","Field","Param","Property","MethodDef","InterfaceImpl","MemberRef","Module","DeclSecurity","Event","StandAloneSig","ModuleRef","Assembly","AssemblyRef","File","ExportedType","ManifestResource","GenericParam","GenericParamConstraint","MethodSpec","String","formatU1RawHex","padZeroLeft","toString","toUpperCase","formatU2RawHex","formatU4RawHex","formatU1Hex","formatU2Hex","formatU4Hex","formatRawHex","formatHex","formatDec","v","toLocaleString","formatHexDec","formatBytes","bytes","lineWidth","lines","start","length","line","Array","from","subarray","map","b","join","push","str","len","repeat","formatUIntField","f","showDec","desc","hex","_size","offset","_offset","size","rawData","data","descriptions","formatStructTitle","title","formatU1Field","formatU2Field","formatU4Field","formatU8Field","high","low","formatCompressedUIntField","formatBytesField","formatStringField","formatGuidField","formatEnumField","enumType","sz","type","groups","grpList","flagEnumGroupCache","allValues","fmt","","mask","values","grpName","grpPrefix","grpMask","_i","allValues_1","startsWith","substring","rs","regexFlagEnumGroupMask","exec","buildEnumGroups","getFlagEnumGroups","filter","ev","forEach","mv_1","sv","shift","formatFlagEnum","val","formatNonFlagEnum","formatEnumDesc","decompressUint","buffer","byteLength","RangeError","calculatePadding","dataSize","align","count1","isSetLong","bit","decompressInt","u","fb","getCompressedIntSize","firstByte","F","generateNavList","pe","pageID","navList","target","children","elemID","navMD","isManaged","hasMetadata","hasStrongNameSignature","getMetadataStreamHeader","pageNum","getMetadataTableHeader","ti","tid","isMetadataTableValid","getMetadataTableRows","subID","generateMDTablesNavData","generateMDHeadersNavData","U","FM","getBlobIndexes","base","indexes","dtsz","getU1","getData","putIndexToPages","pageSize","pages","pageItems","pStart","pEnd","slice","generateMdsStringsPageData","cache","cfg","pgNum","mdsStrings","mdRoot","getMetadataRoot","sh","Offset","Size","mdsOffsetListPageSize","checkAndBuildCacheForMdsStrings","items","titleOf","nav","index","getMdsStringsItem","paging","currentPageNumber","pageNavList","generateMdsUSPageData","mdsUS","checkAndBuildCacheForMdsUS","item","getMdsUSItem","Value","Suffix","generateMdsBlobPageData","mdsBlob","checkAndBuildCacheForMdsBlob","getMdsBlobItem","generateMdsGuidPageData","getMdsGuidItems","generateMdtModuleItems","Generation","Name","Mvid","EncId","EncBaseId","generateMdtTypeRefItems","ResolutionScope","Namespace","generateMdtTypeDefItems","Flags","Extends","FieldList","MethodList","generateMdtFieldPtrItems","generateMdtFieldItems","Signature","generateMdtMethodPtrItems","Method","generateMdtMethodDefItems","RVA","ImplFlags","ParamList","generateMdtParamPtrItems","generateMdtParamItems","Sequence","generateMdtInterfaceImplItems","Class","Interface","generateMdtMemberRefItems","generateMdtConstantItems","Type","PaddingZero","Parent","generateMdtCustomAttributeItems","generateMdtFieldMarshalItems","NativeType","generateMdtDeclSecurityItems","Action","PermissionSet","generateMdtClassLayoutItems","PackingSize","ClassSize","generateMdtFieldLayoutItems","OffSet","generateMdtStandAloneSigItems","generateMdtEventMapItems","EventList","generateMdtEventPtrItems","generateMdtEventItems","EventFlags","EventType","generateMdtPropertyMapItems","PropertyList","generateMdtPropertyPtrItems","generateMdtPropertyItems","PropFlags","generateMdtMethodSemanticsItems","Semantic","Association","generateMdtMethodImplItems","MethodBody","MethodDeclaration","generateMdtModuleRefItems","generateMdtTypeSpecItems","generateMdtImplMapItems","MappingFlags","MemberForwarded","ImportName","ImportScope","generateMdtFieldRVAItems","generateMdtENCLogItems","Token","FuncCode","generateMdtENCMapItems","generateMdtAssemblyItems","HashAlgId","MajorVersion","MinorVersion","BuildNumber","RevisionNumber","PublicKey","Locale","generateMdtAssemblyProcessorItems","Processor","generateMdtAssemblyOSItems","OSPlatformID","OSMajorVersion","OSMinorVersion","generateMdtAssemblyRefItems","PublicKeyOrToken","HashValue","generateMdtAssemblyRefProcessorItems","generateMdtAssemblyRefOSItems","generateMdtFileItems","generateMdtExportedTypeItems","TypeDefId","TypeName","TypeNamespace","Implementation","generateMdtManifestResourceItems","generateMdtNestedClassItems","NestedClass","EnclosingClass","generateMdtGenericParamItems","Number","Owner","generateMdtMethodSpecItems","Instantiation","generateMdtGenericParamConstraintItems","Constraint","getRidOnPage","psz","mdtPageSize","rows","end","generateMdsTablePageData","tableHeader","h","Reserved","HeapSizes","Reserved2","Valid","Sorted","Rows","generateMDTableHeader","tableInfo","id","valid","sorted","isMetadataTableSorted","generateMDTableList","generateMdtPageData","loader","builder","_a","getMdtModuleItem","getMdtTypeRefItem","getMdtTypeDefItem","FieldPtr","getMdtFieldPtrItem","getMdtFieldItem","MethodPtr","getMdtMethodPtrItem","getMdtMethodDefItem","ParamPtr","getMdtParamPtrItem","getMdtParamItem","getMdtInterfaceImplItem","getMdtMemberRefItem","Constant","getMdtConstantItem","CustomAttribute","getMdtCustomAttributeItem","FieldMarshal","getMdtFieldMarshalItem","getMdtDeclSecurityItem","ClassLayout","getMdtClassLayoutItem","FieldLayout","getMdtFieldLayoutItem","getMdtStandAloneSigItem","EventMap","getMdtEventMapItem","EventPtr","getMdtEventPtrItem","getMdtEventItem","PropertyMap","getMdtPropertyMapItem","PropertyPtr","getMdtPropertyPtrItem","getMdtPropertyItem","MethodSemantics","getMdtMethodSemanticsItem","MethodImpl","getMdtMethodImplItem","getMdtModuleRefItem","getMdtTypeSpecItem","ImplMap","getMdtImplMapItem","FieldRVA","getMdtFieldRVAItem","ENCLog","getMdtENCLogItem","ENCMap","getMdtENCMapItem","getMdtAssemblyItem","AssemblyProcessor","getMdtAssemblyProcessorItem","AssemblyOS","getMdtAssemblyOSItem","getMdtAssemblyRefItem","AssemblyRefProcessor","getMdtAssemblyRefProcessorItem","AssemblyRefOS","getMdtAssemblyRefOSItem","getMdtFileItem","getMdtExportedTypeItem","getMdtManifestResourceItem","getMdtNestedClassItem","getMdtGenericParamItem","getMdtMethodSpecItem","getMdtGenericParamConstraintItem","rid","generateSignleMdtTableItems","generateTalbeItems","Math","floor","tblName","generateMdtPaging","generateMetadataHeadersPageData","cliHeader","getCliHeader","cb","MajorRuntimeVersion","MinorRuntimeVersion","MetaData","VirtualAddress","EntryPointToken","Resources","StrongNameSignature","CodeManagerTable","VTableFixups","ExportAddressTableJumps","ManagedNativeHeader","generateCliHeader","metadataRoot","VersionLength","VersionString","VersionPadding","Streams","generateMetadataRoot","streamHeaders","getMetadataStreamHeaders","Padding","generateMetadataStreamHeader","snSignature","getStrongNameSignature","generateSNSignature","generateHeadersPageData","dosHeader","getDosHeader","e_magic","e_cblp","e_cp","e_crlc","e_cparhdr","e_minalloc","e_maxalloc","e_ss","e_sp","e_csum","e_ip","e_cs","e_lfarlc","e_ovno","e_res","e_oemid","e_oeminfo","e_res2","e_lfanew","generateDosHeader","peSignature","getPESignature","generatePESignature","fileHeader","getFileHeader","Machine","NumberOfSections","TimeDateStamp","PointerToSymbolTable","NumberOfSymbols","SizeOfOptionalHeader","Characteristics","generateFileHeader","optionalHeader","getOptionalHeader","Magic","MajorLinkerVersion","MinorLinkerVersion","SizeOfCode","SizeOfInitializedData","SizeOfUninitializedData","AddressOfEntryPoint","BaseOfCode","BaseOfData","ImageBase","SectionAlignment","FileAlignment","MajorOperatingSystemVersion","MinorOperatingSystemVersion","MajorImageVersion","MinorImageVersion","MajorSubsystemVersion","MinorSubsystemVersion","Win32VersionValue","SizeOfImage","SizeOfHeaders","CheckSum","Subsystem","DllCharacteristics","SizeOfStackReserve","SizeOfStackCommit","SizeOfHeapReserve","SizeOfHeapCommit","LoaderFlags","NumberOfRvaAndSizes","fillOptionalHeader32Fields","fillOptionalHeader64Fields","generateOptionalHeader","dataDirectories","getDataDirectories","generateDataDirectories","sectionHeaders","getSectionHeaders","VirtualSize","SizeOfRawData","PointerToRawData","PointerToRelocations","PointerToLinenumbers","NumberOfRelocations","NumberOfLinenumbers","generateSectionHeaders","headers_1","metadata_headers_1","mds_table_1","mds_list_1","generatePageData","clearGeneratorCache","PEError","_super","_this","this","__extends","Error","loadU1Field","loadU2Field","getU2","loadU4Field","getU4","loadU8Field","loadCompressedUIntField","Uint8Array","loadU1EnumField","loadU2EnumField","loadU4EnumField","loadFixedSizeByteArrayField","loadFixedSizeAsciiStringField","fromCharCode","apply","loadNullTerminatedStringField","ptr","decodeURIComponent","loadFixedSizeUnicodeStringField","arr","Uint16Array","fromCodePoint","loadStructArrayByCount","count","loadImageDataDirectory","loadMdsStringsField","getHeapSize","loadMdsGuidField","loadMdsBlobField","loadMdtRidField","getTableIDSize","loadMdCodedTokenField","baseField","getCodedTokenSize","codedTokenInfo","decodeCodedToken","__assign","token","cti","loadImageDosHeader","loadImageFileHeader","loadImageOptionalHeader32","loadImageOptionalHeader64","loadImageSectionHeader","loadCliHeader","loadMetadataRoot","loadMetadataStreamHeader","loadMetadataTableHeader","loadMetadataUSItem","suffixSize","loadMetadataBlobItem","loadMdTokenField","loadMdtModule","loadMdtTypeRef","loadMdtTypeDef","TypeDefOrRef","loadMdtFieldPtr","loadMdtField","loadMdtMethodPtr","loadMdtMethodDef","loadMdtParamPtr","loadMdtParam","loadMdtInterfaceImpl","loadMdtMemberRef","MemberRefParent","loadMdtConstant","HasConstant","loadMdtCustomAttribute","HasCustomAttribute","CustomAttributeType","loadMdtFieldMarshal","HasFieldMarshall","loadMdtDeclSecurity","HasDeclSecurity","loadMdtClassLayout","loadMdtFieldLayout","loadMdtStandAloneSig","loadMdtEventMap","loadMdtEventPtr","loadMdtEvent","loadMdtPropertyMap","loadMdtPropertyPtr","loadMdtProperty","loadMdtMethodSemantics","HasSemantics","loadMdtMethodImpl","MethodDefOrRef","loadMdtModuleRef","loadMdtTypeSpec","loadMdtImplMap","loadMdtFieldRVA","loadMdtENCLog","loadMdtENCMap","loadMdtAssembly","loadMdtAssemblyProcessor","loadMdtAssemblyOS","loadMdtAssemblyRef","loadMdtAssemblyRefProcessor","loadMdtAssemblyRefOS","loadMdtFile","loadMdtExportedType","loadMdtManifestResource","loadMdtNestedClass","loadMdtGenericParam","TypeOrMethodDef","loadMdtMethodSpec","loadMdtGenericParamConstraint","L","E","PEImage","buf","metadataSizingCache","DataView","loadHeaders","load","check","getUint8","getUint16","getUint32","is32Bit","optHdr","dd","isDataDirectoryValid","IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","hasManagedResources","info","metadataTableInfo","rvaToOffset","metadataStreamHeaders","headers","strongNameSignature","metadataTableHeader","fillMetadataTableInfo","fillMetadataTableInfoExtra","checkMdt","baseOffset","rowSize","heap","idSize","codedToken","maxRows","rva","getSectionHeaderByRva","offsetToRva","getSectionHeaderByOffset","nValid","ctid","ctsz","stringsSize","guidSize","blobSize","tbli","createResNavDataMessage","createResPageDataMessage","pageData","createResPEPropsMessage","createResPEErrorMessage","error","M","image_1","generator_1","nav_data_1","onmessage","msg","reader","FileReader","onload","result","pageDataMsg","postMessage","pePropsMsg","navMsg","ex","msg_1","message","JSON","stringify","onerror","readAsArrayBuffer","file","handleReqOpenFile","res","handleReqOpenNav"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","export const IMAGE_DOS_SIGNATURE = 0x5A4D;  // MZ\r\n\r\nexport const IMAGE_NT_SIGNATURE = 0x00004550;  // PE00\r\n\r\nexport const IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\r\nexport const IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\r\n\r\nexport enum ImageFile {\r\n    IMAGE_FILE_RELOCS_STRIPPED = 0x0001,\r\n    IMAGE_FILE_EXECUTABLE_IMAGE = 0x0002,\r\n    IMAGE_FILE_LINE_NUMS_STRIPPED = 0x0004,\r\n    IMAGE_FILE_LOCAL_SYMS_STRIPPED = 0x0008,\r\n    IMAGE_FILE_AGGRESIVE_WS_TRIM = 0x0010,\r\n    IMAGE_FILE_LARGE_ADDRESS_AWARE = 0x0020,\r\n    IMAGE_FILE_BYTES_REVERSED_LO = 0x0080,\r\n    IMAGE_FILE_32BIT_MACHINE = 0x0100,\r\n    IMAGE_FILE_DEBUG_STRIPPED = 0x0200,\r\n    IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 0x0400,\r\n    IMAGE_FILE_NET_RUN_FROM_SWAP = 0x0800,\r\n    IMAGE_FILE_SYSTEM = 0x1000,\r\n    IMAGE_FILE_DLL = 0x2000,\r\n    IMAGE_FILE_UP_SYSTEM_ONLY = 0x4000,\r\n    IMAGE_FILE_BYTES_REVERSED_HI = 0x8000,\r\n}\r\n(ImageFile as any).__NAME__ = \"ImageFile\";\r\n(ImageFile as any).__FLAG__ = true;\r\n\r\nexport enum ImageFileMachine {\r\n    IMAGE_FILE_MACHINE_UNKNOWN = 0,\r\n    IMAGE_FILE_MACHINE_TARGET_HOST = 0x0001,\r\n    IMAGE_FILE_MACHINE_I386 = 0x014c,\r\n    IMAGE_FILE_MACHINE_R3000 = 0x0162,\r\n    IMAGE_FILE_MACHINE_R4000 = 0x0166,\r\n    IMAGE_FILE_MACHINE_R10000 = 0x0168,\r\n    IMAGE_FILE_MACHINE_WCEMIPSV2 = 0x0169,\r\n    IMAGE_FILE_MACHINE_ALPHA = 0x0184,\r\n    IMAGE_FILE_MACHINE_SH3 = 0x01a2,\r\n    IMAGE_FILE_MACHINE_SH3DSP = 0x01a3,\r\n    IMAGE_FILE_MACHINE_SH3E = 0x01a4,\r\n    IMAGE_FILE_MACHINE_SH4 = 0x01a6,\r\n    IMAGE_FILE_MACHINE_SH5 = 0x01a8,\r\n    IMAGE_FILE_MACHINE_ARM = 0x01c0,\r\n    IMAGE_FILE_MACHINE_THUMB = 0x01c2,\r\n    IMAGE_FILE_MACHINE_ARMNT = 0x01c4,\r\n    IMAGE_FILE_MACHINE_AM33 = 0x01d3,\r\n    IMAGE_FILE_MACHINE_POWERPC = 0x01F0,\r\n    IMAGE_FILE_MACHINE_POWERPCFP = 0x01f1,\r\n    IMAGE_FILE_MACHINE_IA64 = 0x0200,\r\n    IMAGE_FILE_MACHINE_MIPS16 = 0x0266,\r\n    IMAGE_FILE_MACHINE_ALPHA64 = 0x0284,\r\n    IMAGE_FILE_MACHINE_MIPSFPU = 0x0366,\r\n    IMAGE_FILE_MACHINE_MIPSFPU16 = 0x0466,\r\n    IMAGE_FILE_MACHINE_AXP64 = IMAGE_FILE_MACHINE_ALPHA64,\r\n    IMAGE_FILE_MACHINE_TRICORE = 0x0520,\r\n    IMAGE_FILE_MACHINE_CEF = 0x0CEF,\r\n    IMAGE_FILE_MACHINE_EBC = 0x0EBC,\r\n    IMAGE_FILE_MACHINE_AMD64 = 0x8664,\r\n    IMAGE_FILE_MACHINE_M32R = 0x9041,\r\n    IMAGE_FILE_MACHINE_ARM64 = 0xAA64,\r\n    IMAGE_FILE_MACHINE_CEE = 0xC0EE,\r\n}\r\n(ImageFileMachine as any).__NAME__ = \"ImageFileMachine\";\r\n\r\nexport enum ImageSubsystem {\r\n    IMAGE_SUBSYSTEM_UNKNOWN = 0,\r\n    IMAGE_SUBSYSTEM_NATIVE = 1,\r\n    IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,\r\n    IMAGE_SUBSYSTEM_OS2_CUI = 5,\r\n    IMAGE_SUBSYSTEM_POSIX_CUI = 7,\r\n    IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9,\r\n    IMAGE_SUBSYSTEM_EFI_APPLICATION = 10,\r\n    IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11,\r\n    IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12,\r\n    IMAGE_SUBSYSTEM_EFI_ROM = 13,\r\n    IMAGE_SUBSYSTEM_XBOX = 14,\r\n    IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16,\r\n    IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 17,\r\n}\r\n(ImageSubsystem as any).__NAME__ = \"ImageSubsystem\";\r\n\r\nexport enum ImageDllCharacteristics {\r\n    IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020,\r\n    IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 0x0040,\r\n    IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 0x0080,\r\n    IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 0x0100,\r\n    IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 0x0200,\r\n    IMAGE_DLLCHARACTERISTICS_NO_SEH = 0x0400,\r\n    IMAGE_DLLCHARACTERISTICS_NO_BIND = 0x0800,\r\n    IMAGE_DLLCHARACTERISTICS_APPCONTAINER = 0x1000,\r\n    IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 0x2000,\r\n    IMAGE_DLLCHARACTERISTICS_GUARD_CF = 0x4000,\r\n    IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 0x8000,\r\n}\r\n(ImageDllCharacteristics as any).__NAME__ = \"ImageDllCharacteristics\";\r\n(ImageDllCharacteristics as any).__FLAG__ = true;\r\n\r\nexport enum ImageDirectoryEntry {\r\n    IMAGE_DIRECTORY_ENTRY_EXPORT = 0,\r\n    IMAGE_DIRECTORY_ENTRY_IMPORT = 1,\r\n    IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,\r\n    IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,\r\n    IMAGE_DIRECTORY_ENTRY_SECURITY = 4,\r\n    IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,\r\n    IMAGE_DIRECTORY_ENTRY_DEBUG = 6,\r\n    IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7,\r\n    IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,\r\n    IMAGE_DIRECTORY_ENTRY_TLS = 9,\r\n    IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,\r\n    IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,\r\n    IMAGE_DIRECTORY_ENTRY_IAT = 12,\r\n    IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13,\r\n    IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14,\r\n}\r\n(ImageDirectoryEntry as any).__NAME__ = \"ImageDirectoryEntry\";\r\n\r\nexport const IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16;\r\n\r\nexport enum ImageSection {\r\n    IMAGE_SCN_TYPE_NO_PAD = 0x00000008,\r\n\r\n    IMAGE_SCN_CNT_CODE = 0x00000020,\r\n    IMAGE_SCN_CNT_INITIALIZED_DATA = 0x00000040,\r\n    IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x00000080,\r\n\r\n    IMAGE_SCN_LNK_OTHER = 0x00000100,\r\n    IMAGE_SCN_LNK_INFO = 0x00000200,\r\n    IMAGE_SCN_LNK_REMOVE = 0x00000800,\r\n    IMAGE_SCN_LNK_COMDAT = 0x00001000,\r\n\r\n    IMAGE_SCN_NO_DEFER_SPEC_EXC = 0x00004000,\r\n    IMAGE_SCN_GPREL = 0x00008000,\r\n\r\n    IMAGE_SCN_MEM_PURGEABLE = 0x00020000,\r\n    IMAGE_SCN_MEM_16BIT = 0x00020000,\r\n    IMAGE_SCN_MEM_LOCKED = 0x00040000,\r\n    IMAGE_SCN_MEM_PRELOAD = 0x00080000,\r\n\r\n    al__Mask__IMAGE_SCN_ALIGN = 0x00F00000,\r\n    al_IMAGE_SCN_ALIGN_1BYTES = 0x00100000,\r\n    al_IMAGE_SCN_ALIGN_2BYTES = 0x00200000,\r\n    al_IMAGE_SCN_ALIGN_4BYTES = 0x00300000,\r\n    al_IMAGE_SCN_ALIGN_8BYTES = 0x00400000,\r\n    al_IMAGE_SCN_ALIGN_16BYTES = 0x00500000,\r\n    al_IMAGE_SCN_ALIGN_32BYTES = 0x00600000,\r\n    al_IMAGE_SCN_ALIGN_64BYTES = 0x00700000,\r\n    al_IMAGE_SCN_ALIGN_128BYTES = 0x00800000,\r\n    al_IMAGE_SCN_ALIGN_256BYTES = 0x00900000,\r\n    al_IMAGE_SCN_ALIGN_512BYTES = 0x00A00000,\r\n    al_IMAGE_SCN_ALIGN_1024BYTES = 0x00B00000,\r\n    al_IMAGE_SCN_ALIGN_2048BYTES = 0x00C00000,\r\n    al_IMAGE_SCN_ALIGN_4096BYTES = 0x00D00000,\r\n    al_IMAGE_SCN_ALIGN_8192BYTES = 0x00E00000,\r\n\r\n    IMAGE_SCN_LNK_NRELOC_OVFL = 0x01000000,\r\n    IMAGE_SCN_MEM_DISCARDABLE = 0x02000000,\r\n    IMAGE_SCN_MEM_NOT_CACHED = 0x04000000,\r\n    IMAGE_SCN_MEM_NOT_PAGED = 0x08000000,\r\n    IMAGE_SCN_MEM_SHARED = 0x10000000,\r\n    IMAGE_SCN_MEM_EXECUTE = 0x20000000,\r\n    IMAGE_SCN_MEM_READ = 0x40000000,\r\n    IMAGE_SCN_MEM_WRITE = 0x80000000,\r\n\r\n    IMAGE_SCN_SCALE_INDEX = 0x00000001,\r\n}\r\n(ImageSection as any).__NAME__ = \"ImageSection\";\r\n(ImageSection as any).__FLAG__ = true;\r\n\r\n//\r\n// Metadata structures.\r\n//\r\n\r\nexport enum ComImageFlags {\r\n    COMIMAGE_FLAGS_ILONLY = 0x00000001,\r\n    COMIMAGE_FLAGS_32BITREQUIRED = 0x00000002,\r\n    COMIMAGE_FLAGS_IL_LIBRARY = 0x00000004,\r\n    COMIMAGE_FLAGS_STRONGNAMESIGNED = 0x00000008,\r\n    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 0x00000010,\r\n    COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x00010000,\r\n    COMIMAGE_FLAGS_32BITPREFERRED = 0x00020000,\r\n}\r\n(ComImageFlags as any).__NAME__ = \"ComImageFlags\";\r\n(ComImageFlags as any).__FLAG__ = true;\r\n\r\nexport const MetadataSignature = 0x424A5342;\r\n\r\nexport const enum MetadataStreamName {\r\n    Table = \"#~\",\r\n    Strings = \"#Strings\",\r\n    US = \"#US\",\r\n    GUID = \"#GUID\",\r\n    Blob = \"#Blob\",\r\n}\r\n\r\nexport const enum MetadataHeapSizeID {\r\n    String = 0,\r\n    GUID = 1,\r\n    Blob = 2,\r\n}\r\n\r\nexport enum MetadataTableIndex {\r\n    Module = 0x00,\r\n    TypeRef = 0x01,\r\n    TypeDef = 0x02,\r\n    FieldPtr = 0x03,\r\n    Field = 0x04,\r\n    MethodPtr = 0x05,\r\n    MethodDef = 0x06,\r\n    ParamPtr = 0x07,\r\n    Param = 0x08,\r\n    InterfaceImpl = 0x09,\r\n    MemberRef = 0x0A,\r\n    Constant = 0x0B,\r\n    CustomAttribute = 0x0C,\r\n    FieldMarshal = 0x0D,\r\n    DeclSecurity = 0x0E,\r\n    ClassLayout = 0x0F,\r\n    FieldLayout = 0x10,\r\n    StandAloneSig = 0x11,\r\n    EventMap = 0x12,\r\n    EventPtr = 0x13,\r\n    Event = 0x14,\r\n    PropertyMap = 0x15,\r\n    PropertyPtr = 0x16,\r\n    Property = 0x17,\r\n    MethodSemantics = 0x18,\r\n    MethodImpl = 0x19,\r\n    ModuleRef = 0x1A,\r\n    TypeSpec = 0x1B,\r\n    ImplMap = 0x1C,\r\n    FieldRVA = 0x1D,\r\n    ENCLog = 0x1E,\r\n    ENCMap = 0x1F,\r\n    Assembly = 0x20,\r\n    AssemblyProcessor = 0x21,\r\n    AssemblyOS = 0x22,\r\n    AssemblyRef = 0x23,\r\n    AssemblyRefProcessor = 0x24,\r\n    AssemblyRefOS = 0x25,\r\n    File = 0x26,\r\n    ExportedType = 0x27,\r\n    ManifestResource = 0x28,\r\n    NestedClass = 0x29,\r\n    GenericParam = 0x2A,\r\n    MethodSpec = 0x2B,\r\n    GenericParamConstraint = 0x2C,\r\n\r\n    String = 0x70,\r\n}\r\n(MetadataTableIndex as any).__NAME__ = \"MetadataTableIndex\";\r\n\r\nexport const NumberOfMdTables = 45;\r\n\r\nexport enum MetadataCodedTokenIndex {\r\n    TypeDefOrRef = 0,\r\n    HasConstant = 1,\r\n    HasCustomAttribute = 2,\r\n    HasFieldMarshall = 3,\r\n    HasDeclSecurity = 4,\r\n    MemberRefParent = 5,\r\n    HasSemantics = 6,\r\n    MethodDefOrRef = 7,\r\n    MemberForwarded = 8,\r\n    Implementation = 9,\r\n    CustomAttributeType = 10,\r\n    ResolutionScope = 11,\r\n    TypeOrMethodDef = 12,\r\n}\r\n(MetadataCodedTokenIndex as any).__NAME__ = \"MetadataCodedTokenIndex\";\r\n\r\nexport interface MetadataCodedTokenInfo {\r\n    tagSize: number;\r\n    tables: MetadataTableIndex[];\r\n}\r\n\r\nexport const ctc: MetadataCodedTokenInfo[] = [{\r\n    tagSize: 2, tables: [  // TypeDefOrRef\r\n        MetadataTableIndex.TypeDef,\r\n        MetadataTableIndex.TypeRef,\r\n        MetadataTableIndex.TypeSpec,\r\n    ]\r\n}, {\r\n    tagSize: 2, tables: [  // HasConstant\r\n        MetadataTableIndex.Field,\r\n        MetadataTableIndex.Param,\r\n        MetadataTableIndex.Property,\r\n    ]\r\n}, {\r\n    tagSize: 5, tables: [  // HasCustomAttribute\r\n        MetadataTableIndex.MethodDef,\r\n        MetadataTableIndex.Field,\r\n        MetadataTableIndex.TypeRef,\r\n        MetadataTableIndex.TypeDef,\r\n        MetadataTableIndex.Param,\r\n        MetadataTableIndex.InterfaceImpl,\r\n        MetadataTableIndex.MemberRef,\r\n        MetadataTableIndex.Module,\r\n        MetadataTableIndex.DeclSecurity,\r\n        MetadataTableIndex.Property,\r\n        MetadataTableIndex.Event,\r\n        MetadataTableIndex.StandAloneSig,\r\n        MetadataTableIndex.ModuleRef,\r\n        MetadataTableIndex.TypeSpec,\r\n        MetadataTableIndex.Assembly,\r\n        MetadataTableIndex.AssemblyRef,\r\n        MetadataTableIndex.File,\r\n        MetadataTableIndex.ExportedType,\r\n        MetadataTableIndex.ManifestResource,\r\n        MetadataTableIndex.GenericParam,\r\n        MetadataTableIndex.GenericParamConstraint,\r\n        MetadataTableIndex.MethodSpec,\r\n    ]\r\n}, {\r\n    tagSize: 1, tables: [  // HasFieldMarshall\r\n        MetadataTableIndex.Field,\r\n        MetadataTableIndex.Param,\r\n    ]\r\n}, {\r\n    tagSize: 2, tables: [  // HasDeclSecurity\r\n        MetadataTableIndex.TypeDef,\r\n        MetadataTableIndex.MethodDef,\r\n        MetadataTableIndex.Assembly,\r\n    ]\r\n}, {\r\n    tagSize: 3, tables: [  // MemberRefParent\r\n        MetadataTableIndex.TypeDef,\r\n        MetadataTableIndex.TypeRef,\r\n        MetadataTableIndex.ModuleRef,\r\n        MetadataTableIndex.MethodDef,\r\n        MetadataTableIndex.TypeSpec,\r\n    ]\r\n}, {\r\n    tagSize: 1, tables: [  // HasSemantics\r\n        MetadataTableIndex.Event,\r\n        MetadataTableIndex.Property,\r\n    ]\r\n}, {\r\n    tagSize: 1, tables: [  // MethodDefOrRef\r\n        MetadataTableIndex.MethodDef,\r\n        MetadataTableIndex.MemberRef,\r\n    ]\r\n}, {\r\n    tagSize: 1, tables: [  // MemberForwarded\r\n        MetadataTableIndex.Field,\r\n        MetadataTableIndex.MethodDef,\r\n    ]\r\n}, {\r\n    tagSize: 2, tables: [  // Implementation\r\n        MetadataTableIndex.File,\r\n        MetadataTableIndex.AssemblyRef,\r\n        MetadataTableIndex.ExportedType,\r\n    ]\r\n}, {\r\n    tagSize: 3, tables: [  // CustomAttributeType\r\n        MetadataTableIndex.TypeRef,\r\n        MetadataTableIndex.TypeDef,\r\n        MetadataTableIndex.MethodDef,\r\n        MetadataTableIndex.MemberRef,\r\n        MetadataTableIndex.String,\r\n    ]\r\n}, {\r\n    tagSize: 2, tables: [  // ResolutionScope\r\n        MetadataTableIndex.Module,\r\n        MetadataTableIndex.ModuleRef,\r\n        MetadataTableIndex.AssemblyRef,\r\n        MetadataTableIndex.TypeRef,\r\n    ]\r\n}, {\r\n    tagSize: 1, tables: [  // TypeOrMethodDef\r\n        MetadataTableIndex.TypeDef,\r\n        MetadataTableIndex.MethodDef,\r\n    ]\r\n}];\r\n\r\nexport enum AssemblyHashAlgorithm {\r\n    None = 0x0000,\r\n    MD5 = 0x8003,  // Reserved\r\n    SHA1 = 0x8004,\r\n}\r\n(AssemblyHashAlgorithm as any).__NAME__ = \"AssemblyHashAlgorithm\";\r\n\r\nexport enum CorAssemblyFlags {\r\n    PublicKey = 0x0001,\r\n\r\n    pa__Mask__ProcessorArchitecture = 0x0070,\r\n    pa_ProcessorArchitectureNone = 0x0000,\r\n    pa_ProcessorArchitectureMsil = 0x0010,\r\n    pa_ProcessorArchitectureX86 = 0x0020,\r\n    pa_ProcessorArchitectureIa64 = 0x0030,\r\n    pa_ProcessorArchitectureAmd64 = 0x0040,\r\n\r\n    ProcessorArchitectureSpecified = 0x0080,\r\n\r\n    EnableJitcompileTracking = 0x8000,\r\n    DisableJitcompileOptimizer = 0x4000,\r\n\r\n    Retargetable = 0x0100,\r\n}\r\n(CorAssemblyFlags as any).__NAME__ = \"CorAssemblyFlags\";\r\n(CorAssemblyFlags as any).__FLAG__ = true;\r\n\r\nexport enum CorEventAttr {\r\n    SpecialName = 0x0200,\r\n    RtSpecialName = 0x0400,\r\n}\r\n(CorEventAttr as any).__NAME__ = \"CorEventAttr\";\r\n(CorEventAttr as any).__FLAG__ = true;\r\n\r\nexport enum CorFieldAttr {\r\n    fa__Mask__FieldAccess = 0x0007,\r\n    fa_PrivateScope = 0x0000,\r\n    fa_Private = 0x0001,\r\n    fa_FamAndAssem = 0x0002,\r\n    fa_Assembly = 0x0003,\r\n    fa_Family = 0x0004,\r\n    fa_FamOrAssem = 0x0005,\r\n    fa_Public = 0x0006,\r\n\r\n    Static = 0x0010,\r\n    InitOnly = 0x0020,\r\n    Literal = 0x0040,\r\n    NotSerialized = 0x0080,\r\n\r\n    SpecialName = 0x0200,\r\n\r\n    PinvokeImpl = 0x2000,\r\n\r\n    RtSpecialName = 0x0400,\r\n    HasFieldMarshal = 0x1000,\r\n    HasDefault = 0x8000,\r\n    HasFieldRva = 0x0100,\r\n}\r\n(CorFieldAttr as any).__NAME__ = \"CorFieldAttr\";\r\n(CorFieldAttr as any).__FLAG__ = true;\r\n\r\nexport enum CorFileFlags {\r\n    ContainsMetaData = 0x0000,\r\n    ContainsNoMetaData = 0x0001,\r\n}\r\n(CorFileFlags as any).__NAME__ = \"CorFileFlags\";\r\n(CorFileFlags as any).__FLAG__ = true;\r\n\r\nexport enum CorGenericParamAttr {\r\n    v__Mask__Variance = 0x0003,\r\n    v_NonVariant = 0x0000,\r\n    v_Covariant = 0x0001,\r\n    v_Contravariant = 0x0002,\r\n\r\n    NoSpecialConstraint = 0x0000,\r\n    ReferenceTypeConstraint = 0x0004,\r\n    NotNullableValueTypeConstraint = 0x0008,\r\n    DefaultConstructorConstraint = 0x0010,\r\n}\r\n(CorGenericParamAttr as any).__NAME__ = \"CorGenericParamAttr\";\r\n(CorGenericParamAttr as any).__FLAG__ = true;\r\n\r\nexport enum CorPinvokeMap {\r\n    NoMangle = 0x0001,\r\n    cs__Mask__CharSet = 0x0006,\r\n    cs_CharSetNotSpec = 0x0000,\r\n    cs_CharSetAnsi = 0x0002,\r\n    cs_CharSetUnicode = 0x0004,\r\n    cs_CharSetAuto = 0x0006,\r\n\r\n    bf__Mask__BestFit = 0x0030,\r\n    bf_BestFitUseAssem = 0x0000,\r\n    bf_BestFitEnabled = 0x0010,\r\n    bf_BestFitDisabled = 0x0020,\r\n\r\n    touc__Mask__ThrowOnUnmappableChar = 0x3000,\r\n    touc_ThrowOnUnmappableCharUseAssem = 0x0000,\r\n    touc_ThrowOnUnmappableCharEnabled = 0x1000,\r\n    touc_ThrowOnUnmappableCharDisabled = 0x2000,\r\n\r\n    SupportsLastError = 0x0040,\r\n\r\n    cc__Mask__CallConv = 0x0700,\r\n    cc_CallConvWinapi = 0x0100,\r\n    cc_CallConvCdecl = 0x0200,\r\n    cc_CallConvStdcall = 0x0300,\r\n    cc_CallConvThiscall = 0x0400,\r\n    cc_CallConvFastcall = 0x0500,\r\n}\r\n(CorPinvokeMap as any).__NAME__ = \"CorPinvokeMap\";\r\n(CorPinvokeMap as any).__FLAG__ = true;\r\n\r\nexport enum CorManifestResourceFlags {\r\n    v__Mask__Visibility = 0x0007,\r\n    v_Public = 0x0001,\r\n    v_Private = 0x0002,\r\n}\r\n(CorManifestResourceFlags as any).__NAME__ = \"CorManifestResourceFlags\";\r\n(CorManifestResourceFlags as any).__FLAG__ = true;\r\n\r\nexport enum CorMethodAttr {\r\n    ma__Mask__MemberAccess = 0x0007,\r\n    ma_PrivateScope = 0x0000,\r\n    ma_Private = 0x0001,\r\n    ma_FamAndAssem = 0x0002,\r\n    ma_Assem = 0x0003,\r\n    ma_Family = 0x0004,\r\n    ma_FamOrAssem = 0x0005,\r\n    ma_Public = 0x0006,\r\n\r\n    Static = 0x0010,\r\n    Final = 0x0020,\r\n    Virtual = 0x0040,\r\n    HideBySig = 0x0080,\r\n\r\n    vl__Mask__VtableLayout = 0x0100,\r\n    vl_ReuseSlot = 0x0000,\r\n    vl_NewSlot = 0x0100,\r\n\r\n    CheckAccessOnOverride = 0x0200,\r\n    Abstract = 0x0400,\r\n    SpecialName = 0x0800,\r\n\r\n    PInvokeImpl = 0x2000,\r\n    UnmanagedExport = 0x0008,\r\n\r\n    RtSpecialName = 0x1000,\r\n    HasSecurity = 0x4000,\r\n    RequireSecObject = 0x8000,\r\n}\r\n(CorMethodAttr as any).__NAME__ = \"CorMethodAttr\";\r\n(CorMethodAttr as any).__FLAG__ = true;\r\n\r\nexport enum CorMethodImpl {\r\n    ct__Mask__CodeType = 0x0003,\r\n    ct_IL = 0x0000,\r\n    ct_Native = 0x0001,\r\n    ct_OptIL = 0x0002,\r\n    ct_Runtime = 0x0003,\r\n\r\n    m__Mask__Managed = 0x0004,\r\n    m_Unmanaged = 0x0004,\r\n    m_Managed = 0x0000,\r\n\r\n    ForwardRef = 0x0010,\r\n    PreserveSig = 0x0080,\r\n\r\n    InternalCall = 0x1000,\r\n\r\n    Synchronized = 0x0020,\r\n    NoInlining = 0x0008,\r\n}\r\n(CorMethodImpl as any).__NAME__ = \"CorMethodImpl\";\r\n(CorMethodImpl as any).__FLAG__ = true;\r\n\r\nexport enum CorMethodSemanticsAttr {\r\n    Setter = 0x0001,\r\n    Getter = 0x0002,\r\n    Other = 0x0004,\r\n    AddOn = 0x0008,\r\n    RemoveOn = 0x0010,\r\n    Fire = 0x0020,\r\n}\r\n(CorMethodSemanticsAttr as any).__NAME__ = \"CorMethodSemanticsAttr\";\r\n(CorMethodSemanticsAttr as any).__FLAG__ = true;\r\n\r\nexport enum CorParamAttr {\r\n    In = 0x0001,\r\n    Out = 0x0002,\r\n    Optional = 0x0010,\r\n\r\n    HasDefault = 0x1000,\r\n    HasFieldMarshal = 0x2000,\r\n\r\n    Unused = 0xcfe0,\r\n}\r\n(CorParamAttr as any).__NAME__ = \"CorParamAttr\";\r\n(CorParamAttr as any).__FLAG__ = true;\r\n\r\nexport enum CorPropertyAttr {\r\n    SpecialName = 0x0200,\r\n\r\n    RtSpecialName = 0x0400,\r\n    HasDefault = 0x1000,\r\n\r\n    Unused = 0xe9ff,\r\n}\r\n(CorPropertyAttr as any).__NAME__ = \"CorPropertyAttr\";\r\n(CorPropertyAttr as any).__FLAG__ = true;\r\n\r\nexport enum CorTypeAttr {\r\n    v__Mask__Visibility = 0x00000007,\r\n    v_NotPublic = 0x00000000,\r\n    v_Public = 0x00000001,\r\n    v_NestedPublic = 0x00000002,\r\n    v_NestedPrivate = 0x00000003,\r\n    v_NestedFamily = 0x00000004,\r\n    v_NestedAssembly = 0x00000005,\r\n    v_NestedFamAndAssem = 0x00000006,\r\n    v_NestedFamOrAssem = 0x00000007,\r\n\r\n    l__Mask__Layout = 0x00000018,\r\n    l_AutoLayout = 0x00000000,\r\n    l_SequentialLayout = 0x00000008,\r\n    l_ExplicitLayout = 0x00000010,\r\n\r\n    cs__Mask__Semantics = 0x00000060,\r\n    cs_Class = 0x00000000,\r\n    cs_Interface = 0x00000020,\r\n\r\n    Abstract = 0x00000080,\r\n    Sealed = 0x00000100,\r\n    SpecialName = 0x00000400,\r\n\r\n    Import = 0x00001000,\r\n    Serializable = 0x00002000,\r\n    WindowsRuntime = 0x00004000,\r\n\r\n    sf__Mask__StringFormat = 0x00030000,\r\n    sf_AnsiClass = 0x00000000,\r\n    sf_UnicodeClass = 0x00010000,\r\n    sf_AutoClass = 0x00020000,\r\n    sf_CustomFormatClass = 0x00030000,\r\n    CustomFormatMask = 0x00C00000,\r\n\r\n    BeforeFieldInit = 0x00100000,\r\n    Forwarder = 0x00200000,\r\n\r\n    RtSpecialName = 0x00000800,\r\n    HasSecurity = 0x00040000,\r\n}\r\n(CorTypeAttr as any).__NAME__ = \"CorTypeAttr\";\r\n(CorTypeAttr as any).__FLAG__ = true;\r\n\r\nexport enum CorDeclSecurity {\r\n    ActionNil = 0x0000,\r\n    Request = 0x0001,\r\n    Demand = 0x0002,\r\n    Assert = 0x0003,\r\n    Deny = 0x0004,\r\n    PermitOnly = 0x0005,\r\n    LinktimeCheck = 0x0006,\r\n    InheritanceCheck = 0x0007,\r\n    RequestMinimum = 0x0008,\r\n    RequestOptional = 0x0009,\r\n    RequestRefuse = 0x000a,\r\n    PrejitGrant = 0x000b,\r\n    PrejitDenied = 0x000c,\r\n    NonCasDemand = 0x000d,\r\n    NonCasLinkDemand = 0x000e,\r\n    NonCasInheritance = 0x000f,\r\n}\r\n(CorDeclSecurity as any).__NAME__ = \"CorDeclSecurity\";\r\n\r\nexport enum CorElementType {\r\n    End = 0x00,\r\n    Void = 0x01,\r\n    Boolean = 0x02,\r\n    Char = 0x03,\r\n    I1 = 0x04,\r\n    U1 = 0x05,\r\n    I2 = 0x06,\r\n    U2 = 0x07,\r\n    I4 = 0x08,\r\n    U4 = 0x09,\r\n    I8 = 0x0A,\r\n    U8 = 0x0B,\r\n    R4 = 0x0C,\r\n    R8 = 0x0D,\r\n    String = 0x0E,\r\n\r\n    Ptr = 0x0F,\r\n    ByRef = 0x10,\r\n\r\n    ValueType = 0x11,\r\n    Class = 0x12,\r\n    Var = 0x13,\r\n    Array = 0x14,\r\n    GenericInst = 0x15,\r\n    TypedByRef = 0x16,\r\n\r\n    I = 0x18,\r\n    U = 0x19,\r\n    FnPtr = 0x1B,\r\n    Object = 0x1C,\r\n    SzArray = 0x1D,\r\n\r\n    MVar = 0x1E,\r\n\r\n    CModReqd = 0x1F,\r\n    CModOpt = 0x20,\r\n    Internal = 0x21,\r\n\r\n    Modifier = 0x40,\r\n    Sentinel = 0x01 | Modifier,\r\n    Pinned = 0x05 | Modifier,\r\n    R4HFA = 0x06 | Modifier,\r\n    R8HFA = 0x07 | Modifier,\r\n}\r\n(CorElementType as any).__NAME__ = \"CorElementType\";\r\n","import * as S from \"../pe/structures\";\r\nimport { SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS } from \"constants\";\r\n\r\nexport function formatU1RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 2);\r\n}\r\n\r\nexport function formatU2RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 4);\r\n}\r\n\r\nexport function formatU4RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 8);\r\n}\r\n\r\nexport function formatU1Hex(d: number): string {\r\n    return `${formatU1RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU2Hex(d: number): string {\r\n    return `${formatU2RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU4Hex(d: number): string {\r\n    return `${formatU4RawHex(d)}h`;\r\n}\r\n\r\nexport function formatRawHex(d: number): string {\r\n    return d.toString(16).toUpperCase();\r\n}\r\n\r\nexport function formatHex(d: number): string {\r\n    return `${formatRawHex(d)}h`;\r\n}\r\n\r\nexport function formatDec(v: number): string {\r\n    return v.toLocaleString();\r\n}\r\n\r\nexport function formatHexDec(d: number): string {\r\n    return `${formatHex(d)}h (${formatDec(d)})`;\r\n}\r\n\r\nexport function formatBytes(bytes: Uint8Array, lineWidth: number = 16): string[] {\r\n    let lines: string[] = [];\r\n    for (let start = 0; start < bytes.length; start += lineWidth) {\r\n        const line = Array.from(bytes.subarray(start, start + lineWidth))\r\n            .map(b => formatU1RawHex(b)).join(\"-\");\r\n        lines.push(line);\r\n    }\r\n    return lines;\r\n}\r\n\r\nexport function formatStructTitle(s: S.FileData, title: string): string {\r\n    return `${title} [${formatU4Hex(s._offset)} - ${formatU4Hex(s._offset + s._size)} : ${formatHexDec(s._size)}]`;\r\n}\r\n\r\nexport function formatU1Field(name: string, f: S.U1Field, showDec?: boolean, desc?: W.ItemDescription[]): W.StructItem {\r\n    return formatUIntField(name, f, showDec, desc);\r\n}\r\n\r\nexport function formatU2Field(name: string, f: S.U2Field, showDec?: boolean, desc?: W.ItemDescription[]): W.StructItem {\r\n    return formatUIntField(name, f, showDec, desc);\r\n}\r\n\r\nexport function formatU4Field(name: string, f: S.U4Field, showDec?: boolean, desc?: W.ItemDescription[]): W.StructItem {\r\n    return formatUIntField(name, f, showDec, desc);\r\n}\r\n\r\nexport function formatU8Field(name: string, f: S.U8Field, showDec?: boolean, desc?: W.ItemDescription[]): W.StructItem {\r\n    let value = `${formatU4RawHex(f.high)} ${formatU4Hex(f.low)}`;\r\n\r\n    if (showDec && f.high < 0x1FFFFF) {\r\n        const long = f.high * 0x100000000 + f.low;\r\n        value += ` (${formatDec(long)})`;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value,\r\n        descriptions: desc\r\n    };\r\n}\r\n\r\nexport function formatCompressedUIntField(name: string, f: S.CompressedUIntField): W.StructItem {\r\n    return formatUIntField(name, f, true);\r\n}\r\n\r\nexport function formatBytesField(name: string, f: S.Field): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: \"\",\r\n    };\r\n}\r\n\r\nexport function formatStringField(name: string, f: S.StringField): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: `\"${f.value}\"`,\r\n    };\r\n}\r\n\r\nexport function formatGuidField(name: string, f: S.Field): W.StructItem {\r\n    const b = (n: number) => formatU1RawHex(f.data[n]);\r\n    const value = \"{\" + b(3) + b(2) + b(1) + b(0) + \"-\"\r\n        + b(5) + b(4) + \"-\" + b(7) + b(6) + \"-\" + b(8) + b(9) + \"-\"\r\n        + b(10) + b(11) + b(12) + b(13) + b(14) + b(15) + \"}\";\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value,\r\n    };\r\n}\r\n\r\nexport function formatEnumField<T>(name: string, f: S.EnumField<T>, enumType: any): W.StructItem {\r\n    const desc = formatEnumDesc(enumType, f.value, f._size);\r\n    return formatUIntField(name, f as any as S.UIntField, false, [desc]);\r\n}\r\n\r\nfunction padZeroLeft(str: string, len: number): string {\r\n    if (str.length < len) {\r\n        return \"0\".repeat(len - str.length) + str;\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n\r\nfunction formatUIntField(name: string, f: S.UIntField, showDec?: boolean, desc?: W.ItemDescription[]): W.StructItem {\r\n    let hex: string;\r\n    switch (f._size) {\r\n        case 1: hex = formatU1Hex(f.value); break;\r\n        case 2: hex = formatU2Hex(f.value); break;\r\n        case 4: hex = formatU4Hex(f.value); break;\r\n        default: hex = f.value.toString(16).toUpperCase(); break;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: showDec ? `${hex} (${formatDec(f.value)})` : hex,\r\n        descriptions: desc\r\n    }\r\n}\r\n\r\nfunction formatEnumDesc<T>(enumType: any, v: T, sz: number): W.ItemGroupedLinesDescription {\r\n    const groups = !enumType.__FLAG__ ?\r\n        [formatNonFlagEnum(enumType, v, sz)] : formatFlagEnum(enumType, v, sz);\r\n\r\n    return {\r\n        type: W.ItemDescriptionType.GRPL,\r\n        groups\r\n    };\r\n}\r\n\r\nfunction formatNonFlagEnum<T>(enumType: any, v: T, sz: number): { lines: string[] } {\r\n    let lines: string[] = [];\r\n\r\n    let fmt: (d: number) => string;\r\n    switch (sz) {\r\n        case 1: fmt = formatU1Hex; break;\r\n        case 2: fmt = formatU2Hex; break;\r\n        case 4: fmt = formatU4Hex; break;\r\n        default: fmt = formatHex; break;\r\n    }\r\n\r\n    for (let key in enumType) {\r\n        if (typeof enumType[key] === \"number\") {\r\n            const val = enumType[key];\r\n            if (v === val) {\r\n                lines.push(key);\r\n            }\r\n        }\r\n    }\r\n\r\n    return { lines };\r\n}\r\n\r\nfunction formatFlagEnum<T>(enumType: any, v: T, sz: number): {\r\n    title?: string;\r\n    lines: string[];\r\n}[] {\r\n    let lines: string[] = [];\r\n\r\n    const grpList = getFlagEnumGroups(enumType, sz);\r\n\r\n    for (const key in grpList) {\r\n        if (grpList[key].mask == 0) {\r\n            grpList[key].values\r\n                .filter(ev => (ev.value & (v as any as number)) != 0)\r\n                .forEach(ev => lines.push(ev.name));\r\n        } else {\r\n            const mv = grpList[key].mask & (v as any as number);\r\n            const sv = grpList[key].values.filter(ev => ev.value == mv).shift();\r\n            if (sv) lines.push(sv.name);\r\n        }\r\n    }\r\n\r\n    return [{ lines }];\r\n}\r\n\r\nfunction getFlagEnumGroups(enumType: any, sz: number): FlagEnumGroupList {\r\n    if (!flagEnumGroupCache[enumType.__NAME__]) {\r\n        buildEnumGroups(enumType, sz);\r\n    }\r\n\r\n    return flagEnumGroupCache[enumType.__NAME__];\r\n}\r\n\r\nfunction buildEnumGroups(enumType: any, sz: number): void {\r\n    let allValues: { name: string, value: number }[] = [];\r\n\r\n    for (const key in enumType) {\r\n        if (typeof enumType[key] === \"number\") {\r\n            allValues.push({ name: key, value: enumType[key] });\r\n        }\r\n    }\r\n\r\n    let grpList: FlagEnumGroupList = {\r\n        \"\": { mask: 0, values: [] }\r\n    };\r\n\r\n    let fmt: (d: number) => string;\r\n    switch (sz) {\r\n        case 1: fmt = formatU1Hex; break;\r\n        case 2: fmt = formatU2Hex; break;\r\n        case 4: fmt = formatU4Hex; break;\r\n        default: fmt = formatHex; break;\r\n    }\r\n\r\n    let grpName = \"\", grpPrefix = \"\", grpMask = 0;\r\n\r\n    for (const v of allValues) {\r\n        // If it's a valud of a group...\r\n        if (grpPrefix && v.name.startsWith(grpPrefix)) {\r\n            grpList[grpName] = grpList[grpName] || { mask: grpMask, values: [] };\r\n            grpList[grpName].values.push({\r\n                name: `(${fmt(v.value)}) ${v.name.substring(grpPrefix.length, v.name.length)}`,\r\n                value: v.value\r\n            });\r\n            continue;\r\n        }\r\n\r\n        // If it's a group mask...\r\n        const rs = regexFlagEnumGroupMask.exec(v.name);\r\n        if (rs) {\r\n            grpName = rs[2];\r\n            grpPrefix = rs[1];\r\n            grpMask = v.value;\r\n            continue;\r\n        } else {\r\n            grpName = \"\";\r\n            grpPrefix = \"\";\r\n            grpMask = 0;\r\n        }\r\n\r\n        // If it's a non-grouped value...\r\n        grpList[\"\"].values.push({\r\n            name: `(${fmt(v.value)}) ${v.name}`,\r\n            value: v.value\r\n        });\r\n    }\r\n\r\n    flagEnumGroupCache[enumType.__NAME__] = grpList;\r\n}\r\n\r\ninterface FlagEnumGroup {\r\n    mask: number;\r\n    values: {\r\n        name: string, value: number\r\n    }[];\r\n}\r\n\r\ninterface FlagEnumGroupList {\r\n    [key /* group name */: string]: FlagEnumGroup;\r\n}\r\n\r\ninterface FlagEnumGroupCache {\r\n    [key /* enum name */: string]: FlagEnumGroupList;\r\n}\r\n\r\nlet flagEnumGroupCache: FlagEnumGroupCache = {};\r\n\r\nconst regexFlagEnumGroupMask = /^([a-z]+_)_Mask__([a-zA-Z]+)$/;","export function calculatePadding(dataSize: number, align: number = 4): number {\n    const r = dataSize % align;\n    if (r == 0) {\n        return 0;\n    } else {\n        return align - r;\n    }\n}\n\nexport function count1(n: number) {\n    let c = 0;\n    for (let i = 0, mask = 1; i < 32; i++ , mask <<= 1) {\n        if (n & mask)\n            c++;\n    }\n    return c;\n}\n\nexport function isSetLong(high: number, low: number, bit: number): boolean {\n    return bit >= 0 && bit < 64 &&\n        (bit < 32 && ((low & (1 << bit)) != 0)) ||\n        (bit >= 32 && (high & (1 << (bit - 32))) != 0);\n}\n\nexport function decompressUint(data: Uint8Array): number {\n    if ((data[0] & 0x80) == 0 && data.buffer.byteLength == 1)\n        return data[0];\n    else if ((data[0] & 0xC0) == 0x80 && data.buffer.byteLength == 2)\n        return (data[0] & 0x3F) << 8 | data[1];\n    else if ((data[0] & 0xE0) == 0xC0 && data.buffer.byteLength == 4)\n        return (data[0] & 0x1F) << 24 | data[1] << 16 | data[2] << 8 | data[3];\n    else\n        throw new RangeError();\n}\n\nexport function decompressInt(data: Uint8Array): number {\n    const u = decompressUint(data);\n    if ((u & 0x00000001) == 0)\n        return (u >> 1);\n\n    const fb = data[0];\n    if ((fb & 0x80) == 0)\n        return (u >> 1) | 0xFFFFFFC0;\n    else if ((fb & 0xC0) == 0x80)\n        return (u >> 1) | 0xFFFFE000;\n    else if ((fb & 0xE0) == 0xC0)\n        return (u >> 1) | 0xF0000000;\n    else\n        throw new RangeError();\n}\n\nexport function getCompressedIntSize(firstByte: number): number {\n    if ((firstByte & 0xFFFFFF00) != 0)\n        throw new RangeError();\n    else if ((firstByte & 0x80) == 0)\n        return 1;\n    else if ((firstByte & 0xC0) == 0x80)\n        return 2;\n    else if ((firstByte & 0xE0) == 0xC0)\n        return 4;\n    else\n        throw new RangeError();\n}","import { PEImage } from \"../pe/image\";\r\nimport * as F from \"../pe/image-flags\";\r\n\r\nexport function generateNavList(pe: PEImage): W.NavData[] {\r\n    let navList: W.NavData[] = [generateHeadersNavData(pe)];\r\n\r\n    const navMD = generateMDHeadersNavData(pe);\r\n    if (navMD) navList.push(navMD);\r\n\r\n    return navList;\r\n}\r\n\r\nfunction generateHeadersNavData(pe: PEImage): W.NavData {\r\n    const pageID = W.PageID.HEADERS;\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.HEADERS },\r\n        children: [{\r\n            target: { pageID, title: W.KnownTitle.DOS_HEADER, elemID: W.KnownElemID.DOS_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.PE_SIGNATURE, elemID: W.KnownElemID.PE_SIGNATURE }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.FILE_HEADER, elemID: W.KnownElemID.FILE_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.OPTIONAL_HEADER, elemID: W.KnownElemID.OPTIONAL_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.DATA_DIRECTORIES, elemID: W.KnownElemID.DATA_DIRECTORIES }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.SECTION_HEADERS, elemID: W.KnownElemID.SECTION_HEADERS }\r\n        }]\r\n    };\r\n}\r\n\r\nfunction generateMDHeadersNavData(pe: PEImage): W.NavData | undefined {\r\n    const pageID = W.PageID.MD_HEADERS;\r\n\r\n    if (!pe.isManaged()) return undefined;\r\n\r\n    let children: W.NavData[] = [{\r\n        target: { pageID, title: W.KnownTitle.CLI_HEADER, elemID: W.KnownElemID.CLI_HEADER }\r\n    }];\r\n\r\n    if (pe.hasMetadata()) {\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.MD_ROOT, elemID: W.KnownElemID.MD_ROOT }\r\n        });\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.MDS_HEADERS, elemID: W.KnownElemID.MDS_HEADERS }\r\n        });\r\n    }\r\n\r\n    if (pe.hasStrongNameSignature()) {\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.SN_SIG, elemID: W.KnownElemID.SN_SIG }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.Strings)) {\r\n        children.push({\r\n            target: { pageID: W.PageID.MDS_STRINGS, title: W.KnownTitle.MDS_STRINGS, pageNum: 0 }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.US)) {\r\n        children.push({\r\n            target: { pageID: W.PageID.MDS_US, title: W.KnownTitle.MDS_US, pageNum: 0 }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.GUID)) {\r\n        children.push({\r\n            target: { pageID: W.PageID.MDS_GUID, title: W.KnownTitle.MDS_GUID, pageNum: 0 }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.Blob)) {\r\n        children.push({\r\n            target: { pageID: W.PageID.MDS_BLOB, title: W.KnownTitle.MDS_BLOB, pageNum: 0 }\r\n        });\r\n    }\r\n\r\n    if (pe.getMetadataStreamHeader(F.MetadataStreamName.Table)) {\r\n        children.push(generateMDTablesNavData(pe));\r\n    }\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.MD_HEADERS },\r\n        children\r\n    };\r\n}\r\n\r\nfunction generateMDTablesNavData(pe: PEImage): W.NavData {\r\n    const pageID = W.PageID.MDS_TABLE;\r\n    const h = pe.getMetadataTableHeader();\r\n\r\n    let children: W.NavData[] = [];\r\n    const ti = F.MetadataTableIndex;\r\n    const buildMdtNav = (t: F.MetadataTableIndex) => ({\r\n        target: {\r\n            pageID: W.PageID.MDT_TBL,\r\n            title: `${ti[t]} (${pe.getMetadataTableRows(t).toLocaleString()})`,\r\n            subID: ti[t],\r\n            pageNum: 0\r\n        }\r\n    } as W.NavData);\r\n\r\n    for (let tid = 0; tid < F.NumberOfMdTables; tid++) {\r\n        if (pe.isMetadataTableValid(tid)) {\r\n            children.push(buildMdtNav(tid));\r\n        }\r\n    }\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.MDS_TABLE },\r\n        children\r\n    };\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as U from \"../pe/utils\";\r\nimport * as FM from \"./formatter\";\r\nimport * as G from \"./generator\";\r\n\r\nexport function generateMdsStringsPageData(pe: PEImage,\r\n    cache: G.GeneratorCache, cfg: G.GeneratorConfig,\r\n    pgNum: number): W.PagedItemListPageData {\r\n\r\n    checkAndBuildCacheForMdsStrings(pe, cache, cfg);\r\n    const items = cache.mdsStrings && cache.mdsStrings.pages[pgNum];\r\n\r\n    const titleOf = (i: number) => `#String [${FM.formatHexDec(i)}]`;\r\n\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_STRINGS,\r\n            title: W.KnownTitle.MDS_STRINGS,\r\n        },\r\n        items: {\r\n            title: W.KnownTitle.MDS_STRINGS,\r\n            groups: [{\r\n                title: \"\",\r\n                items: items && items.map(index =>\r\n                    FM.formatStringField(titleOf(index), pe.getMdsStringsItem(index)!)\r\n                )\r\n            }]\r\n        },\r\n        paging: {\r\n            currentPageNumber: pgNum,\r\n            pageNavList: cache.mdsStrings!.pages.map((v, i) => ({\r\n                title: `Page [${i + 1}] (${titleOf(v[0])} - ${titleOf(v[v.length - 1])}})`,\r\n                pageID: W.PageID.MDS_STRINGS,\r\n                pageNum: i\r\n            }))\r\n        }\r\n    };\r\n}\r\n\r\nexport function generateMdsUSPageData(pe: PEImage,\r\n    cache: G.GeneratorCache, cfg: G.GeneratorConfig,\r\n    pgNum: number): W.PagedItemListPageData {\r\n\r\n    checkAndBuildCacheForMdsUS(pe, cache, cfg);\r\n    const items = cache.mdsUS && cache.mdsUS.pages[pgNum];\r\n\r\n    const titleOf = (i: number) => `#US [${FM.formatHexDec(i)}]`;\r\n\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_US,\r\n            title: W.KnownTitle.MDS_US,\r\n        },\r\n        items: {\r\n            title: W.KnownTitle.MDS_US,\r\n            groups: items && items.map(index => {\r\n                const item = pe.getMdsUSItem(index)!;\r\n                return {\r\n                    title: titleOf(index),\r\n                    items: [\r\n                        FM.formatCompressedUIntField(\"Size\", item.Size),\r\n                        FM.formatStringField(\"Value\", item.Value),\r\n                        FM.formatBytesField(\"Suffix\", item.Suffix),\r\n                    ]\r\n                }\r\n            })\r\n        },\r\n        paging: {\r\n            currentPageNumber: pgNum,\r\n            pageNavList: cache.mdsUS!.pages.map((v, i) => ({\r\n                title: `Page [${i + 1}] (${titleOf(v[0])} - ${titleOf(v[v.length - 1])}})`,\r\n                pageID: W.PageID.MDS_US,\r\n                pageNum: i\r\n            }))\r\n        }\r\n    };\r\n}\r\n\r\nexport function generateMdsBlobPageData(pe: PEImage,\r\n    cache: G.GeneratorCache, cfg: G.GeneratorConfig,\r\n    pgNum: number): W.PagedItemListPageData {\r\n\r\n    checkAndBuildCacheForMdsBlob(pe, cache, cfg);\r\n    const items = cache.mdsBlob && cache.mdsBlob.pages[pgNum];\r\n\r\n    const titleOf = (i: number) => `#Blob [${FM.formatHexDec(i)}]`;\r\n\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_BLOB,\r\n            title: W.KnownTitle.MDS_BLOB,\r\n        },\r\n        items: {\r\n            title: W.KnownTitle.MDS_BLOB,\r\n            groups: items && items.map(index => {\r\n                const item = pe.getMdsBlobItem(index)!;\r\n                return {\r\n                    title: titleOf(index),\r\n                    items: [\r\n                        FM.formatCompressedUIntField(\"Size\", item.Size),\r\n                        FM.formatBytesField(\"Value\", item.Value),\r\n                    ]\r\n                }\r\n            })\r\n        },\r\n        paging: {\r\n            currentPageNumber: pgNum,\r\n            pageNavList: cache.mdsBlob!.pages.map((v, i) => ({\r\n                title: `Page [${i + 1}] (${titleOf(v[0])} - ${titleOf(v[v.length - 1])}})`,\r\n                pageID: W.PageID.MDS_BLOB,\r\n                pageNum: i\r\n            }))\r\n        }\r\n    };\r\n}\r\n\r\nexport function generateMdsGuidPageData(pe: PEImage): W.PagedItemListPageData {\r\n    const titleOf = (i: number) => `#GUID[${FM.formatHexDec(i)}]`;\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_GUID,\r\n            title: W.KnownTitle.MDS_GUID,\r\n        },\r\n        items: {\r\n            title: W.KnownTitle.MDS_GUID,\r\n            groups: [{\r\n                title: \"\",\r\n                items: pe.getMdsGuidItems()!.items.map((v, i) =>\r\n                    FM.formatGuidField(titleOf(i + 1), v))\r\n            }]\r\n        },\r\n    };\r\n}\r\n\r\nfunction checkAndBuildCacheForMdsStrings(pe: PEImage, cache: G.GeneratorCache, cfg: G.GeneratorConfig): void {\r\n    if (cache.mdsStrings) return;\r\n\r\n    const mdRoot = pe.getMetadataRoot();\r\n    if (!mdRoot) return;\r\n\r\n    const sh = pe.getMetadataStreamHeader(F.MetadataStreamName.Strings);\r\n    if (!sh) return;\r\n\r\n    let indexes: number[] = [0];\r\n    const base = mdRoot._offset + sh.Offset.value;\r\n    for (let p = 1; p < sh.Size.value; p++) {\r\n        if (pe.getU1(base + p - 1) == 0) {\r\n            indexes.push(p);\r\n        }\r\n    }\r\n\r\n    cache.mdsStrings = {\r\n        pages: putIndexToPages(indexes, cfg.mdsOffsetListPageSize)\r\n    };\r\n}\r\n\r\nfunction checkAndBuildCacheForMdsUS(pe: PEImage, cache: G.GeneratorCache, cfg: G.GeneratorConfig): void {\r\n    if (cache.mdsUS) return;\r\n\r\n    const mdRoot = pe.getMetadataRoot();\r\n    if (!mdRoot) return;\r\n\r\n    const sh = pe.getMetadataStreamHeader(F.MetadataStreamName.US);\r\n    if (!sh) return;\r\n\r\n    const indexes = getBlobIndexes(pe, mdRoot._offset + sh.Offset.value, sh.Size.value);\r\n\r\n    cache.mdsUS = {\r\n        pages: putIndexToPages(indexes, cfg.mdsOffsetListPageSize)\r\n    };\r\n}\r\n\r\nfunction checkAndBuildCacheForMdsBlob(pe: PEImage, cache: G.GeneratorCache, cfg: G.GeneratorConfig): void {\r\n    if (cache.mdsBlob) return;\r\n\r\n    const mdRoot = pe.getMetadataRoot();\r\n    if (!mdRoot) return;\r\n\r\n    const sh = pe.getMetadataStreamHeader(F.MetadataStreamName.Blob);\r\n    if (!sh) return;\r\n\r\n    const indexes = getBlobIndexes(pe, mdRoot._offset + sh.Offset.value, sh.Size.value);\r\n\r\n    cache.mdsBlob = {\r\n        pages: putIndexToPages(indexes, cfg.mdsOffsetListPageSize)\r\n    };\r\n}\r\n\r\nfunction getBlobIndexes(pe: PEImage, base: number, size: number): number[] {\r\n    let indexes: number[] = [];\r\n    let p = 0;\r\n\r\n    while (p < size) {\r\n        indexes.push(p);\r\n        const dtsz = U.getCompressedIntSize(pe.getU1(base + p));\r\n        const szval = U.decompressUint(pe.getData(base + p, dtsz));\r\n        p += szval + dtsz;\r\n    }\r\n\r\n    return indexes;\r\n}\r\n\r\nfunction putIndexToPages(indexes: number[], pageSize: number): G.MdsOffsetListPageCache[] {\r\n    let pages: G.MdsOffsetListPageCache[] = [];\r\n    let pageItems: G.MdsOffsetListPageCache = [];\r\n\r\n    for (let pStart = 0, pEnd = 0; pStart < indexes.length; pStart = pEnd) {\r\n        while (indexes[pEnd] - indexes[pStart] < pageSize\r\n            && pEnd < indexes.length) {\r\n            pageItems.push(indexes[pEnd++]);\r\n        }\r\n        pages.push(pageItems.slice());\r\n        pageItems = [];\r\n    }\r\n\r\n    return pages;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as FM from \"./formatter\";\r\nimport * as G from \"./generator\";\r\n\r\nexport function generateMdsTablePageData(pe: PEImage): W.MdsTablePageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_TABLE,\r\n            title: W.KnownTitle.MDS_TABLE,\r\n        },\r\n        tableHeader: generateMDTableHeader(pe),\r\n        tableInfo: generateMDTableList(pe),\r\n    };\r\n}\r\n\r\nfunction generateMDTableHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.MDT_HEADER,\r\n        elemID: W.KnownElemID.MDT_HEADER,\r\n    };\r\n\r\n    const h = pe.getMetadataTableHeader();\r\n    if (!h) return s;\r\n\r\n    s.groups = [{\r\n        title: \"\",\r\n        items: [\r\n            FM.formatU4Field(\"Reserved\", h.Reserved),\r\n            FM.formatU1Field(\"MajorVersion\", h.MajorVersion, true),\r\n            FM.formatU1Field(\"MinorVersion\", h.MinorVersion, true),\r\n            FM.formatU1Field(\"HeapSizes\", h.HeapSizes),\r\n            FM.formatU1Field(\"Reserved2\", h.Reserved2),\r\n            FM.formatU8Field(\"Valid\", h.Valid),\r\n            FM.formatU8Field(\"Sorted\", h.Sorted),\r\n        ]\r\n    }, {\r\n        title: \"Rows\",\r\n        items: h.Rows.items.map((v, i) => FM.formatU4Field(`Rows[${i}]`, v, true))\r\n    }];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateMDTableList(pe: PEImage): W.MdTableInfo[] {\r\n    let s: W.MdTableInfo[] = [];\r\n    for (let id = 0; id < F.NumberOfMdTables; id++) {\r\n        s.push({\r\n            index: `${FM.formatU1Hex(id)} (${FM.formatDec(id)})`,\r\n            name: F.MetadataTableIndex[id],\r\n            valid: pe.isMetadataTableValid(id),\r\n            sorted: pe.isMetadataTableSorted(id),\r\n            rows: FM.formatDec(pe.getMetadataTableRows(id)),\r\n        });\r\n    }\r\n    return s;\r\n}\r\n\r\nexport function generateMdtPageData(\r\n    pe: PEImage,\r\n    tid: F.MetadataTableIndex,\r\n    cfg: G.GeneratorConfig,\r\n    pgNum: number): W.PagedItemListPageData {\r\n    const ti = F.MetadataTableIndex;\r\n    const title = ti[tid] + \" Table\";\r\n\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDT_TBL,\r\n            subID: ti[tid],\r\n            title,\r\n        },\r\n        items: generateTalbeItems(pe, tid, cfg, pgNum, title),\r\n        paging: generateMdtPaging(pe, tid, cfg, pgNum)\r\n    };\r\n}\r\n\r\nfunction generateTalbeItems(\r\n    pe: PEImage,\r\n    tid: F.MetadataTableIndex,\r\n    cfg: G.GeneratorConfig,\r\n    pgNum: number,\r\n    title: string): W.GroupedStruct {\r\n    const { start, end } = getRidOnPage(pe, tid, cfg, pgNum);\r\n\r\n    let loader: (rid: number) => S.FileData;\r\n    let builder: (item: S.FileData) => W.StructItem[];\r\n\r\n    switch (tid) {\r\n        case F.MetadataTableIndex.Module:\r\n            loader = pe.getMdtModuleItem.bind(pe);\r\n            builder = generateMdtModuleItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.TypeRef:\r\n            loader = pe.getMdtTypeRefItem.bind(pe);\r\n            builder = generateMdtTypeRefItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.TypeDef:\r\n            loader = pe.getMdtTypeDefItem.bind(pe);\r\n            builder = generateMdtTypeDefItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.FieldPtr:\r\n            loader = pe.getMdtFieldPtrItem.bind(pe);\r\n            builder = generateMdtFieldPtrItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.Field:\r\n            loader = pe.getMdtFieldItem.bind(pe);\r\n            builder = generateMdtFieldItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.MethodPtr:\r\n            loader = pe.getMdtMethodPtrItem.bind(pe);\r\n            builder = generateMdtMethodPtrItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.MethodDef:\r\n            loader = pe.getMdtMethodDefItem.bind(pe);\r\n            builder = generateMdtMethodDefItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ParamPtr:\r\n            loader = pe.getMdtParamPtrItem.bind(pe);\r\n            builder = generateMdtParamPtrItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.Param:\r\n            loader = pe.getMdtParamItem.bind(pe);\r\n            builder = generateMdtParamItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.InterfaceImpl:\r\n            loader = pe.getMdtInterfaceImplItem.bind(pe);\r\n            builder = generateMdtInterfaceImplItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.MemberRef:\r\n            loader = pe.getMdtMemberRefItem.bind(pe);\r\n            builder = generateMdtMemberRefItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.Constant:\r\n            loader = pe.getMdtConstantItem.bind(pe);\r\n            builder = generateMdtConstantItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.CustomAttribute:\r\n            loader = pe.getMdtCustomAttributeItem.bind(pe);\r\n            builder = generateMdtCustomAttributeItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.FieldMarshal:\r\n            loader = pe.getMdtFieldMarshalItem.bind(pe);\r\n            builder = generateMdtFieldMarshalItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.DeclSecurity:\r\n            loader = pe.getMdtDeclSecurityItem.bind(pe);\r\n            builder = generateMdtDeclSecurityItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ClassLayout:\r\n            loader = pe.getMdtClassLayoutItem.bind(pe);\r\n            builder = generateMdtClassLayoutItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.FieldLayout:\r\n            loader = pe.getMdtFieldLayoutItem.bind(pe);\r\n            builder = generateMdtFieldLayoutItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.StandAloneSig:\r\n            loader = pe.getMdtStandAloneSigItem.bind(pe);\r\n            builder = generateMdtStandAloneSigItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.EventMap:\r\n            loader = pe.getMdtEventMapItem.bind(pe);\r\n            builder = generateMdtEventMapItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.EventPtr:\r\n            loader = pe.getMdtEventPtrItem.bind(pe);\r\n            builder = generateMdtEventPtrItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.Event:\r\n            loader = pe.getMdtEventItem.bind(pe);\r\n            builder = generateMdtEventItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.PropertyMap:\r\n            loader = pe.getMdtPropertyMapItem.bind(pe);\r\n            builder = generateMdtPropertyMapItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.PropertyPtr:\r\n            loader = pe.getMdtPropertyPtrItem.bind(pe);\r\n            builder = generateMdtPropertyPtrItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.Property:\r\n            loader = pe.getMdtPropertyItem.bind(pe);\r\n            builder = generateMdtPropertyItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.MethodSemantics:\r\n            loader = pe.getMdtMethodSemanticsItem.bind(pe);\r\n            builder = generateMdtMethodSemanticsItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.MethodImpl:\r\n            loader = pe.getMdtMethodImplItem.bind(pe);\r\n            builder = generateMdtMethodImplItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ModuleRef:\r\n            loader = pe.getMdtModuleRefItem.bind(pe);\r\n            builder = generateMdtModuleRefItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.TypeSpec:\r\n            loader = pe.getMdtTypeSpecItem.bind(pe);\r\n            builder = generateMdtTypeSpecItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ImplMap:\r\n            loader = pe.getMdtImplMapItem.bind(pe);\r\n            builder = generateMdtImplMapItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.FieldRVA:\r\n            loader = pe.getMdtFieldRVAItem.bind(pe);\r\n            builder = generateMdtFieldRVAItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ENCLog:\r\n            loader = pe.getMdtENCLogItem.bind(pe);\r\n            builder = generateMdtENCLogItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ENCMap:\r\n            loader = pe.getMdtENCMapItem.bind(pe);\r\n            builder = generateMdtENCMapItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.Assembly:\r\n            loader = pe.getMdtAssemblyItem.bind(pe);\r\n            builder = generateMdtAssemblyItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.AssemblyProcessor:\r\n            loader = pe.getMdtAssemblyProcessorItem.bind(pe);\r\n            builder = generateMdtAssemblyProcessorItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.AssemblyOS:\r\n            loader = pe.getMdtAssemblyOSItem.bind(pe);\r\n            builder = generateMdtAssemblyOSItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.AssemblyRef:\r\n            loader = pe.getMdtAssemblyRefItem.bind(pe);\r\n            builder = generateMdtAssemblyRefItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.AssemblyRefProcessor:\r\n            loader = pe.getMdtAssemblyRefProcessorItem.bind(pe);\r\n            builder = generateMdtAssemblyRefProcessorItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.AssemblyRefOS:\r\n            loader = pe.getMdtAssemblyRefOSItem.bind(pe);\r\n            builder = generateMdtAssemblyRefOSItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.File:\r\n            loader = pe.getMdtFileItem.bind(pe);\r\n            builder = generateMdtFileItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ExportedType:\r\n            loader = pe.getMdtExportedTypeItem.bind(pe);\r\n            builder = generateMdtExportedTypeItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.ManifestResource:\r\n            loader = pe.getMdtManifestResourceItem.bind(pe);\r\n            builder = generateMdtManifestResourceItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.NestedClass:\r\n            loader = pe.getMdtNestedClassItem.bind(pe);\r\n            builder = generateMdtNestedClassItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.GenericParam:\r\n            loader = pe.getMdtGenericParamItem.bind(pe);\r\n            builder = generateMdtGenericParamItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.MethodSpec:\r\n            loader = pe.getMdtMethodSpecItem.bind(pe);\r\n            builder = generateMdtMethodSpecItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        case F.MetadataTableIndex.GenericParamConstraint:\r\n            loader = pe.getMdtGenericParamConstraintItem.bind(pe);\r\n            builder = generateMdtGenericParamConstraintItems as (item: S.FileData) => W.StructItem[];\r\n            break;\r\n        default:\r\n            return { title };\r\n    }\r\n\r\n    return generateSignleMdtTableItems(pe, tid, title, start, end, loader, builder);\r\n}\r\n\r\nfunction generateSignleMdtTableItems<T>(\r\n    pe: PEImage, tid: F.MetadataTableIndex, title: string, start: number, end: number,\r\n    loader: (rid: number) => T,\r\n    builder: (item: T) => W.StructItem[]): W.GroupedStruct {\r\n    let items: T[] = [];\r\n    for (let rid = start; rid <= end; rid++) {\r\n        items.push(loader(rid));\r\n    }\r\n\r\n    return {\r\n        title,\r\n        groups: items.map((v, i) => ({\r\n            title: `${F.MetadataTableIndex[tid]} [${FM.formatHexDec(start + i)}]`,\r\n            items: builder(v)\r\n        }))\r\n    };\r\n}\r\n\r\nfunction generateMdtModuleItems(item: S.MdtModuleItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU2Field(\"Generation\", item.Generation),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Mvid\", item.Mvid),\r\n        FM.formatU4Field(\"EncId\", item.EncId),\r\n        FM.formatU4Field(\"EncBaseId\", item.EncBaseId),\r\n    ];\r\n}\r\n\r\nfunction generateMdtTypeRefItems(item: S.MdtTypeRefItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"ResolutionScope\", item.ResolutionScope),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Namespace\", item.Namespace),\r\n    ];\r\n}\r\n\r\nfunction generateMdtTypeDefItems(item: S.MdtTypeDefItem): W.StructItem[] {\r\n    return [\r\n        FM.formatEnumField(\"Flags\", item.Flags, F.CorTypeAttr),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Namespace\", item.Namespace),\r\n        FM.formatU4Field(\"Extends\", item.Extends),\r\n        FM.formatU4Field(\"FieldList\", item.FieldList),\r\n        FM.formatU4Field(\"MethodList\", item.MethodList),\r\n    ];\r\n}\r\n\r\nfunction generateMdtFieldPtrItems(item: S.MdtFieldPtrItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Field\", item.Field),\r\n    ];\r\n}\r\n\r\nfunction generateMdtFieldItems(item: S.MdtFieldItem): W.StructItem[] {\r\n    return [\r\n        FM.formatEnumField(\"Flags\", item.Flags, F.CorFieldAttr),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Signature\", item.Signature),\r\n    ];\r\n}\r\n\r\nfunction generateMdtMethodPtrItems(item: S.MdtMethodPtrItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Method\", item.Method),\r\n    ];\r\n}\r\n\r\nfunction generateMdtMethodDefItems(item: S.MdtMethodDefItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"RVA\", item.RVA),\r\n        FM.formatEnumField(\"ImplFlags\", item.ImplFlags, F.CorMethodImpl),\r\n        FM.formatEnumField(\"Flags\", item.Flags, F.CorMethodAttr),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Signature\", item.Signature),\r\n        FM.formatU4Field(\"ParamList\", item.ParamList),\r\n    ];\r\n}\r\n\r\nfunction generateMdtParamPtrItems(item: S.MdtParamPtrItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Param\", item.Param),\r\n    ];\r\n}\r\n\r\nfunction generateMdtParamItems(item: S.MdtParamItem): W.StructItem[] {\r\n    return [\r\n        FM.formatEnumField(\"Flags\", item.Flags, F.CorParamAttr),\r\n        FM.formatU4Field(\"Sequence\", item.Sequence),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n    ];\r\n}\r\n\r\nfunction generateMdtInterfaceImplItems(item: S.MdtInterfaceImplItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Class\", item.Class),\r\n        FM.formatU4Field(\"Interface\", item.Interface),\r\n    ];\r\n}\r\n\r\nfunction generateMdtMemberRefItems(item: S.MdtMemberRefItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Class\", item.Class),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Signature\", item.Signature),\r\n    ];\r\n}\r\n\r\nfunction generateMdtConstantItems(item: S.MdtConstantItem): W.StructItem[] {\r\n    return [\r\n        FM.formatEnumField(\"Type\", item.Type, F.CorElementType),\r\n        FM.formatU4Field(\"PaddingZero\", item.PaddingZero),\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n        FM.formatU4Field(\"Value\", item.Value),\r\n    ];\r\n}\r\n\r\nfunction generateMdtCustomAttributeItems(item: S.MdtCustomAttributeItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n        FM.formatU4Field(\"Type\", item.Type),\r\n        FM.formatU4Field(\"Value\", item.Value),\r\n    ];\r\n}\r\n\r\nfunction generateMdtFieldMarshalItems(item: S.MdtFieldMarshalItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n        FM.formatU4Field(\"NativeType\", item.NativeType),\r\n    ];\r\n}\r\n\r\nfunction generateMdtDeclSecurityItems(item: S.MdtDeclSecurityItem): W.StructItem[] {\r\n    return [\r\n        FM.formatEnumField(\"Action\", item.Action, F.CorDeclSecurity),\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n        FM.formatU4Field(\"PermissionSet\", item.PermissionSet),\r\n    ];\r\n}\r\n\r\nfunction generateMdtClassLayoutItems(item: S.MdtClassLayoutItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"PackingSize\", item.PackingSize),\r\n        FM.formatU4Field(\"ClassSize\", item.ClassSize),\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n    ];\r\n}\r\n\r\nfunction generateMdtFieldLayoutItems(item: S.MdtFieldLayoutItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"OffSet\", item.OffSet),\r\n        FM.formatU4Field(\"Field\", item.Field),\r\n    ];\r\n}\r\n\r\nfunction generateMdtStandAloneSigItems(item: S.MdtStandAloneSigItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Signature\", item.Signature),\r\n    ];\r\n}\r\n\r\nfunction generateMdtEventMapItems(item: S.MdtEventMapItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n        FM.formatU4Field(\"EventList\", item.EventList),\r\n    ];\r\n}\r\n\r\nfunction generateMdtEventPtrItems(item: S.MdtEventPtrItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Generation\", item.Event),\r\n    ];\r\n}\r\n\r\nfunction generateMdtEventItems(item: S.MdtEventItem): W.StructItem[] {\r\n    return [\r\n        FM.formatEnumField(\"EventFlags\", item.EventFlags, F.CorEventAttr),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"EventType\", item.EventType),\r\n    ];\r\n}\r\n\r\nfunction generateMdtPropertyMapItems(item: S.MdtPropertyMapItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Parent\", item.Parent),\r\n        FM.formatU4Field(\"PropertyList\", item.PropertyList),\r\n    ];\r\n}\r\n\r\nfunction generateMdtPropertyPtrItems(item: S.MdtPropertyPtrItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Property\", item.Property),\r\n    ];\r\n}\r\n\r\nfunction generateMdtPropertyItems(item: S.MdtPropertyItem): W.StructItem[] {\r\n    return [\r\n        FM.formatEnumField(\"PropFlags\", item.PropFlags, F.CorPropertyAttr),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Type\", item.Type),\r\n    ];\r\n}\r\n\r\nfunction generateMdtMethodSemanticsItems(item: S.MdtMethodSemanticsItem): W.StructItem[] {\r\n    return [\r\n        FM.formatEnumField(\"Semantic\", item.Semantic, F.CorMethodSemanticsAttr),\r\n        FM.formatU4Field(\"Method\", item.Method),\r\n        FM.formatU4Field(\"Association\", item.Association),\r\n    ];\r\n}\r\n\r\nfunction generateMdtMethodImplItems(item: S.MdtMethodImplItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Class\", item.Class),\r\n        FM.formatU4Field(\"MethodBody\", item.MethodBody),\r\n        FM.formatU4Field(\"MethodDeclaration\", item.MethodDeclaration),\r\n    ];\r\n}\r\n\r\nfunction generateMdtModuleRefItems(item: S.MdtModuleRefItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n    ];\r\n}\r\n\r\nfunction generateMdtTypeSpecItems(item: S.MdtTypeSpecItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Signature\", item.Signature),\r\n    ];\r\n}\r\n\r\nfunction generateMdtImplMapItems(item: S.MdtImplMapItem): W.StructItem[] {\r\n    return [\r\n        FM.formatEnumField(\"MappingFlags\", item.MappingFlags, F.CorPinvokeMap),\r\n        FM.formatU4Field(\"MemberForwarded\", item.MemberForwarded),\r\n        FM.formatU4Field(\"ImportName\", item.ImportName),\r\n        FM.formatU4Field(\"ImportScope\", item.ImportScope),\r\n    ];\r\n}\r\n\r\nfunction generateMdtFieldRVAItems(item: S.MdtFieldRVAItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"RVA\", item.RVA),\r\n        FM.formatU4Field(\"Field\", item.Field),\r\n    ];\r\n}\r\n\r\nfunction generateMdtENCLogItems(item: S.MdtENCLogItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Token\", item.Token),\r\n        FM.formatU4Field(\"FuncCode\", item.FuncCode),\r\n    ];\r\n}\r\n\r\nfunction generateMdtENCMapItems(item: S.MdtENCMapItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Token\", item.Token),\r\n    ];\r\n}\r\n\r\nfunction generateMdtAssemblyItems(item: S.MdtAssemblyItem): W.StructItem[] {\r\n    return [\r\n        FM.formatEnumField(\"HashAlgId\", item.HashAlgId, F.AssemblyHashAlgorithm),\r\n        FM.formatU4Field(\"MajorVersion\", item.MajorVersion),\r\n        FM.formatU4Field(\"MinorVersion\", item.MinorVersion),\r\n        FM.formatU4Field(\"BuildNumber\", item.BuildNumber),\r\n        FM.formatU4Field(\"RevisionNumber\", item.RevisionNumber),\r\n        FM.formatEnumField(\"Flags\", item.Flags, F.CorAssemblyFlags),\r\n        FM.formatU4Field(\"PublicKey\", item.PublicKey),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Locale\", item.Locale),\r\n    ];\r\n}\r\n\r\nfunction generateMdtAssemblyProcessorItems(item: S.MdtAssemblyProcessorItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Processor\", item.Processor),\r\n    ];\r\n}\r\n\r\nfunction generateMdtAssemblyOSItems(item: S.MdtAssemblyOSItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"OSPlatformID\", item.OSPlatformID),\r\n        FM.formatU4Field(\"OSMajorVersion\", item.OSMajorVersion),\r\n        FM.formatU4Field(\"OSMinorVersion\", item.OSMinorVersion),\r\n    ];\r\n}\r\n\r\nfunction generateMdtAssemblyRefItems(item: S.MdtAssemblyRefItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"MajorVersion\", item.MajorVersion),\r\n        FM.formatU4Field(\"MinorVersion\", item.MinorVersion),\r\n        FM.formatU4Field(\"BuildNumber\", item.BuildNumber),\r\n        FM.formatU4Field(\"RevisionNumber\", item.RevisionNumber),\r\n        FM.formatEnumField(\"Flags\", item.Flags, F.CorAssemblyFlags),\r\n        FM.formatU4Field(\"PublicKeyOrToken\", item.PublicKeyOrToken),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Locale\", item.Locale),\r\n        FM.formatU4Field(\"HashValue\", item.HashValue),\r\n    ];\r\n}\r\n\r\nfunction generateMdtAssemblyRefProcessorItems(item: S.MdtAssemblyRefProcessorItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Processor\", item.Processor),\r\n        FM.formatU4Field(\"AssemblyRef\", item.AssemblyRef),\r\n    ];\r\n}\r\n\r\nfunction generateMdtAssemblyRefOSItems(item: S.MdtAssemblyRefOSItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"OSPlatformID\", item.OSPlatformID),\r\n        FM.formatU4Field(\"OSMajorVersion\", item.OSMajorVersion),\r\n        FM.formatU4Field(\"OSMinorVersion\", item.OSMinorVersion),\r\n        FM.formatU4Field(\"AssemblyRef\", item.AssemblyRef),\r\n    ];\r\n}\r\n\r\nfunction generateMdtFileItems(item: S.MdtFileItem): W.StructItem[] {\r\n    return [\r\n        FM.formatEnumField(\"Flags\", item.Flags, F.CorFileFlags),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"HashValue\", item.HashValue),\r\n    ];\r\n}\r\n\r\nfunction generateMdtExportedTypeItems(item: S.MdtExportedTypeItem): W.StructItem[] {\r\n    return [\r\n        FM.formatEnumField(\"Flags\", item.Flags, F.CorTypeAttr),\r\n        FM.formatU4Field(\"TypeDefId\", item.TypeDefId),\r\n        FM.formatU4Field(\"TypeName\", item.TypeName),\r\n        FM.formatU4Field(\"TypeNamespace\", item.TypeNamespace),\r\n        FM.formatU4Field(\"Implementation\", item.Implementation),\r\n    ];\r\n}\r\n\r\nfunction generateMdtManifestResourceItems(item: S.MdtManifestResourceItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Offset\", item.Offset),\r\n        FM.formatEnumField(\"Flags\", item.Flags, F.CorManifestResourceFlags),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n        FM.formatU4Field(\"Implementation\", item.Implementation),\r\n    ];\r\n}\r\n\r\nfunction generateMdtNestedClassItems(item: S.MdtNestedClassItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"NestedClass\", item.NestedClass),\r\n        FM.formatU4Field(\"EnclosingClass\", item.EnclosingClass),\r\n    ];\r\n}\r\n\r\nfunction generateMdtGenericParamItems(item: S.MdtGenericParamItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Number\", item.Number),\r\n        FM.formatEnumField(\"Flags\", item.Flags, F.CorGenericParamAttr),\r\n        FM.formatU4Field(\"Owner\", item.Owner),\r\n        FM.formatU4Field(\"Name\", item.Name),\r\n    ];\r\n}\r\n\r\nfunction generateMdtMethodSpecItems(item: S.MdtMethodSpecItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Method\", item.Method),\r\n        FM.formatU4Field(\"Instantiation\", item.Instantiation),\r\n    ];\r\n}\r\n\r\nfunction generateMdtGenericParamConstraintItems(item: S.MdtGenericParamConstraintItem): W.StructItem[] {\r\n    return [\r\n        FM.formatU4Field(\"Owner\", item.Owner),\r\n        FM.formatU4Field(\"Constraint\", item.Constraint),\r\n    ];\r\n}\r\n\r\nfunction generateMdtPaging(\r\n    pe: PEImage,\r\n    tid: F.MetadataTableIndex,\r\n    cfg: G.GeneratorConfig,\r\n    pgNum: number): W.Paging {\r\n    const paging: W.Paging = {\r\n        currentPageNumber: pgNum,\r\n        pageNavList: []\r\n    };\r\n\r\n    const psz = cfg.mdtPageSize;\r\n    const rows = pe.getMetadataTableRows(tid);\r\n    const pages = Math.floor((rows + psz - 1) / psz);\r\n    for (let p = 0; p < pages; p++) {\r\n        const tblName = F.MetadataTableIndex[tid];\r\n        const titleOf = (r: number) => `${tblName}[${FM.formatHexDec(r)}]`;\r\n        const { start, end } = getRidOnPage(pe, tid, cfg, p);\r\n        const target: W.NavTarget = {\r\n            title: `Page[${p + 1}] (${titleOf(start)} - ${titleOf(end)})`,\r\n            pageID: W.PageID.MDT_TBL,\r\n            subID: tblName,\r\n            pageNum: p,\r\n        };\r\n        paging.pageNavList.push(target);\r\n    }\r\n\r\n    return paging;\r\n}\r\n\r\nfunction getRidOnPage(\r\n    pe: PEImage,\r\n    tid: F.MetadataTableIndex,\r\n    cfg: G.GeneratorConfig,\r\n    pgNum: number): { start: number, end: number } {\r\n    const psz = cfg.mdtPageSize;\r\n    const rows = pe.getMetadataTableRows(tid);\r\n    const start = pgNum * psz + 1;\r\n    let end = start + psz - 1;\r\n    if (end > rows) end = rows;\r\n    return { start, end };\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateMetadataHeadersPageData(pe: PEImage): W.MetadataHeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MD_HEADERS,\r\n            title: W.KnownTitle.MD_HEADERS,\r\n        },\r\n        cliHeader: generateCliHeader(pe),\r\n        metadataRoot: generateMetadataRoot(pe),\r\n        streamHeaders: generateMetadataStreamHeader(pe),\r\n        snSignature: generateSNSignature(pe),\r\n    };\r\n}\r\n\r\nfunction generateCliHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.CLI_HEADER,\r\n        elemID: W.KnownElemID.CLI_HEADER,\r\n    };\r\n\r\n    const h = pe.getCliHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"cb\", h.cb, true),\r\n        FM.formatU2Field(\"MajorRuntimeVersion\", h.MajorRuntimeVersion, true),\r\n        FM.formatU2Field(\"MinorRuntimeVersion\", h.MinorRuntimeVersion, true),\r\n        FM.formatU4Field(\"MetaData.VirtualAddress\", h.MetaData.VirtualAddress),\r\n        FM.formatU4Field(\"MetaData.Size\", h.MetaData.Size, true),\r\n        FM.formatU4Field(\"Flags\", h.Flags),\r\n        FM.formatU4Field(\"EntryPointToken\", h.EntryPointToken),\r\n        FM.formatU4Field(\"Resources.VirtualAddress\", h.Resources.VirtualAddress),\r\n        FM.formatU4Field(\"Resources.Size\", h.Resources.Size, true),\r\n        FM.formatU4Field(\"StrongNameSignature.VirtualAddress\", h.StrongNameSignature.VirtualAddress),\r\n        FM.formatU4Field(\"StrongNameSignature.Size\", h.StrongNameSignature.Size, true),\r\n        FM.formatU4Field(\"CodeManagerTable.VirtualAddress\", h.CodeManagerTable.VirtualAddress),\r\n        FM.formatU4Field(\"CodeManagerTable.Size\", h.CodeManagerTable.Size, true),\r\n        FM.formatU4Field(\"VTableFixups.VirtualAddress\", h.VTableFixups.VirtualAddress),\r\n        FM.formatU4Field(\"VTableFixups.Size\", h.VTableFixups.Size, true),\r\n        FM.formatU4Field(\"ExportAddressTableJumps.VirtualAddress\", h.ExportAddressTableJumps.VirtualAddress),\r\n        FM.formatU4Field(\"ExportAddressTableJumps.Size\", h.ExportAddressTableJumps.Size, true),\r\n        FM.formatU4Field(\"ManagedNativeHeader.VirtualAddress\", h.ManagedNativeHeader.VirtualAddress),\r\n        FM.formatU4Field(\"ManagedNativeHeader.Size\", h.ManagedNativeHeader.Size, true),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSNSignature(pe: PEImage): W.SimpleStruct | undefined {\r\n    const d = pe.getStrongNameSignature();\r\n    if (!d) return undefined;\r\n\r\n    const s: W.SimpleStruct = {\r\n        title: W.KnownTitle.SN_SIG,\r\n        elemID: W.KnownElemID.SN_SIG,\r\n        items: [FM.formatBytesField(\"Signature\", d)]\r\n    };\r\n    return s;\r\n}\r\n\r\nfunction generateMetadataRoot(pe: PEImage): W.SimpleStruct | undefined {\r\n    const h = pe.getMetadataRoot();\r\n    if (!h) return undefined;\r\n\r\n    const s: W.SimpleStruct = {\r\n        title: W.KnownTitle.MD_ROOT,\r\n        elemID: W.KnownElemID.MD_ROOT,\r\n        items: [\r\n            FM.formatU4Field(\"Signature\", h.Signature),\r\n            FM.formatU2Field(\"MajorVersion\", h.MajorVersion, true),\r\n            FM.formatU2Field(\"MinorVersion\", h.MinorVersion, true),\r\n            FM.formatU4Field(\"Reserved\", h.Reserved),\r\n            FM.formatU4Field(\"VersionLength\", h.VersionLength, true),\r\n            FM.formatStringField(\"VersionString\", h.VersionString),\r\n            FM.formatBytesField(\"VersionPadding\", h.VersionPadding),\r\n            FM.formatU2Field(\"Flags\", h.Flags),\r\n            FM.formatU2Field(\"Streams\", h.Streams, true),\r\n        ]\r\n    };\r\n    return s;\r\n}\r\n\r\nfunction generateMetadataStreamHeader(pe: PEImage): W.GroupedStruct | undefined {\r\n    const h = pe.getMetadataStreamHeaders();\r\n    if (!h) return undefined;\r\n\r\n    const s: W.GroupedStruct = {\r\n        title: W.KnownTitle.MDS_HEADERS,\r\n        elemID: W.KnownElemID.MDS_HEADERS,\r\n        groups: h.items.map((v, i) => ({\r\n            title: `[${i}] (${v.Name.value})`,\r\n            items: [\r\n                FM.formatU4Field(\"Offset\", v.Offset),\r\n                FM.formatU4Field(\"Size\", v.Size, true),\r\n                FM.formatStringField(\"Name\", v.Name),\r\n                FM.formatBytesField(\"Padding\", v.Padding),\r\n            ]\r\n        }))\r\n    };\r\n    return s;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateHeadersPageData(pe: PEImage): W.HeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.HEADERS,\r\n            title: W.KnownTitle.HEADERS,\r\n        },\r\n        dosHeader: generateDosHeader(pe),\r\n        peSignature: generatePESignature(pe),\r\n        fileHeader: generateFileHeader(pe),\r\n        optionalHeader: generateOptionalHeader(pe),\r\n        dataDirectories: generateDataDirectories(pe),\r\n        sectionHeaders: generateSectionHeaders(pe),\r\n    };\r\n}\r\n\r\nfunction generateDosHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.DOS_HEADER,\r\n        elemID: W.KnownElemID.DOS_HEADER,\r\n    };\r\n\r\n    const h = pe.getDosHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"e_magic\", h.e_magic),\r\n        FM.formatU2Field(\"e_cblp\", h.e_cblp),\r\n        FM.formatU2Field(\"e_cp\", h.e_cp),\r\n        FM.formatU2Field(\"e_crlc\", h.e_crlc),\r\n        FM.formatU2Field(\"e_cparhdr\", h.e_cparhdr),\r\n        FM.formatU2Field(\"e_minalloc\", h.e_minalloc),\r\n        FM.formatU2Field(\"e_maxalloc\", h.e_maxalloc),\r\n        FM.formatU2Field(\"e_ss\", h.e_ss),\r\n        FM.formatU2Field(\"e_sp\", h.e_sp),\r\n        FM.formatU2Field(\"e_csum\", h.e_csum),\r\n        FM.formatU2Field(\"e_ip\", h.e_ip),\r\n        FM.formatU2Field(\"e_cs\", h.e_cs),\r\n        FM.formatU2Field(\"e_lfarlc\", h.e_lfarlc),\r\n        FM.formatU2Field(\"e_ovno\", h.e_ovno),\r\n        FM.formatBytesField(\"e_res\", h.e_res),\r\n        FM.formatU2Field(\"e_oemid\", h.e_oemid),\r\n        FM.formatU2Field(\"e_oeminfo\", h.e_oeminfo),\r\n        FM.formatBytesField(\"e_res2\", h.e_res2),\r\n        FM.formatU4Field(\"e_lfanew\", h.e_lfanew),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generatePESignature(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.PE_SIGNATURE,\r\n        elemID: W.KnownElemID.PE_SIGNATURE,\r\n    };\r\n\r\n    const h = pe.getPESignature();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"PE Signature\", h),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateFileHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.FILE_HEADER,\r\n        elemID: W.KnownElemID.FILE_HEADER,\r\n    };\r\n\r\n    const h = pe.getFileHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatEnumField(\"Machine\", h.Machine, F.ImageFileMachine),\r\n        FM.formatU2Field(\"NumberOfSections\", h.NumberOfSections, true),\r\n        FM.formatU4Field(\"TimeDateStamp\", h.TimeDateStamp),\r\n        FM.formatU4Field(\"PointerToSymbolTable\", h.PointerToSymbolTable),\r\n        FM.formatU4Field(\"NumberOfSymbols\", h.NumberOfSymbols, true),\r\n        FM.formatU2Field(\"SizeOfOptionalHeader\", h.SizeOfOptionalHeader, true),\r\n        FM.formatEnumField(\"Characteristics\", h.Characteristics, F.ImageFile),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateOptionalHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.OPTIONAL_HEADER,\r\n        elemID: W.KnownElemID.OPTIONAL_HEADER,\r\n    };\r\n\r\n    const h = pe.getOptionalHeader();\r\n    if (!h) return s;\r\n\r\n    switch (h.Magic.value) {\r\n        case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n            s.title += \" (32-bit)\";\r\n            fillOptionalHeader32Fields(s, <S.ImageOptionalHeader32>h);\r\n            break;\r\n\r\n        case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n            s.title += \" (64-bit)\";\r\n            fillOptionalHeader64Fields(s, <S.ImageOptionalHeader64>h);\r\n            break;\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nfunction fillOptionalHeader32Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader32): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n            FM.formatU4Field(\"BaseOfData\", h.BaseOfData),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU4Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatEnumField(\"Subsystem\", h.Subsystem, F.ImageSubsystem),\r\n            FM.formatEnumField(\"DllCharacteristics\", h.DllCharacteristics, F.ImageDllCharacteristics),\r\n            FM.formatU4Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU4Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU4Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU4Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction fillOptionalHeader64Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader64): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU8Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatEnumField(\"Subsystem\", h.Subsystem, F.ImageSubsystem),\r\n            FM.formatEnumField(\"DllCharacteristics\", h.DllCharacteristics, F.ImageDllCharacteristics),\r\n            FM.formatU8Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU8Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU8Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU8Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction generateDataDirectories(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.DATA_DIRECTORIES,\r\n        elemID: W.KnownElemID.DATA_DIRECTORIES,\r\n    };\r\n\r\n    const h = pe.getDataDirectories();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] ${F.ImageDirectoryEntry[i] || \"\"}`,\r\n        items: [\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"Size\", v.Size, true),\r\n        ]\r\n    } as W.SimpleStruct));\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSectionHeaders(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.SECTION_HEADERS,\r\n        elemID: W.KnownElemID.SECTION_HEADERS,\r\n    };\r\n\r\n    const h = pe.getSectionHeaders();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] (${v.Name.value})`,\r\n        items: [\r\n            FM.formatStringField(\"Name\", v.Name),\r\n            FM.formatU4Field(\"VirtualSize\", v.VirtualSize, true),\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"SizeOfRawData\", v.SizeOfRawData, true),\r\n            FM.formatU4Field(\"PointerToRawData\", v.PointerToRawData),\r\n            FM.formatU4Field(\"PointerToRelocations\", v.PointerToRelocations),\r\n            FM.formatU4Field(\"PointerToLinenumbers\", v.PointerToLinenumbers),\r\n            FM.formatU2Field(\"NumberOfRelocations\", v.NumberOfRelocations, true),\r\n            FM.formatU2Field(\"NumberOfLinenumbers\", v.NumberOfLinenumbers, true),\r\n            FM.formatEnumField(\"Characteristics\", v.Characteristics, F.ImageSection),\r\n        ]\r\n    }));\r\n\r\n    return s;\r\n}\r\n","import { PEImage } from \"../pe/image\";\r\nimport * as F from \"../pe/image-flags\";\r\n\r\nimport { generateHeadersPageData } from \"./headers\";\r\nimport { generateMetadataHeadersPageData } from \"./metadata-headers\";\r\nimport { generateMdsTablePageData, generateMdtPageData } from \"./mds-table\";\r\nimport {\r\n    generateMdsStringsPageData,\r\n    generateMdsUSPageData,\r\n    generateMdsGuidPageData,\r\n    generateMdsBlobPageData\r\n} from \"./mds-list\";\r\n\r\nexport function generatePageData(pe: PEImage, pageID: W.PageID, subID?: string, pageNum?: number): W.PageData {\r\n    switch (pageID) {\r\n        case W.PageID.HEADERS: return generateHeadersPageData(pe);\r\n        case W.PageID.MD_HEADERS: return generateMetadataHeadersPageData(pe);\r\n        case W.PageID.MDS_TABLE: return generateMdsTablePageData(pe);\r\n        case W.PageID.MDS_STRINGS: return generateMdsStringsPageData(pe, cache, cfg, pageNum || 0);\r\n        case W.PageID.MDS_US: return generateMdsUSPageData(pe, cache, cfg, pageNum || 0);\r\n        case W.PageID.MDS_GUID: return generateMdsGuidPageData(pe);\r\n        case W.PageID.MDS_BLOB: return generateMdsBlobPageData(pe, cache, cfg, pageNum || 0);\r\n        case W.PageID.MDT_TBL: {\r\n            const tid = F.MetadataTableIndex[subID! as any] as any as F.MetadataTableIndex;\r\n            return generateMdtPageData(pe, tid, cfg, pageNum || 0);\r\n        }\r\n        default: return { nav: { pageID: W.PageID.NOTFOUND, title: W.KnownTitle.NOTFOUND } };\r\n    }\r\n}\r\n\r\nexport interface GeneratorCache {\r\n    mdsStrings?: MdsOffsetListCache;\r\n    mdsUS?: MdsOffsetListCache;\r\n    mdsBlob?: MdsOffsetListCache;\r\n}\r\n\r\nexport type MdsOffsetListCache = {\r\n    pages: MdsOffsetListPageCache[];\r\n}\r\n\r\nexport type MdsOffsetListPageCache = number[];\r\n\r\nexport function clearGeneratorCache(): void {\r\n    cache = {};\r\n}\r\n\r\nexport interface GeneratorConfig {\r\n    mdsOffsetListPageSize: number;  // Total bytes per page.\r\n    mdtPageSize: number;  // Total items per page.\r\n}\r\n\r\nlet cache: GeneratorCache = {};\r\n\r\nconst cfg: GeneratorConfig = {\r\n    mdsOffsetListPageSize: 4000,\r\n    mdtPageSize: 100,\r\n}\r\n","export const enum PEErrorType {\r\n    INVALID_DATA_POSITION = \"INVALID_DATA_POSITION\",\r\n    INVALID_DOS_SIGNATURE = \"INVALID_DOS_SIGNATURE\",\r\n    INVALID_PE_SIGNATURE = \"INVALID_PE_SIGNATURE\",\r\n    INVALID_OPTIONAL_HEADER_MAGIC = \"INVALID_OPTIONAL_HEADER_MAGIC\",\r\n    INVALID_DATA_DIRECTORY_COUNT = \"INVALID_DATA_DIRECTORY_COUNT\",\r\n}\r\n\r\nexport class PEError extends Error {\r\n    constructor(\r\n        public type: PEErrorType,\r\n        public offset?: number,\r\n        public size?: number\r\n    ) {\r\n        super(type);\r\n    }\r\n}\r\n","import * as S from \"./structures\";\r\nimport * as F from \"./image-flags\";\r\nimport * as U from \"./utils\";\r\n\r\nexport interface FileDataProvider {\r\n    getU1(p: number): number;\r\n    getU2(p: number): number;\r\n    getU4(p: number): number;\r\n    getData(p: number, sz: number): Uint8Array;\r\n}\r\n\r\nexport interface MetadataSizingProvider {\r\n    getHeapSize(heap: F.MetadataHeapSizeID): number;\r\n    getTableIDSize(t: F.MetadataTableIndex): number;\r\n    getCodedTokenSize(t: F.MetadataCodedTokenIndex): number;\r\n}\r\n\r\n//\r\n// Basic structures.\r\n//\r\n\r\nexport function loadU1Field(d: FileDataProvider, p: number): S.U1Field {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p)\r\n    };\r\n}\r\n\r\nexport function loadU2Field(d: FileDataProvider, p: number): S.U2Field {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p)\r\n    };\r\n}\r\n\r\nexport function loadU4Field(d: FileDataProvider, p: number): S.U4Field {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p)\r\n    };\r\n}\r\n\r\nexport function loadU8Field(d: FileDataProvider, p: number): S.U8Field {\r\n    const low = d.getU4(p);\r\n    const high = d.getU4(p + 4);\r\n\r\n    return {\r\n        _offset: p, _size: 8, data: d.getData(p, 8), low, high\r\n    };\r\n}\r\n\r\nexport function loadCompressedUIntField(d: FileDataProvider, p: number): S.CompressedUIntField {\r\n    const sz = U.getCompressedIntSize(d.getU1(p));\r\n    const data = new Uint8Array(d.getData(p, sz));\r\n    const value = U.decompressUint(data);\r\n\r\n    return { _offset: p, _size: sz, data, value };\r\n}\r\n\r\nexport function loadU1EnumField<T>(d: FileDataProvider, p: number): S.U1EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU2EnumField<T>(d: FileDataProvider, p: number): S.U2EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU4EnumField<T>(d: FileDataProvider, p: number): S.U4EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeByteArrayField(d: FileDataProvider, p: number, sz: number): S.Field {\r\n    return {\r\n        _offset: p, _size: sz, data: d.getData(p, sz)\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeAsciiStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const value = String.fromCharCode.apply(null, Array.from(data).filter(v => v != 0));\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadNullTerminatedStringField(d: FileDataProvider, p: number): S.StringField {\r\n    let bytes: number[] = [];\r\n    let ptr = p;\r\n    let b: number;\r\n\r\n    do {\r\n        b = d.getU1(ptr++);\r\n        bytes.push(b);\r\n    } while (b != 0);\r\n    const str = bytes.slice(0, bytes.length - 1).map(v => `%${v.toString(16)}`).join(\"\");\r\n    const value = decodeURIComponent(str);\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p, data: Uint8Array.from(bytes), value\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeUnicodeStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const arr = new Uint16Array(data.buffer);\r\n    const value = String.fromCodePoint.apply(null, arr);\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadStructArrayByCount<T extends S.FileData>(\r\n    d: FileDataProvider,\r\n    p: number,\r\n    loader: (d: FileDataProvider, p: number) => T,\r\n    count: number): S.StructArray<T> {\r\n\r\n    let items: T[] = [];\r\n    let ptr = p;\r\n    for (let i = 0; i < count; i++) {\r\n        const s = loader(d, ptr);\r\n        items.push(s);\r\n        ptr += s._size;\r\n    }\r\n\r\n    return { _offset: p, _size: ptr - p, items };\r\n}\r\n\r\n//\r\n// Image headers.\r\n//\r\n\r\nexport function loadImageDosHeader(d: FileDataProvider, p: number): S.ImageDosHeader {\r\n    let ptr = p;\r\n\r\n    const e_magic = loadU2Field(d, ptr);\r\n    ptr += e_magic._size;\r\n\r\n    const e_cblp = loadU2Field(d, ptr);\r\n    ptr += e_cblp._size;\r\n\r\n    const e_cp = loadU2Field(d, ptr);\r\n    ptr += e_cp._size;\r\n\r\n    const e_crlc = loadU2Field(d, ptr);\r\n    ptr += e_crlc._size;\r\n\r\n    const e_cparhdr = loadU2Field(d, ptr);\r\n    ptr += e_cparhdr._size;\r\n\r\n    const e_minalloc = loadU2Field(d, ptr);\r\n    ptr += e_minalloc._size;\r\n\r\n    const e_maxalloc = loadU2Field(d, ptr);\r\n    ptr += e_maxalloc._size;\r\n\r\n    const e_ss = loadU2Field(d, ptr);\r\n    ptr += e_ss._size;\r\n\r\n    const e_sp = loadU2Field(d, ptr);\r\n    ptr += e_sp._size;\r\n\r\n    const e_csum = loadU2Field(d, ptr);\r\n    ptr += e_csum._size;\r\n\r\n    const e_ip = loadU2Field(d, ptr);\r\n    ptr += e_ip._size;\r\n\r\n    const e_cs = loadU2Field(d, ptr);\r\n    ptr += e_cs._size;\r\n\r\n    const e_lfarlc = loadU2Field(d, ptr);\r\n    ptr += e_lfarlc._size;\r\n\r\n    const e_ovno = loadU2Field(d, ptr);\r\n    ptr += e_ovno._size;\r\n\r\n    const e_res = loadFixedSizeByteArrayField(d, ptr, 4 * 2);\r\n    ptr += e_res._size;\r\n\r\n    const e_oemid = loadU2Field(d, ptr);\r\n    ptr += e_oemid._size;\r\n\r\n    const e_oeminfo = loadU2Field(d, ptr);\r\n    ptr += e_oeminfo._size;\r\n\r\n    const e_res2 = loadFixedSizeByteArrayField(d, ptr, 10 * 2);\r\n    ptr += e_res2._size;\r\n\r\n    const e_lfanew = loadU4Field(d, ptr);\r\n    ptr += e_lfanew._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        e_magic,\r\n        e_cblp,\r\n        e_cp,\r\n        e_crlc,\r\n        e_cparhdr,\r\n        e_minalloc,\r\n        e_maxalloc,\r\n        e_ss,\r\n        e_sp,\r\n        e_csum,\r\n        e_ip,\r\n        e_cs,\r\n        e_lfarlc,\r\n        e_ovno,\r\n        e_res,\r\n        e_oemid,\r\n        e_oeminfo,\r\n        e_res2,\r\n        e_lfanew,\r\n    };\r\n}\r\n\r\nexport function loadImageFileHeader(d: FileDataProvider, p: number): S.ImageFileHeader {\r\n    let ptr = p;\r\n\r\n    const Machine = loadU2Field(d, ptr);\r\n    ptr += Machine._size;\r\n\r\n    const NumberOfSections = loadU2Field(d, ptr);\r\n    ptr += NumberOfSections._size;\r\n\r\n    const TimeDateStamp = loadU4Field(d, ptr);\r\n    ptr += TimeDateStamp._size;\r\n\r\n    const PointerToSymbolTable = loadU4Field(d, ptr);\r\n    ptr += PointerToSymbolTable._size;\r\n\r\n    const NumberOfSymbols = loadU4Field(d, ptr);\r\n    ptr += NumberOfSymbols._size;\r\n\r\n    const SizeOfOptionalHeader = loadU2Field(d, ptr);\r\n    ptr += SizeOfOptionalHeader._size;\r\n\r\n    const Characteristics = loadU2EnumField<F.ImageFile>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Machine,\r\n        NumberOfSections,\r\n        TimeDateStamp,\r\n        PointerToSymbolTable,\r\n        NumberOfSymbols,\r\n        SizeOfOptionalHeader,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader32(d: FileDataProvider, p: number): S.ImageOptionalHeader32 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const BaseOfData = loadU4Field(d, ptr);\r\n    ptr += BaseOfData._size;\r\n\r\n    const ImageBase = loadU4Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        BaseOfData,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader64(d: FileDataProvider, p: number): S.ImageOptionalHeader64 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const ImageBase = loadU8Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageDataDirectory(d: FileDataProvider, p: number): S.ImageDataDirectory {\r\n    let ptr = p;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        VirtualAddress,\r\n        Size,\r\n    };\r\n}\r\n\r\nexport function loadImageSectionHeader(d: FileDataProvider, p: number): S.ImageSectionHeader {\r\n    let ptr = p;\r\n\r\n    const Name = loadFixedSizeAsciiStringField(d, ptr, 8);\r\n    ptr += Name._size;\r\n\r\n    const VirtualSize = loadU4Field(d, ptr);\r\n    ptr += VirtualSize._size;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const SizeOfRawData = loadU4Field(d, ptr);\r\n    ptr += SizeOfRawData._size;\r\n\r\n    const PointerToRawData = loadU4Field(d, ptr);\r\n    ptr += PointerToRawData._size;\r\n\r\n    const PointerToRelocations = loadU4Field(d, ptr);\r\n    ptr += PointerToRelocations._size;\r\n\r\n    const PointerToLinenumbers = loadU4Field(d, ptr);\r\n    ptr += PointerToLinenumbers._size;\r\n\r\n    const NumberOfRelocations = loadU2Field(d, ptr);\r\n    ptr += NumberOfRelocations._size;\r\n\r\n    const NumberOfLinenumbers = loadU2Field(d, ptr);\r\n    ptr += NumberOfLinenumbers._size;\r\n\r\n    const Characteristics = loadU4EnumField<F.ImageSection>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Name,\r\n        VirtualSize,\r\n        VirtualAddress,\r\n        SizeOfRawData,\r\n        PointerToRawData,\r\n        PointerToRelocations,\r\n        PointerToLinenumbers,\r\n        NumberOfRelocations,\r\n        NumberOfLinenumbers,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\n//\r\n// Metadata structures.\r\n//\r\n\r\nexport function loadCliHeader(d: FileDataProvider, p: number): S.CliHeader {\r\n    let ptr = p;\r\n\r\n    const cb = loadU4Field(d, ptr);\r\n    ptr += cb._size;\r\n\r\n    const MajorRuntimeVersion = loadU2Field(d, ptr);\r\n    ptr += MajorRuntimeVersion._size;\r\n\r\n    const MinorRuntimeVersion = loadU2Field(d, ptr);\r\n    ptr += MinorRuntimeVersion._size;\r\n\r\n    const MetaData = loadImageDataDirectory(d, ptr);\r\n    ptr += MetaData._size;\r\n\r\n    const Flags = loadU4Field(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const EntryPointToken = loadU4Field(d, ptr);\r\n    ptr += EntryPointToken._size;\r\n\r\n    const Resources = loadImageDataDirectory(d, ptr);\r\n    ptr += Resources._size;\r\n\r\n    const StrongNameSignature = loadImageDataDirectory(d, ptr);\r\n    ptr += StrongNameSignature._size;\r\n\r\n    const CodeManagerTable = loadImageDataDirectory(d, ptr);\r\n    ptr += CodeManagerTable._size;\r\n\r\n    const VTableFixups = loadImageDataDirectory(d, ptr);\r\n    ptr += VTableFixups._size;\r\n\r\n    const ExportAddressTableJumps = loadImageDataDirectory(d, ptr);\r\n    ptr += ExportAddressTableJumps._size;\r\n\r\n    const ManagedNativeHeader = loadImageDataDirectory(d, ptr);\r\n    ptr += ManagedNativeHeader._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        cb,\r\n        MajorRuntimeVersion,\r\n        MinorRuntimeVersion,\r\n        MetaData,\r\n        Flags,\r\n        EntryPointToken,\r\n        Resources,\r\n        StrongNameSignature,\r\n        CodeManagerTable,\r\n        VTableFixups,\r\n        ExportAddressTableJumps,\r\n        ManagedNativeHeader,\r\n    };\r\n}\r\n\r\nexport function loadMetadataRoot(d: FileDataProvider, p: number): S.MetadataRoot {\r\n    let ptr = p;\r\n\r\n    const Signature = loadU4Field(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    const MajorVersion = loadU2Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU2Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const Reserved = loadU4Field(d, ptr);\r\n    ptr += Reserved._size;\r\n\r\n    const VersionLength = loadU4Field(d, ptr);\r\n    ptr += VersionLength._size;\r\n\r\n    const VersionString = loadNullTerminatedStringField(d, ptr);\r\n    ptr += VersionString._size;\r\n\r\n    const paddingSize = U.calculatePadding(VersionString._size);\r\n    const VersionPadding = loadFixedSizeByteArrayField(d, ptr, paddingSize);\r\n    ptr += VersionPadding._size;\r\n\r\n    const Flags = loadU2Field(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Streams = loadU2Field(d, ptr);\r\n    ptr += Streams._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Signature,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        Reserved,\r\n        VersionLength,\r\n        VersionString,\r\n        VersionPadding,\r\n        Flags,\r\n        Streams,\r\n    };\r\n}\r\n\r\nexport function loadMetadataStreamHeader(d: FileDataProvider, p: number): S.MetadataStreamHeader {\r\n    let ptr = p;\r\n\r\n    const Offset = loadU4Field(d, ptr);\r\n    ptr += Offset._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    const Name = loadNullTerminatedStringField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const paddingSize = U.calculatePadding(Name._size);\r\n    const Padding = loadFixedSizeByteArrayField(d, ptr, paddingSize);\r\n    ptr += Padding._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Offset,\r\n        Size,\r\n        Name,\r\n        Padding,\r\n    };\r\n}\r\n\r\nexport function loadMetadataTableHeader(d: FileDataProvider, p: number): S.MetadataTableHeader {\r\n    let ptr = p;\r\n\r\n    const Reserved = loadU4Field(d, ptr);\r\n    ptr += Reserved._size;\r\n\r\n    const MajorVersion = loadU1Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU1Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const HeapSizes = loadU1Field(d, ptr);\r\n    ptr += HeapSizes._size;\r\n\r\n    const Reserved2 = loadU1Field(d, ptr);\r\n    ptr += Reserved2._size;\r\n\r\n    const Valid = loadU8Field(d, ptr);\r\n    ptr += Valid._size;\r\n\r\n    const Sorted = loadU8Field(d, ptr);\r\n    ptr += Sorted._size;\r\n\r\n    const tables = U.count1(Valid.high) + U.count1(Valid.low);\r\n    const Rows = loadStructArrayByCount(d, ptr, loadU4Field, tables);\r\n    ptr += Rows._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Reserved,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        HeapSizes,\r\n        Reserved2,\r\n        Valid,\r\n        Sorted,\r\n        Rows,\r\n    };\r\n}\r\n\r\nexport function loadMetadataUSItem(d: FileDataProvider, p: number): S.MetadataUSItem {\r\n    let ptr = p;\r\n\r\n    const Size = loadCompressedUIntField(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    const sz = Size.value;\r\n    const strSize = sz > 0 ? sz - 1 : 0;\r\n    const suffixSize = sz > 0 ? 1 : 0;\r\n\r\n    const Value = loadFixedSizeUnicodeStringField(d, ptr, strSize);\r\n    ptr += Value._size;\r\n\r\n    const Suffix = loadFixedSizeByteArrayField(d, ptr, suffixSize);\r\n    ptr += Suffix._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Size,\r\n        Value,\r\n        Suffix,\r\n    };\r\n}\r\n\r\nexport function loadMetadataBlobItem(d: FileDataProvider, p: number): S.MetadataBlobItem {\r\n    let ptr = p;\r\n\r\n    const Size = loadCompressedUIntField(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    const Value = loadFixedSizeByteArrayField(d, ptr, Size.value);\r\n    ptr += Value._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Size,\r\n        Value,\r\n    };\r\n}\r\n\r\nexport function loadMdsStringsField(\r\n    d: FileDataProvider & MetadataSizingProvider,\r\n    p: number): S.MdsStringsField {\r\n\r\n    return d.getHeapSize(F.MetadataHeapSizeID.String) == 4\r\n        ? loadU4Field(d, p) : loadU2Field(d, p);\r\n}\r\n\r\nexport function loadMdsGuidField(\r\n    d: FileDataProvider & MetadataSizingProvider,\r\n    p: number): S.MdsGuidField {\r\n\r\n    return d.getHeapSize(F.MetadataHeapSizeID.GUID) == 4\r\n        ? loadU4Field(d, p) : loadU2Field(d, p);\r\n}\r\n\r\nexport function loadMdsBlobField(\r\n    d: FileDataProvider & MetadataSizingProvider,\r\n    p: number): S.MdsBlobField {\r\n\r\n    return d.getHeapSize(F.MetadataHeapSizeID.Blob) == 4\r\n        ? loadU4Field(d, p) : loadU2Field(d, p);\r\n}\r\n\r\nexport function loadMdtRidField(\r\n    d: FileDataProvider & MetadataSizingProvider,\r\n    t: F.MetadataTableIndex, p: number): S.MdtRidField {\r\n\r\n    return d.getTableIDSize(t) == 4\r\n        ? loadU4Field(d, p) : loadU2Field(d, p);\r\n}\r\n\r\nexport function loadMdCodedTokenField(\r\n    d: FileDataProvider & MetadataSizingProvider,\r\n    t: F.MetadataCodedTokenIndex, p: number): S.MdCodedTokenField {\r\n\r\n    const baseField = d.getCodedTokenSize(t) == 4\r\n        ? loadU4Field(d, p) : loadU2Field(d, p);\r\n    const codedTokenInfo = decodeCodedToken(baseField.value, t);\r\n\r\n    return {\r\n        ...baseField, ...codedTokenInfo\r\n    };\r\n}\r\n\r\nexport function loadMdTokenField(d: FileDataProvider, p: number): S.MdTokenField {\r\n    const baseField = loadU4Field(d, p);\r\n    const tid: F.MetadataTableIndex = (baseField.value & 0xFF000000) >> 24;\r\n    const rid = baseField.value & 0x00FFFFFF;\r\n    return {\r\n        ...baseField, tid, rid\r\n    };\r\n}\r\n\r\nexport function decodeCodedToken(token: number, t: F.MetadataCodedTokenIndex): { tid: F.MetadataTableIndex, rid: number } {\r\n    const cti = F.ctc[t];\r\n    const tid = cti.tables[token & ((1 << cti.tagSize) - 1)];\r\n    const rid = token >> cti.tagSize;\r\n    return { tid, rid };\r\n}\r\n\r\n//\r\n// Metadata tables.\r\n//\r\n\r\nexport function loadMdtModule(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtModuleItem {\r\n    let ptr = p;\r\n\r\n    const Generation = loadU2Field(d, ptr);\r\n    ptr += Generation._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Mvid = loadMdsGuidField(d, ptr);\r\n    ptr += Mvid._size;\r\n\r\n    const EncId = loadMdsGuidField(d, ptr);\r\n    ptr += EncId._size;\r\n\r\n    const EncBaseId = loadMdsGuidField(d, ptr);\r\n    ptr += EncBaseId._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Generation,\r\n        Name,\r\n        Mvid,\r\n        EncId,\r\n        EncBaseId,\r\n    };\r\n}\r\n\r\nexport function loadMdtTypeRef(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtTypeRefItem {\r\n    let ptr = p;\r\n\r\n    const ResolutionScope = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.ResolutionScope, ptr);\r\n    ptr += ResolutionScope._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Namespace = loadMdsStringsField(d, ptr);\r\n    ptr += Namespace._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        ResolutionScope,\r\n        Name,\r\n        Namespace,\r\n    };\r\n}\r\n\r\nexport function loadMdtTypeDef(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtTypeDefItem {\r\n    let ptr = p;\r\n\r\n    const Flags = loadU4EnumField<F.CorTypeAttr>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Namespace = loadMdsStringsField(d, ptr);\r\n    ptr += Namespace._size;\r\n\r\n    const Extends = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.TypeDefOrRef, ptr);\r\n    ptr += Extends._size;\r\n\r\n    const FieldList = loadMdtRidField(d, F.MetadataTableIndex.Field, ptr);\r\n    ptr += FieldList._size;\r\n\r\n    const MethodList = loadMdtRidField(d, F.MetadataTableIndex.MethodDef, ptr);\r\n    ptr += MethodList._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Flags,\r\n        Name,\r\n        Namespace,\r\n        Extends,\r\n        FieldList,\r\n        MethodList,\r\n    };\r\n}\r\n\r\nexport function loadMdtFieldPtr(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtFieldPtrItem {\r\n    let ptr = p;\r\n\r\n    const Field = loadMdtRidField(d, F.MetadataTableIndex.Field, ptr);\r\n    ptr += Field._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Field,\r\n    };\r\n}\r\n\r\nexport function loadMdtField(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtFieldItem {\r\n    let ptr = p;\r\n\r\n    const Flags = loadU2EnumField<F.CorFieldAttr>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Signature = loadMdsBlobField(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Flags,\r\n        Name,\r\n        Signature,\r\n    };\r\n}\r\n\r\nexport function loadMdtMethodPtr(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtMethodPtrItem {\r\n    let ptr = p;\r\n\r\n    const Method = loadMdtRidField(d, F.MetadataTableIndex.MethodDef, ptr);\r\n    ptr += Method._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Method,\r\n    };\r\n}\r\n\r\nexport function loadMdtMethodDef(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtMethodDefItem {\r\n    let ptr = p;\r\n\r\n    const RVA = loadU4Field(d, ptr);\r\n    ptr += RVA._size;\r\n\r\n    const ImplFlags = loadU2EnumField<F.CorMethodImpl>(d, ptr);\r\n    ptr += ImplFlags._size;\r\n\r\n    const Flags = loadU2EnumField<F.CorMethodAttr>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Signature = loadMdsBlobField(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    const ParamList = loadMdtRidField(d, F.MetadataTableIndex.Param, ptr);\r\n    ptr += ParamList._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        RVA,\r\n        ImplFlags,\r\n        Flags,\r\n        Name,\r\n        Signature,\r\n        ParamList,\r\n    };\r\n}\r\n\r\nexport function loadMdtParamPtr(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtParamPtrItem {\r\n    let ptr = p;\r\n\r\n    const Param = loadMdtRidField(d, F.MetadataTableIndex.Param, ptr);\r\n    ptr += Param._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Param,\r\n    };\r\n}\r\n\r\nexport function loadMdtParam(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtParamItem {\r\n    let ptr = p;\r\n\r\n    const Flags = loadU2EnumField<F.CorParamAttr>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Sequence = loadU2Field(d, ptr);\r\n    ptr += Sequence._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Flags,\r\n        Sequence,\r\n        Name,\r\n    };\r\n}\r\n\r\nexport function loadMdtInterfaceImpl(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtInterfaceImplItem {\r\n    let ptr = p;\r\n\r\n    const Class = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += Class._size;\r\n\r\n    const Interface = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.TypeDefOrRef, ptr);\r\n    ptr += Interface._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Class,\r\n        Interface,\r\n    };\r\n}\r\n\r\nexport function loadMdtMemberRef(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtMemberRefItem {\r\n    let ptr = p;\r\n\r\n    const Class = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.MemberRefParent, ptr);\r\n    ptr += Class._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Signature = loadMdsBlobField(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Class,\r\n        Name,\r\n        Signature,\r\n    };\r\n}\r\n\r\nexport function loadMdtConstant(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtConstantItem {\r\n    let ptr = p;\r\n\r\n    const Type = loadU1EnumField<F.CorElementType>(d, ptr);\r\n    ptr += Type._size;\r\n\r\n    const PaddingZero = loadU1Field(d, ptr);\r\n    ptr += PaddingZero._size;\r\n\r\n    const Parent = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.HasConstant, ptr);\r\n    ptr += Parent._size;\r\n\r\n    const Value = loadMdsBlobField(d, ptr);\r\n    ptr += Value._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Type,\r\n        PaddingZero,\r\n        Parent,\r\n        Value,\r\n    };\r\n}\r\n\r\nexport function loadMdtCustomAttribute(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtCustomAttributeItem {\r\n    let ptr = p;\r\n\r\n    const Parent = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.HasCustomAttribute, ptr);\r\n    ptr += Parent._size;\r\n\r\n    const Type = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.CustomAttributeType, ptr);\r\n    ptr += Type._size;\r\n\r\n    const Value = loadMdsBlobField(d, ptr);\r\n    ptr += Value._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Parent,\r\n        Type,\r\n        Value,\r\n    };\r\n}\r\n\r\nexport function loadMdtFieldMarshal(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtFieldMarshalItem {\r\n    let ptr = p;\r\n\r\n    const Parent = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.HasFieldMarshall, ptr);\r\n    ptr += Parent._size;\r\n\r\n    const NativeType = loadMdsBlobField(d, ptr);\r\n    ptr += NativeType._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Parent,\r\n        NativeType,\r\n    };\r\n}\r\n\r\nexport function loadMdtDeclSecurity(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtDeclSecurityItem {\r\n    let ptr = p;\r\n\r\n    const Action = loadU2EnumField<F.CorDeclSecurity>(d, ptr);\r\n    ptr += Action._size;\r\n\r\n    const Parent = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.HasDeclSecurity, ptr);\r\n    ptr += Parent._size;\r\n\r\n    const PermissionSet = loadMdsBlobField(d, ptr);\r\n    ptr += PermissionSet._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Action,\r\n        Parent,\r\n        PermissionSet,\r\n    };\r\n}\r\n\r\nexport function loadMdtClassLayout(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtClassLayoutItem {\r\n    let ptr = p;\r\n\r\n    const PackingSize = loadU2Field(d, ptr);\r\n    ptr += PackingSize._size;\r\n\r\n    const ClassSize = loadU4Field(d, ptr);\r\n    ptr += ClassSize._size;\r\n\r\n    const Parent = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += Parent._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        PackingSize,\r\n        ClassSize,\r\n        Parent,\r\n    };\r\n}\r\n\r\nexport function loadMdtFieldLayout(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtFieldLayoutItem {\r\n    let ptr = p;\r\n\r\n    const OffSet = loadU4Field(d, ptr);\r\n    ptr += OffSet._size;\r\n\r\n    const Field = loadMdtRidField(d, F.MetadataTableIndex.Field, ptr);\r\n    ptr += Field._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        OffSet,\r\n        Field,\r\n    };\r\n}\r\n\r\nexport function loadMdtStandAloneSig(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtStandAloneSigItem {\r\n    let ptr = p;\r\n\r\n    const Signature = loadMdsBlobField(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Signature,\r\n    };\r\n}\r\n\r\nexport function loadMdtEventMap(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtEventMapItem {\r\n    let ptr = p;\r\n\r\n    const Parent = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += Parent._size;\r\n\r\n    const EventList = loadMdtRidField(d, F.MetadataTableIndex.Event, ptr);\r\n    ptr += EventList._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Parent,\r\n        EventList,\r\n    };\r\n}\r\n\r\nexport function loadMdtEventPtr(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtEventPtrItem {\r\n    let ptr = p;\r\n\r\n    const Event = loadMdtRidField(d, F.MetadataTableIndex.Event, ptr);\r\n    ptr += Event._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Event,\r\n    };\r\n}\r\n\r\nexport function loadMdtEvent(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtEventItem {\r\n    let ptr = p;\r\n\r\n    const EventFlags = loadU2EnumField<F.CorEventAttr>(d, ptr);\r\n    ptr += EventFlags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const EventType = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.TypeDefOrRef, ptr);\r\n    ptr += EventType._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        EventFlags,\r\n        Name,\r\n        EventType,\r\n    };\r\n}\r\n\r\nexport function loadMdtPropertyMap(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtPropertyMapItem {\r\n    let ptr = p;\r\n\r\n    const Parent = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += Parent._size;\r\n\r\n    const PropertyList = loadMdtRidField(d, F.MetadataTableIndex.Property, ptr);\r\n    ptr += PropertyList._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Parent,\r\n        PropertyList,\r\n    };\r\n}\r\n\r\nexport function loadMdtPropertyPtr(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtPropertyPtrItem {\r\n    let ptr = p;\r\n\r\n    const Property = loadMdtRidField(d, F.MetadataTableIndex.Property, ptr);\r\n    ptr += Property._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Property,\r\n    };\r\n}\r\n\r\nexport function loadMdtProperty(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtPropertyItem {\r\n    let ptr = p;\r\n\r\n    const PropFlags = loadU2EnumField<F.CorPropertyAttr>(d, ptr);\r\n    ptr += PropFlags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Type = loadMdsBlobField(d, ptr);\r\n    ptr += Type._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        PropFlags,\r\n        Name,\r\n        Type,\r\n    };\r\n}\r\n\r\nexport function loadMdtMethodSemantics(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtMethodSemanticsItem {\r\n    let ptr = p;\r\n\r\n    const Semantic = loadU2EnumField<F.CorMethodSemanticsAttr>(d, ptr);\r\n    ptr += Semantic._size;\r\n\r\n    const Method = loadMdtRidField(d, F.MetadataTableIndex.MethodDef, ptr);\r\n    ptr += Method._size;\r\n\r\n    const Association = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.HasSemantics, ptr);\r\n    ptr += Association._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Semantic,\r\n        Method,\r\n        Association,\r\n    };\r\n}\r\n\r\nexport function loadMdtMethodImpl(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtMethodImplItem {\r\n    let ptr = p;\r\n\r\n    const Class = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += Class._size;\r\n\r\n    const MethodBody = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.MethodDefOrRef, ptr);\r\n    ptr += MethodBody._size;\r\n\r\n    const MethodDeclaration = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.MethodDefOrRef, ptr);\r\n    ptr += MethodDeclaration._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Class,\r\n        MethodBody,\r\n        MethodDeclaration,\r\n    };\r\n}\r\n\r\nexport function loadMdtModuleRef(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtModuleRefItem {\r\n    let ptr = p;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Name,\r\n    };\r\n}\r\n\r\nexport function loadMdtTypeSpec(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtTypeSpecItem {\r\n    let ptr = p;\r\n\r\n    const Signature = loadMdsBlobField(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Signature,\r\n    };\r\n}\r\n\r\nexport function loadMdtImplMap(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtImplMapItem {\r\n    let ptr = p;\r\n\r\n    const MappingFlags = loadU2EnumField<F.CorPinvokeMap>(d, ptr);\r\n    ptr += MappingFlags._size;\r\n\r\n    const MemberForwarded = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.MemberForwarded, ptr);\r\n    ptr += MemberForwarded._size;\r\n\r\n    const ImportName = loadMdsStringsField(d, ptr);\r\n    ptr += ImportName._size;\r\n\r\n    const ImportScope = loadMdtRidField(d, F.MetadataTableIndex.ModuleRef, ptr);\r\n    ptr += ImportScope._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        MappingFlags,\r\n        MemberForwarded,\r\n        ImportName,\r\n        ImportScope,\r\n    };\r\n}\r\n\r\nexport function loadMdtFieldRVA(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtFieldRVAItem {\r\n    let ptr = p;\r\n\r\n    const RVA = loadU4Field(d, ptr);\r\n    ptr += RVA._size;\r\n\r\n    const Field = loadMdtRidField(d, F.MetadataTableIndex.Field, ptr);\r\n    ptr += Field._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        RVA,\r\n        Field,\r\n    };\r\n}\r\n\r\nexport function loadMdtENCLog(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtENCLogItem {\r\n    let ptr = p;\r\n\r\n    const Token = loadU4Field(d, ptr);\r\n    ptr += Token._size;\r\n\r\n    const FuncCode = loadU4Field(d, ptr);\r\n    ptr += FuncCode._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Token,\r\n        FuncCode,\r\n    };\r\n}\r\n\r\nexport function loadMdtENCMap(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtENCMapItem {\r\n    let ptr = p;\r\n\r\n    const Token = loadU4Field(d, ptr);\r\n    ptr += Token._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Token,\r\n    };\r\n}\r\n\r\nexport function loadMdtAssembly(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtAssemblyItem {\r\n    let ptr = p;\r\n\r\n    const HashAlgId = loadU4EnumField<F.AssemblyHashAlgorithm>(d, ptr);\r\n    ptr += HashAlgId._size;\r\n\r\n    const MajorVersion = loadU2Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU2Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const BuildNumber = loadU2Field(d, ptr);\r\n    ptr += BuildNumber._size;\r\n\r\n    const RevisionNumber = loadU2Field(d, ptr);\r\n    ptr += RevisionNumber._size;\r\n\r\n    const Flags = loadU4EnumField<F.CorAssemblyFlags>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const PublicKey = loadMdsBlobField(d, ptr);\r\n    ptr += PublicKey._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Locale = loadMdsStringsField(d, ptr);\r\n    ptr += Locale._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        HashAlgId,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        BuildNumber,\r\n        RevisionNumber,\r\n        Flags,\r\n        PublicKey,\r\n        Name,\r\n        Locale,\r\n    };\r\n}\r\n\r\nexport function loadMdtAssemblyProcessor(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtAssemblyProcessorItem {\r\n    let ptr = p;\r\n\r\n    const Processor = loadU4Field(d, ptr);\r\n    ptr += Processor._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Processor,\r\n    };\r\n}\r\n\r\nexport function loadMdtAssemblyOS(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtAssemblyOSItem {\r\n    let ptr = p;\r\n\r\n    const OSPlatformID = loadU4Field(d, ptr);\r\n    ptr += OSPlatformID._size;\r\n\r\n    const OSMajorVersion = loadU4Field(d, ptr);\r\n    ptr += OSMajorVersion._size;\r\n\r\n    const OSMinorVersion = loadU4Field(d, ptr);\r\n    ptr += OSMinorVersion._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        OSPlatformID,\r\n        OSMajorVersion,\r\n        OSMinorVersion,\r\n    };\r\n}\r\n\r\nexport function loadMdtAssemblyRef(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtAssemblyRefItem {\r\n    let ptr = p;\r\n\r\n    const MajorVersion = loadU2Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU2Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const BuildNumber = loadU2Field(d, ptr);\r\n    ptr += BuildNumber._size;\r\n\r\n    const RevisionNumber = loadU2Field(d, ptr);\r\n    ptr += RevisionNumber._size;\r\n\r\n    const Flags = loadU4EnumField<F.CorAssemblyFlags>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const PublicKeyOrToken = loadMdsBlobField(d, ptr);\r\n    ptr += PublicKeyOrToken._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Locale = loadMdsStringsField(d, ptr);\r\n    ptr += Locale._size;\r\n\r\n    const HashValue = loadMdsBlobField(d, ptr);\r\n    ptr += HashValue._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        BuildNumber,\r\n        RevisionNumber,\r\n        Flags,\r\n        PublicKeyOrToken,\r\n        Name,\r\n        Locale,\r\n        HashValue,\r\n    };\r\n}\r\n\r\nexport function loadMdtAssemblyRefProcessor(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtAssemblyRefProcessorItem {\r\n    let ptr = p;\r\n\r\n    const Processor = loadU4Field(d, ptr);\r\n    ptr += Processor._size;\r\n\r\n    const AssemblyRef = loadMdtRidField(d, F.MetadataTableIndex.AssemblyRef, ptr);\r\n    ptr += AssemblyRef._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Processor,\r\n        AssemblyRef,\r\n    };\r\n}\r\n\r\nexport function loadMdtAssemblyRefOS(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtAssemblyRefOSItem {\r\n    let ptr = p;\r\n\r\n    const OSPlatformID = loadU4Field(d, ptr);\r\n    ptr += OSPlatformID._size;\r\n\r\n    const OSMajorVersion = loadU4Field(d, ptr);\r\n    ptr += OSMajorVersion._size;\r\n\r\n    const OSMinorVersion = loadU4Field(d, ptr);\r\n    ptr += OSMinorVersion._size;\r\n\r\n    const AssemblyRef = loadMdtRidField(d, F.MetadataTableIndex.AssemblyRef, ptr);\r\n    ptr += AssemblyRef._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        OSPlatformID,\r\n        OSMajorVersion,\r\n        OSMinorVersion,\r\n        AssemblyRef,\r\n    };\r\n}\r\n\r\nexport function loadMdtFile(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtFileItem {\r\n    let ptr = p;\r\n\r\n    const Flags = loadU4EnumField<F.CorFileFlags>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const HashValue = loadMdsBlobField(d, ptr);\r\n    ptr += HashValue._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Flags,\r\n        Name,\r\n        HashValue,\r\n    };\r\n}\r\n\r\nexport function loadMdtExportedType(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtExportedTypeItem {\r\n    let ptr = p;\r\n\r\n    const Flags = loadU4EnumField<F.CorTypeAttr>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const TypeDefId = loadU4Field(d, ptr);\r\n    ptr += TypeDefId._size;\r\n\r\n    const TypeName = loadMdsStringsField(d, ptr);\r\n    ptr += TypeName._size;\r\n\r\n    const TypeNamespace = loadMdsStringsField(d, ptr);\r\n    ptr += TypeNamespace._size;\r\n\r\n    const Implementation = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.Implementation, ptr);\r\n    ptr += Implementation._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Flags,\r\n        TypeDefId,\r\n        TypeName,\r\n        TypeNamespace,\r\n        Implementation,\r\n    };\r\n}\r\n\r\nexport function loadMdtManifestResource(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtManifestResourceItem {\r\n    let ptr = p;\r\n\r\n    const Offset = loadU4Field(d, ptr);\r\n    ptr += Offset._size;\r\n\r\n    const Flags = loadU4EnumField<F.CorManifestResourceFlags>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const Implementation = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.Implementation, ptr);\r\n    ptr += Implementation._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Offset,\r\n        Flags,\r\n        Name,\r\n        Implementation,\r\n    };\r\n}\r\n\r\nexport function loadMdtNestedClass(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtNestedClassItem {\r\n    let ptr = p;\r\n\r\n    const NestedClass = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += NestedClass._size;\r\n\r\n    const EnclosingClass = loadMdtRidField(d, F.MetadataTableIndex.TypeDef, ptr);\r\n    ptr += EnclosingClass._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        NestedClass,\r\n        EnclosingClass,\r\n    };\r\n}\r\n\r\nexport function loadMdtGenericParam(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtGenericParamItem {\r\n    let ptr = p;\r\n\r\n    const Number = loadU2Field(d, ptr);\r\n    ptr += Number._size;\r\n\r\n    const Flags = loadU2EnumField<F.CorGenericParamAttr>(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Owner = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.TypeOrMethodDef, ptr);\r\n    ptr += Owner._size;\r\n\r\n    const Name = loadMdsStringsField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Number,\r\n        Flags,\r\n        Owner,\r\n        Name,\r\n    };\r\n}\r\n\r\nexport function loadMdtMethodSpec(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtMethodSpecItem {\r\n    let ptr = p;\r\n\r\n    const Method = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.MethodDefOrRef, ptr);\r\n    ptr += Method._size;\r\n\r\n    const Instantiation = loadMdsBlobField(d, ptr);\r\n    ptr += Instantiation._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Method,\r\n        Instantiation,\r\n    };\r\n}\r\n\r\nexport function loadMdtGenericParamConstraint(d: FileDataProvider & MetadataSizingProvider, p: number): S.MdtGenericParamConstraintItem {\r\n    let ptr = p;\r\n\r\n    const Owner = loadMdtRidField(d, F.MetadataTableIndex.GenericParam, ptr);\r\n    ptr += Owner._size;\r\n\r\n    const Constraint = loadMdCodedTokenField(d, F.MetadataCodedTokenIndex.TypeDefOrRef, ptr);\r\n    ptr += Constraint._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Owner,\r\n        Constraint,\r\n    };\r\n}\r\n","import * as S from \"./structures\";\r\nimport * as A from \"./aux-structures\";\r\nimport * as L from \"./loader\";\r\nimport * as F from \"./image-flags\";\r\nimport * as E from \"./error\";\r\nimport * as U from \"./utils\";\r\n\r\nexport class PEImage implements L.FileDataProvider, L.MetadataSizingProvider {\r\n    public static load(buf: ArrayBuffer): PEImage {\r\n        return new PEImage(buf);\r\n    }\r\n\r\n    //\r\n    // FileDataProvider functions.\r\n    //\r\n\r\n    public getU1(p: number): number {\r\n        this.check(p, 1);\r\n        return this.data.getUint8(p);\r\n    }\r\n\r\n    public getU2(p: number): number {\r\n        this.check(p, 2);\r\n        return this.data.getUint16(p, true);\r\n    }\r\n\r\n    public getU4(p: number): number {\r\n        this.check(p, 3);\r\n        return this.data.getUint32(p, true);\r\n    }\r\n\r\n    public getData(p: number, sz: number): Uint8Array {\r\n        this.check(p, sz);\r\n        return new Uint8Array(this.data.buffer.slice(p, p + sz));\r\n    }\r\n\r\n    //\r\n    // Image attributes.\r\n    //\r\n\r\n    public is32Bit(): boolean | undefined {\r\n        const optHdr = this.getOptionalHeader();\r\n        if (optHdr == null) {\r\n            return undefined;\r\n        }\r\n\r\n        switch (optHdr.Magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC: return true;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC: return false;\r\n            default: return undefined;\r\n        }\r\n    }\r\n\r\n    public isManaged(): boolean {\r\n        const dd = this.getDataDirectories();\r\n        return dd != null && this.isDataDirectoryValid(\r\n            dd.items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR]\r\n        );\r\n    }\r\n\r\n    public hasMetadata(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.MetaData);\r\n    }\r\n\r\n    public hasManagedResources(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.Resources);\r\n    }\r\n\r\n    public hasStrongNameSignature(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.StrongNameSignature);\r\n    }\r\n\r\n    public isMetadataTableValid(id: F.MetadataTableIndex): boolean {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].valid;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public isMetadataTableSorted(id: F.MetadataTableIndex): boolean {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].sorted;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public getMetadataTableRows(id: F.MetadataTableIndex): number {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[id]) {\r\n            return info[id].rows;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    //\r\n    // Image headers.\r\n    //\r\n\r\n    public getDosHeader(): S.ImageDosHeader | undefined {\r\n        return this.dosHeader;\r\n    }\r\n\r\n    public getPESignature(): S.U4Field | undefined {\r\n        return this.peSignature;\r\n    }\r\n\r\n    public getFileHeader(): S.ImageFileHeader | undefined {\r\n        return this.fileHeader;\r\n    }\r\n\r\n    public getOptionalHeader(): S.ImageOptionalHeader32 | S.ImageOptionalHeader64 | undefined {\r\n        return this.optionalHeader;\r\n    }\r\n\r\n    public getDataDirectories(): S.StructArray<S.ImageDataDirectory> | undefined {\r\n        return this.dataDirectories;\r\n    }\r\n\r\n    public getSectionHeaders(): S.StructArray<S.ImageSectionHeader> | undefined {\r\n        return this.sectionHeaders;\r\n    }\r\n\r\n    //\r\n    // Metadata structures.\r\n    //\r\n\r\n    public getCliHeader(): S.CliHeader | undefined {\r\n        if (this.cliHeader) return this.cliHeader;\r\n        if (!this.isManaged()) return undefined;\r\n\r\n        const offset = this.rvaToOffset(this.dataDirectories!\r\n            .items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR]\r\n            .VirtualAddress.value);\r\n\r\n        this.cliHeader = L.loadCliHeader(this, offset);\r\n        return this.cliHeader;\r\n    }\r\n\r\n    public getMetadataRoot(): S.MetadataRoot | undefined {\r\n        if (this.metadataRoot) return this.metadataRoot;\r\n\r\n        const cliHeader = this.getCliHeader();\r\n        if (!cliHeader) return undefined;\r\n\r\n        const offset = this.rvaToOffset(cliHeader.MetaData.VirtualAddress.value);\r\n        if (!offset) return undefined;\r\n\r\n        this.metadataRoot = L.loadMetadataRoot(this, offset);\r\n        return this.metadataRoot;\r\n    }\r\n\r\n    public getMetadataStreamHeaders(): S.StructArray<S.MetadataStreamHeader> | undefined {\r\n        if (this.metadataStreamHeaders) return this.metadataStreamHeaders;\r\n\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot || !mdRoot.Streams.value) return undefined;\r\n\r\n        this.metadataStreamHeaders = L.loadStructArrayByCount(\r\n            this,\r\n            mdRoot._offset + mdRoot._size,\r\n            L.loadMetadataStreamHeader,\r\n            mdRoot.Streams.value\r\n        );\r\n        return this.metadataStreamHeaders;\r\n    }\r\n\r\n    public getMetadataStreamHeader(name: F.MetadataStreamName): S.MetadataStreamHeader | undefined {\r\n        const headers = this.getMetadataStreamHeaders();\r\n        if (!headers) return undefined;\r\n\r\n        return headers.items.filter(v => v.Name.value == name).shift();\r\n    }\r\n\r\n    public getStrongNameSignature(): S.Field | undefined {\r\n        if (this.strongNameSignature) return this.strongNameSignature;\r\n\r\n        const cliHeader = this.getCliHeader();\r\n        if (!cliHeader) return undefined;\r\n\r\n        const offset = this.rvaToOffset(cliHeader.StrongNameSignature.VirtualAddress.value);\r\n        if (!offset) return undefined;\r\n\r\n        this.strongNameSignature = L.loadFixedSizeByteArrayField(\r\n            this, offset,\r\n            cliHeader.StrongNameSignature.Size.value);\r\n        return this.strongNameSignature;\r\n    }\r\n\r\n    public getMetadataTableHeader(): S.MetadataTableHeader | undefined {\r\n        if (this.metadataTableHeader) return this.metadataTableHeader;\r\n\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.Table);\r\n        if (!sh) return undefined;\r\n\r\n        const offset = mdRoot._offset + sh.Offset.value;\r\n        this.metadataTableHeader = L.loadMetadataTableHeader(this, offset);\r\n        this.fillMetadataTableInfo();\r\n        this.fillMetadataTableInfoExtra();\r\n\r\n        return this.metadataTableHeader;\r\n    }\r\n\r\n    public getMdsStringsItem(offset: number): S.StringField | undefined {\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.Strings);\r\n        if (!sh) return undefined;\r\n\r\n        if (offset < 0 || offset >= sh.Size.value) {\r\n            return undefined;\r\n        } else {\r\n            return L.loadNullTerminatedStringField(this,\r\n                mdRoot._offset + sh.Offset.value + offset);\r\n        }\r\n    }\r\n\r\n    public getMdsUSItem(offset: number): S.MetadataUSItem | undefined {\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.US);\r\n        if (!sh) return undefined;\r\n\r\n        if (offset < 0 || offset >= sh.Size.value) {\r\n            return undefined;\r\n        } else {\r\n            return L.loadMetadataUSItem(this,\r\n                mdRoot._offset + sh.Offset.value + offset);\r\n        }\r\n    }\r\n\r\n    public getMdsGuidItems(): S.StructArray<S.Field> | undefined {\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.GUID);\r\n        if (!sh) return undefined;\r\n\r\n        const count = sh.Size.value / 16;\r\n        return L.loadStructArrayByCount(\r\n            this,\r\n            mdRoot._offset + sh.Offset.value,\r\n            (d, p) => L.loadFixedSizeByteArrayField(d, p, 16),\r\n            count);\r\n    }\r\n\r\n    public getMdsBlobItem(offset: number): S.MetadataBlobItem | undefined {\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.Blob);\r\n        if (!sh) return undefined;\r\n\r\n        if (offset < 0 || offset >= sh.Size.value) {\r\n            return undefined;\r\n        } else {\r\n            return L.loadMetadataBlobItem(this,\r\n                mdRoot._offset + sh.Offset.value + offset);\r\n        }\r\n    }\r\n\r\n    public getMdtModuleItem(rid /* 1-based */: number): S.MdtModuleItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Module, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Module];\r\n        return L.loadMdtModule(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtTypeRefItem(rid /* 1-based */: number): S.MdtTypeRefItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.TypeRef, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Module];\r\n        return L.loadMdtTypeRef(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtTypeDefItem(rid /* 1-based */: number): S.MdtTypeDefItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.TypeDef, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.TypeDef];\r\n        return L.loadMdtTypeDef(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtFieldPtrItem(rid /* 1-based */: number): S.MdtFieldPtrItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.FieldPtr, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.FieldPtr];\r\n        return L.loadMdtFieldPtr(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtFieldItem(rid /* 1-based */: number): S.MdtFieldItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Field, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Field];\r\n        return L.loadMdtField(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtMethodPtrItem(rid /* 1-based */: number): S.MdtMethodPtrItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.MethodPtr, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.MethodPtr];\r\n        return L.loadMdtMethodPtr(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtMethodDefItem(rid /* 1-based */: number): S.MdtMethodDefItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.MethodDef, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.MethodDef];\r\n        return L.loadMdtMethodDef(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtParamPtrItem(rid /* 1-based */: number): S.MdtParamPtrItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ParamPtr, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ParamPtr];\r\n        return L.loadMdtParamPtr(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtParamItem(rid /* 1-based */: number): S.MdtParamItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Param, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Param];\r\n        return L.loadMdtParam(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtInterfaceImplItem(rid /* 1-based */: number): S.MdtInterfaceImplItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.InterfaceImpl, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.InterfaceImpl];\r\n        return L.loadMdtInterfaceImpl(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtMemberRefItem(rid /* 1-based */: number): S.MdtMemberRefItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.MemberRef, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.MemberRef];\r\n        return L.loadMdtMemberRef(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtConstantItem(rid /* 1-based */: number): S.MdtConstantItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Constant, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Constant];\r\n        return L.loadMdtConstant(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtCustomAttributeItem(rid /* 1-based */: number): S.MdtCustomAttributeItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.CustomAttribute, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.CustomAttribute];\r\n        return L.loadMdtCustomAttribute(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtFieldMarshalItem(rid /* 1-based */: number): S.MdtFieldMarshalItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.FieldMarshal, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.FieldMarshal];\r\n        return L.loadMdtFieldMarshal(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtDeclSecurityItem(rid /* 1-based */: number): S.MdtDeclSecurityItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.DeclSecurity, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.DeclSecurity];\r\n        return L.loadMdtDeclSecurity(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtClassLayoutItem(rid /* 1-based */: number): S.MdtClassLayoutItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ClassLayout, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ClassLayout];\r\n        return L.loadMdtClassLayout(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtFieldLayoutItem(rid /* 1-based */: number): S.MdtFieldLayoutItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.FieldLayout, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.FieldLayout];\r\n        return L.loadMdtFieldLayout(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtStandAloneSigItem(rid /* 1-based */: number): S.MdtStandAloneSigItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.StandAloneSig, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.StandAloneSig];\r\n        return L.loadMdtStandAloneSig(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtEventMapItem(rid /* 1-based */: number): S.MdtEventMapItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.EventMap, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.EventMap];\r\n        return L.loadMdtEventMap(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtEventPtrItem(rid /* 1-based */: number): S.MdtEventPtrItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.EventPtr, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.EventPtr];\r\n        return L.loadMdtEventPtr(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtEventItem(rid /* 1-based */: number): S.MdtEventItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Event, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Event];\r\n        return L.loadMdtEvent(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtPropertyMapItem(rid /* 1-based */: number): S.MdtPropertyMapItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.PropertyMap, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.PropertyMap];\r\n        return L.loadMdtPropertyMap(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtPropertyPtrItem(rid /* 1-based */: number): S.MdtPropertyPtrItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.PropertyPtr, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.PropertyPtr];\r\n        return L.loadMdtPropertyPtr(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtPropertyItem(rid /* 1-based */: number): S.MdtPropertyItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Property, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Property];\r\n        return L.loadMdtProperty(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtMethodSemanticsItem(rid /* 1-based */: number): S.MdtMethodSemanticsItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.MethodSemantics, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.MethodSemantics];\r\n        return L.loadMdtMethodSemantics(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtMethodImplItem(rid /* 1-based */: number): S.MdtMethodImplItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.MethodImpl, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.MethodImpl];\r\n        return L.loadMdtMethodImpl(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtModuleRefItem(rid /* 1-based */: number): S.MdtModuleRefItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ModuleRef, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ModuleRef];\r\n        return L.loadMdtModuleRef(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtTypeSpecItem(rid /* 1-based */: number): S.MdtTypeSpecItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.TypeSpec, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.TypeSpec];\r\n        return L.loadMdtTypeSpec(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtImplMapItem(rid /* 1-based */: number): S.MdtImplMapItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ImplMap, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ImplMap];\r\n        return L.loadMdtImplMap(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtFieldRVAItem(rid /* 1-based */: number): S.MdtFieldRVAItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.FieldRVA, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.FieldRVA];\r\n        return L.loadMdtFieldRVA(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtENCLogItem(rid /* 1-based */: number): S.MdtENCLogItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ENCLog, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ENCLog];\r\n        return L.loadMdtENCLog(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtENCMapItem(rid /* 1-based */: number): S.MdtENCMapItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ENCMap, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ENCMap];\r\n        return L.loadMdtENCMap(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtAssemblyItem(rid /* 1-based */: number): S.MdtAssemblyItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.Assembly, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.Assembly];\r\n        return L.loadMdtAssembly(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtAssemblyProcessorItem(rid /* 1-based */: number): S.MdtAssemblyProcessorItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.AssemblyProcessor, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.AssemblyProcessor];\r\n        return L.loadMdtAssemblyProcessor(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtAssemblyOSItem(rid /* 1-based */: number): S.MdtAssemblyOSItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.AssemblyOS, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.AssemblyOS];\r\n        return L.loadMdtAssemblyOS(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtAssemblyRefItem(rid /* 1-based */: number): S.MdtAssemblyRefItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.AssemblyRef, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.AssemblyRef];\r\n        return L.loadMdtAssemblyRef(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtAssemblyRefProcessorItem(rid /* 1-based */: number): S.MdtAssemblyRefProcessorItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.AssemblyRefProcessor, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.AssemblyRefProcessor];\r\n        return L.loadMdtAssemblyRefProcessor(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtAssemblyRefOSItem(rid /* 1-based */: number): S.MdtAssemblyRefOSItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.AssemblyRefOS, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.AssemblyRefOS];\r\n        return L.loadMdtAssemblyRefOS(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtFileItem(rid /* 1-based */: number): S.MdtFileItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.File, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.File];\r\n        return L.loadMdtFile(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtExportedTypeItem(rid /* 1-based */: number): S.MdtExportedTypeItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ExportedType, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ExportedType];\r\n        return L.loadMdtExportedType(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtManifestResourceItem(rid /* 1-based */: number): S.MdtManifestResourceItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.ManifestResource, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.ManifestResource];\r\n        return L.loadMdtManifestResource(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtNestedClassItem(rid /* 1-based */: number): S.MdtNestedClassItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.NestedClass, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.NestedClass];\r\n        return L.loadMdtNestedClass(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtGenericParamItem(rid /* 1-based */: number): S.MdtGenericParamItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.GenericParam, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.GenericParam];\r\n        return L.loadMdtGenericParam(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtMethodSpecItem(rid /* 1-based */: number): S.MdtMethodSpecItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.MethodSpec, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.MethodSpec];\r\n        return L.loadMdtMethodSpec(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    public getMdtGenericParamConstraintItem(rid /* 1-based */: number): S.MdtGenericParamConstraintItem | undefined {\r\n        if (!this.checkMdt(F.MetadataTableIndex.GenericParamConstraint, rid)) {\r\n            return undefined;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo![F.MetadataTableIndex.GenericParamConstraint];\r\n        return L.loadMdtGenericParamConstraint(this, ti.baseOffset + ti.rowSize * (rid - 1));\r\n    }\r\n\r\n    //\r\n    // Metadata sizing.\r\n    //\r\n\r\n    public getHeapSize(heap: F.MetadataHeapSizeID): number {\r\n        if (this.metadataSizingCache.heap) {\r\n            return this.metadataSizingCache.heap[heap];\r\n        }\r\n\r\n        const h = this.getMetadataTableHeader();\r\n        if (!h) return 0;\r\n\r\n        const getHeapSizeFunc = (heap: F.MetadataHeapSizeID) =>\r\n            (h.HeapSizes.value & (1 << heap)) != 0 ? 4 : 2;\r\n\r\n        this.metadataSizingCache.heap = [\r\n            F.MetadataHeapSizeID.String,\r\n            F.MetadataHeapSizeID.GUID,\r\n            F.MetadataHeapSizeID.Blob]\r\n            .map(v => (h.HeapSizes.value & (1 << v)) != 0 ? 4 : 2);\r\n\r\n        return this.metadataSizingCache.heap[heap];\r\n    }\r\n\r\n    public getTableIDSize(t: F.MetadataTableIndex): number {\r\n        const info = this.metadataTableInfo;\r\n        if (info && info[t]) {\r\n            return info[t].idSize;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    public getCodedTokenSize(t: F.MetadataCodedTokenIndex): number {\r\n        if (this.metadataSizingCache.codedToken) {\r\n            return this.metadataSizingCache.codedToken[t];\r\n        }\r\n\r\n        this.metadataSizingCache.codedToken = F.ctc.map(c => {\r\n            const maxRows = 0xFFFF >> c.tagSize;\r\n            for (let tid of c.tables) {\r\n                if (this.getMetadataTableRows(tid) > maxRows) {\r\n                    return 4;\r\n                }\r\n            }\r\n            return 2;\r\n        });\r\n\r\n        return this.metadataSizingCache.codedToken[t];\r\n    }\r\n\r\n\r\n    //\r\n    // Utilities.\r\n    //\r\n\r\n    public rvaToOffset(rva: number): number {\r\n        const sh = this.getSectionHeaderByRva(rva);\r\n        if (!sh) return 0;\r\n\r\n        return rva - sh.VirtualAddress.value + sh.PointerToRawData.value;\r\n    }\r\n\r\n    public offsetToRva(offset: number): number {\r\n        const sh = this.getSectionHeaderByOffset(offset);\r\n        if (!sh) return 0;\r\n\r\n        return offset - sh.PointerToRawData.value + sh.VirtualAddress.value;\r\n    }\r\n\r\n    //\r\n    // Private implementations.\r\n    //\r\n\r\n    private check(p: number, sz: number): void {\r\n        if (p < 0 || p >= this.data.byteLength\r\n            || sz < 0 || p + sz > this.data.byteLength) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_POSITION, p, sz);\r\n        }\r\n    }\r\n\r\n    private constructor(buf: ArrayBuffer) {\r\n        this.data = new DataView(buf);\r\n        this.loadHeaders();\r\n    }\r\n\r\n    private loadHeaders(): void {\r\n        let ptr = 0;\r\n        this.dosHeader = L.loadImageDosHeader(this, ptr);\r\n\r\n        if (this.dosHeader.e_magic.value != F.IMAGE_DOS_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DOS_SIGNATURE, ptr, 2);\r\n        }\r\n\r\n        ptr = this.dosHeader.e_lfanew.value;\r\n        this.peSignature = L.loadU4Field(this, ptr);\r\n\r\n        if (this.peSignature.value != F.IMAGE_NT_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_PE_SIGNATURE, ptr, 4);\r\n        }\r\n\r\n        ptr += this.peSignature._size;\r\n        this.fileHeader = L.loadImageFileHeader(this, ptr);\r\n\r\n        ptr += this.fileHeader._size;\r\n        const magic = L.loadU2Field(this, ptr);\r\n        switch (magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader32(this, ptr);\r\n                break;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader64(this, ptr);\r\n                break;\r\n            default:\r\n                throw new E.PEError(E.PEErrorType.INVALID_OPTIONAL_HEADER_MAGIC, ptr, 2);\r\n        }\r\n\r\n        if (this.optionalHeader.NumberOfRvaAndSizes.value != F.IMAGE_NUMBEROF_DIRECTORY_ENTRIES) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_DIRECTORY_COUNT,\r\n                this.optionalHeader.NumberOfRvaAndSizes._offset,\r\n                this.optionalHeader.NumberOfRvaAndSizes._size);\r\n        }\r\n\r\n        ptr += this.optionalHeader._size;\r\n        this.dataDirectories = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageDataDirectory,\r\n            this.optionalHeader.NumberOfRvaAndSizes.value);\r\n\r\n        ptr += this.dataDirectories._size;\r\n        this.sectionHeaders = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageSectionHeader,\r\n            this.fileHeader.NumberOfSections.value);\r\n    }\r\n\r\n    private getSectionHeaderByOffset(offset: number): S.ImageSectionHeader | undefined {\r\n        return this.sectionHeaders && this.sectionHeaders.items.filter(h => {\r\n            const p = h.PointerToRawData.value;\r\n            const sz = h.SizeOfRawData.value;\r\n            return offset >= p && offset < p + sz;\r\n        }).shift();\r\n    }\r\n\r\n    private getSectionHeaderByRva(rva: number): S.ImageSectionHeader | undefined {\r\n        return this.sectionHeaders && this.sectionHeaders.items.filter(h => {\r\n            const p = h.VirtualAddress.value;\r\n            const sz = h.VirtualSize.value;\r\n            return rva >= p && rva < p + sz;\r\n        }).shift();\r\n    }\r\n\r\n    private isDataDirectoryValid(dd?: S.ImageDataDirectory): boolean {\r\n        return (dd && dd.VirtualAddress.value > 0 && dd.Size.value > 0) || false;\r\n    }\r\n\r\n    private fillMetadataTableInfo(): void {\r\n        const h = this.metadataTableHeader;\r\n        if (!h) return;\r\n\r\n        let info: A.MetadataTableInfo = {};\r\n        let nValid = 0;\r\n        for (let id = 0; id < F.NumberOfMdTables; id++) {\r\n            const valid = U.isSetLong(h.Valid.high, h.Valid.low, id);\r\n            const sorted = U.isSetLong(h.Sorted.high, h.Sorted.low, id);\r\n            const rows = valid ? h.Rows.items[nValid++].value : 0;\r\n            info[id] = {\r\n                valid,\r\n                sorted,\r\n                rows,\r\n                idSize: valid ? (rows > 0xFFFF ? 4 : 2) : 0,\r\n                baseOffset: 0,\r\n                rowSize: 0\r\n            };\r\n        }\r\n        this.metadataTableInfo = info;\r\n    }\r\n\r\n    private fillMetadataTableInfoExtra(): void {\r\n        const h = this.metadataTableHeader;\r\n        if (!h) return;\r\n\r\n        const ti = this.metadataTableInfo;\r\n        if (!ti) return;\r\n\r\n        const ctid = F.MetadataCodedTokenIndex;\r\n        const ctsz = this.getCodedTokenSize.bind(this);\r\n\r\n        const tid = F.MetadataTableIndex;\r\n\r\n        const stringsSize = this.getHeapSize(F.MetadataHeapSizeID.String);\r\n        const guidSize = this.getHeapSize(F.MetadataHeapSizeID.GUID);\r\n        const blobSize = this.getHeapSize(F.MetadataHeapSizeID.Blob);\r\n\r\n        let baseOffset = h._offset + h._size;\r\n\r\n        let tbli = ti[tid.Module];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + stringsSize + 3 * guidSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.TypeRef];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ctsz(ctid.ResolutionScope) + 2 * stringsSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.TypeDef];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 2 * stringsSize + ctsz(ctid.TypeDefOrRef) + ti[tid.Field].idSize + ti[tid.MethodDef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.FieldPtr];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.Field].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.Field];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + stringsSize + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.MethodPtr];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.MethodDef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.MethodDef];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 2 + 2 + stringsSize + blobSize + ti[tid.Param].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ParamPtr];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.Param].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.Param];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + 2 + stringsSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.InterfaceImpl];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.TypeDef].idSize + ctsz(ctid.TypeDefOrRef);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.MemberRef];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ctsz(ctid.MemberRefParent) + stringsSize + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.Constant];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 1 + 1 + ctsz(ctid.HasConstant) + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.CustomAttribute];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ctsz(ctid.HasCustomAttribute) + ctsz(ctid.CustomAttributeType) + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.FieldMarshal];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ctsz(ctid.HasFieldMarshall) + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.DeclSecurity];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + ctsz(ctid.HasDeclSecurity) + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ClassLayout];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + 4 + ti[tid.TypeDef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.FieldLayout];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + ti[tid.Field].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.StandAloneSig];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.EventMap];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.TypeDef].idSize + ti[tid.Event].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.EventPtr];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.Event].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.Event];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + stringsSize + ctsz(ctid.TypeDefOrRef);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.PropertyMap];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.TypeDef].idSize + ti[tid.Property].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.PropertyPtr];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.Property].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.Property];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + stringsSize + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.MethodSemantics];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + ti[tid.MethodDef].idSize + ctsz(ctid.HasSemantics);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.MethodImpl];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.TypeDef].idSize + 2 * ctsz(ctid.MethodDefOrRef);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ModuleRef];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = stringsSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.TypeSpec];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ImplMap];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + ctsz(ctid.MemberForwarded) + stringsSize + ti[tid.ModuleRef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.FieldRVA];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + ti[tid.Field].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ENCLog];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 4;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ENCMap];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.Assembly];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 2 + 2 + 2 + 2 + 4 + blobSize + 2 * stringsSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.AssemblyProcessor];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.AssemblyOS];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 4 + 4;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.AssemblyRef];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + 2 + 2 + 2 + 4 + 2 * blobSize + 2 * stringsSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.AssemblyRefProcessor];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + ti[tid.AssemblyRef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.AssemblyRefOS];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 4 + 4 + ti[tid.AssemblyRef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.File];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + stringsSize + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ExportedType];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 4 + 2 * stringsSize + ctsz(ctid.Implementation);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.ManifestResource];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 4 + 4 + stringsSize + ctsz(ctid.Implementation);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.NestedClass];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 * ti[tid.TypeDef].idSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.GenericParam];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = 2 + 2 + ctsz(ctid.TypeOrMethodDef) + stringsSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.MethodSpec];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ctsz(ctid.MethodDefOrRef) + blobSize;\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n\r\n        tbli = ti[tid.GenericParamConstraint];\r\n        if (tbli.valid) {\r\n            tbli.baseOffset = baseOffset;\r\n            tbli.rowSize = ti[tid.GenericParam].idSize + ctsz(ctid.TypeDefOrRef);\r\n        }\r\n        baseOffset += tbli.rows * tbli.rowSize;\r\n    }\r\n\r\n    private checkMdt(tid: F.MetadataTableIndex, rid: number): boolean {\r\n        if (!this.metadataTableInfo) {\r\n            return false;\r\n        }\r\n\r\n        const ti = this.metadataTableInfo[tid];\r\n        return ti != null && ti.valid && rid > 0 && rid <= ti.rows;\r\n    }\r\n\r\n    private readonly data: DataView;\r\n\r\n    private dosHeader?: S.ImageDosHeader;\r\n    private peSignature?: S.U4Field;\r\n    private fileHeader?: S.ImageFileHeader;\r\n    private optionalHeader?: S.ImageOptionalHeader32 | S.ImageOptionalHeader64;\r\n    private dataDirectories?: S.StructArray<S.ImageDataDirectory>;\r\n    private sectionHeaders?: S.StructArray<S.ImageSectionHeader>;\r\n\r\n    private cliHeader?: S.CliHeader;\r\n    private metadataRoot?: S.MetadataRoot;\r\n    private metadataStreamHeaders?: S.StructArray<S.MetadataStreamHeader>;\r\n    private strongNameSignature?: S.Field;\r\n\r\n    private metadataTableHeader?: S.MetadataTableHeader;\r\n    private metadataTableInfo?: A.MetadataTableInfo;\r\n\r\n    private metadataSizingCache: {\r\n        heap?: {\r\n            [key: number /* F.MetadataHeapSizeID */]: number;\r\n        };\r\n        codedToken?: {\r\n            [key: number /* F.MetadataCodedTokenIndex */]: number;\r\n        }\r\n    } = {};\r\n}\r\n","export function createResNavDataMessage(navList: W.NavData[]): W.ResNavDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_NAV_DATA,\r\n        navList\r\n    };\r\n}\r\n\r\nexport function createResPageDataMessage(pageData: W.PageData): W.ResPageDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PAGE_DATA,\r\n        pageData\r\n    };\r\n}\r\n\r\nexport function createResPEPropsMessage(is32Bit?: boolean, isManaged?: boolean): W.ResPEPropsMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_PROPS,\r\n        is32Bit,\r\n        isManaged\r\n    };\r\n}\r\n\r\nexport function createResPEErrorMessage(error: string): W.ResPEErrorMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_ERROR,\r\n        error\r\n    };\r\n}\r\n","import * as M from \"./message\";\r\nimport { PEImage } from \"./pe/image\";\r\nimport { generatePageData, clearGeneratorCache } from \"./page-data/generator\";\r\nimport { generateNavList } from \"./page-data/nav-data\";\r\n\r\nlet pe: PEImage | null = null;\r\n\r\nonmessage = (ev) => {\r\n    const msg = ev.data as W.WorkerMessage;\r\n    switch (msg.type) {\r\n        case W.WorkerMessageType.REQ_OPEN_FILE:\r\n            handleReqOpenFile(msg as W.ReqOpenFileMessage);\r\n            break;\r\n\r\n        case W.WorkerMessageType.REQ_OPEN_NAV:\r\n            handleReqOpenNav(msg as W.ReqOpenNavMessage);\r\n            break;\r\n    }\r\n};\r\n\r\nfunction handleReqOpenFile(msg: W.ReqOpenFileMessage): void {\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = ev => {\r\n        try {\r\n            const buf = <ArrayBuffer>(<FileReader>ev.target).result;\r\n            pe = PEImage.load(buf);\r\n            clearGeneratorCache();\r\n\r\n            // Response with page data.\r\n            const pageData = generatePageData(pe, W.PageID.HEADERS);\r\n            const pageDataMsg = M.createResPageDataMessage(pageData);\r\n            postMessage(pageDataMsg);\r\n\r\n            // Response with PE properties.\r\n            const is32Bit = pe.is32Bit();\r\n            const isManaged = pe.isManaged();\r\n            const pePropsMsg = M.createResPEPropsMessage(is32Bit, isManaged);\r\n            postMessage(pePropsMsg);\r\n\r\n            // Response with navigation data.\r\n            const navList = generateNavList(pe);\r\n            const navMsg = M.createResNavDataMessage(navList);\r\n            postMessage(navMsg);\r\n        } catch (ex) {\r\n            const msg = M.createResPEErrorMessage(ex.message\r\n                || `Unknown error: ${JSON.stringify(ex)}`);\r\n            postMessage(msg);\r\n        }\r\n    };\r\n\r\n    reader.onerror = ev => {\r\n        pe = null;\r\n        const msg = M.createResPEErrorMessage(\"Can't open file.\");\r\n        postMessage(msg);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(msg.file);\r\n}\r\n\r\nfunction handleReqOpenNav(msg: W.ReqOpenNavMessage): void {\r\n    if (pe != null) {\r\n        const { pageID, subID, pageNum, elemID } = msg.target;\r\n        const pageData = generatePageData(pe, pageID, subID, pageNum);\r\n        pageData.nav.elemID = elemID;\r\n        const res = M.createResPageDataMessage(pageData);\r\n        postMessage(res);\r\n    }\r\n}"],"sourceRoot":""}