{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker/page-data/formatter.ts","webpack:///./src/worker/pe/image-flags.ts","webpack:///./src/worker/page-data/nav-data.ts","webpack:///./src/worker/page-data/mds-table.ts","webpack:///./src/worker/page-data/metadata-headers.ts","webpack:///./src/worker/page-data/headers.ts","webpack:///./src/worker/page-data/generator.ts","webpack:///./src/worker/pe/error.ts","webpack:///./src/worker/pe/utils.ts","webpack:///./src/worker/pe/loader.ts","webpack:///./src/worker/pe/image.ts","webpack:///./src/worker/message.ts","webpack:///./src/worker/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","formatU1RawHex","padZeroLeft","toString","toUpperCase","formatU2RawHex","formatU4RawHex","formatU1Hex","formatU2Hex","formatU4Hex","formatHexDec","formatBytes","bytes","lineWidth","lines","start","length","line","Array","from","subarray","map","b","join","push","str","len","repeat","formatUIntField","f","sz","showDec","hex","offset","_offset","size","_size","rawData","data","formatDec","v","toLocaleString","formatStructTitle","title","formatU1Field","formatU2Field","formatU4Field","formatU8Field","high","low","formatBytesField","formatStringField","IMAGE_DOS_SIGNATURE","IMAGE_NT_SIGNATURE","IMAGE_NT_OPTIONAL_HDR32_MAGIC","IMAGE_NT_OPTIONAL_HDR64_MAGIC","ImageFile","ImageFileMachine","ImageSubsystem","ImageDllCharacteristics","ImageDirectoryEntry","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","ImageSection","ComImageFlags","MetadataSignature","generateNavList","pe","pageID","navList","target","children","elemID","navMD","isManaged","hasMetadata","hasStrongNameSignature","generateMDHeadersNavData","navMDT","getMetadataTableHeader","generateMDTablesNavData","FM","generateMdsTablePageData","nav","mdTableHeader","h","groups","items","Reserved","MajorVersion","MinorVersion","HeapSizes","Reserved2","Valid","Sorted","Rows","generateMDTableHeader","generateMetadataHeadersPageData","cliHeader","getCliHeader","cb","MajorRuntimeVersion","MinorRuntimeVersion","MetaData","VirtualAddress","Size","Flags","EntryPointToken","Resources","StrongNameSignature","CodeManagerTable","VTableFixups","ExportAddressTableJumps","ManagedNativeHeader","generateCliHeader","metadataRoot","getMetadataRoot","Signature","VersionLength","VersionString","VersionPadding","Streams","generateMetadataRoot","streamHeaders","getMetadataStreamHeaders","Name","Offset","Padding","generateMetadataStreamHeader","snSignature","getStrongNameSignature","generateSNSignature","F","generateHeadersPageData","dosHeader","getDosHeader","e_magic","e_cblp","e_cp","e_crlc","e_cparhdr","e_minalloc","e_maxalloc","e_ss","e_sp","e_csum","e_ip","e_cs","e_lfarlc","e_ovno","e_res","e_oemid","e_oeminfo","e_res2","e_lfanew","generateDosHeader","peSignature","getPESignature","generatePESignature","fileHeader","getFileHeader","Machine","NumberOfSections","TimeDateStamp","PointerToSymbolTable","NumberOfSymbols","SizeOfOptionalHeader","Characteristics","generateFileHeader","optionalHeader","getOptionalHeader","Magic","MajorLinkerVersion","MinorLinkerVersion","SizeOfCode","SizeOfInitializedData","SizeOfUninitializedData","AddressOfEntryPoint","BaseOfCode","BaseOfData","ImageBase","SectionAlignment","FileAlignment","MajorOperatingSystemVersion","MinorOperatingSystemVersion","MajorImageVersion","MinorImageVersion","MajorSubsystemVersion","MinorSubsystemVersion","Win32VersionValue","SizeOfImage","SizeOfHeaders","CheckSum","Subsystem","DllCharacteristics","SizeOfStackReserve","SizeOfStackCommit","SizeOfHeapReserve","SizeOfHeapCommit","LoaderFlags","NumberOfRvaAndSizes","fillOptionalHeader32Fields","fillOptionalHeader64Fields","generateOptionalHeader","dataDirectories","getDataDirectories","generateDataDirectories","sectionHeaders","getSectionHeaders","VirtualSize","SizeOfRawData","PointerToRawData","PointerToRelocations","PointerToLinenumbers","NumberOfRelocations","NumberOfLinenumbers","generateSectionHeaders","headers_1","metadata_headers_1","mds_table_1","generatePageData","PEError","_super","type","_this","this","__extends","Error","calculatePadding","dataSize","align","count1","mask","U","loadU1Field","getData","getU1","loadU2Field","getU2","loadU4Field","getU4","loadU8Field","loadU2EnumField","loadU4EnumField","loadFixedSizeByteArrayField","loadFixedSizeAsciiStringField","String","fromCharCode","apply","filter","loadNullTerminatedStringField","ptr","slice","Uint8Array","loadStructArrayByCount","loader","count","loadImageDataDirectory","loadU1EnumField","loadImageDosHeader","loadImageFileHeader","loadImageOptionalHeader32","loadImageOptionalHeader64","loadImageSectionHeader","loadCliHeader","loadMetadataRoot","loadMetadataStreamHeader","loadMetadataTableHeader","L","E","PEImage","buf","DataView","loadHeaders","load","check","getUint8","getUint16","getUint32","buffer","is32Bit","optHdr","dd","isDataDirectoryValid","IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","hasManagedResources","rvaToOffset","metadataStreamHeaders","mdRoot","getMetadataStreamHeader","headers","shift","strongNameSignature","metadataTableHeader","sh","rva","getSectionHeaderByRva","offsetToRva","getSectionHeaderByOffset","byteLength","createResNavDataMessage","createResPageDataMessage","pageData","createResPEPropsMessage","createResPEErrorMessage","error","M","image_1","generator_1","nav_data_1","onmessage","ev","msg","reader","FileReader","onload","result","pageDataMsg","postMessage","pePropsMsg","navMsg","ex","msg_1","message","JSON","stringify","onerror","readAsArrayBuffer","file","handleReqOpenFile","res","handleReqOpenNav"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","import * as S from \"../pe/structures\";\r\n\r\nexport function formatU1RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 2);\r\n}\r\n\r\nexport function formatU2RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 4);\r\n}\r\n\r\nexport function formatU4RawHex(d: number): string {\r\n    return padZeroLeft(d.toString(16).toUpperCase(), 8);\r\n}\r\n\r\nexport function formatU1Hex(d: number): string {\r\n    return `${formatU1RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU2Hex(d: number): string {\r\n    return `${formatU2RawHex(d)}h`;\r\n}\r\n\r\nexport function formatU4Hex(d: number): string {\r\n    return `${formatU4RawHex(d)}h`;\r\n}\r\n\r\nexport function formatHexDec(d: number): string {\r\n    return `${d.toString(16).toUpperCase()}h (${d})`;\r\n}\r\n\r\nexport function formatBytes(bytes: Uint8Array, lineWidth: number = 16): string[] {\r\n    let lines: string[] = [];\r\n    for (let start = 0; start < bytes.length; start += lineWidth) {\r\n        const line = Array.from(bytes.subarray(start, start + lineWidth))\r\n            .map(b => formatU1RawHex(b)).join(\"-\");\r\n        lines.push(line);\r\n    }\r\n    return lines;\r\n}\r\n\r\nexport function formatStructTitle(s: S.FileData, title: string): string {\r\n    return `${title} [${formatU4Hex(s._offset)} - ${formatU4Hex(s._offset + s._size)} : ${formatHexDec(s._size)}]`;\r\n}\r\n\r\nexport function formatU1Field(name: string, f: S.U1Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 1, showDec);\r\n}\r\n\r\nexport function formatU2Field(name: string, f: S.U2Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 2, showDec);\r\n}\r\n\r\nexport function formatU4Field(name: string, f: S.U4Field, showDec?: boolean): W.StructItem {\r\n    return formatUIntField(name, f, 4, showDec);\r\n}\r\n\r\nexport function formatU8Field(name: string, f: S.U8Field, showDec?: boolean): W.StructItem {\r\n    let value = `${formatU4RawHex(f.high)} ${formatU4Hex(f.low)}`;\r\n\r\n    if (showDec && f.high < 0x1FFFFF) {\r\n        const long = f.high * 0x100000000 + f.low;\r\n        value += ` (${formatDec(long)})`;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value,\r\n    };\r\n}\r\n\r\nexport function formatBytesField(name: string, f: S.Field): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: \"\",\r\n    }\r\n}\r\n\r\nexport function formatStringField(name: string, f: S.StringField): W.StructItem {\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: `\"${f.value}\"`,\r\n    }\r\n}\r\n\r\nfunction padZeroLeft(str: string, len: number): string {\r\n    if (str.length < len) {\r\n        return \"0\".repeat(len - str.length) + str;\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n\r\nfunction formatUIntField(name: string, f: S.UIntField, sz: number, showDec?: boolean): W.StructItem {\r\n    let hex: string;\r\n    switch (sz) {\r\n        case 1: hex = formatU1Hex(f.value); break;\r\n        case 2: hex = formatU2Hex(f.value); break;\r\n        case 4: hex = formatU4Hex(f.value); break;\r\n        default: hex = f.value.toString(16).toUpperCase(); break;\r\n    }\r\n\r\n    return {\r\n        offset: formatU4Hex(f._offset),\r\n        size: formatHexDec(f._size),\r\n        rawData: formatBytes(f.data),\r\n        name,\r\n        value: showDec ? `${hex} (${formatDec(f.value)})` : hex,\r\n    }\r\n}\r\n\r\nfunction formatDec(v: number): string {\r\n    return v.toLocaleString();\r\n}\r\n","export const IMAGE_DOS_SIGNATURE = 0x5A4D;  // MZ\r\n\r\nexport const IMAGE_NT_SIGNATURE = 0x00004550;  // PE00\r\n\r\nexport const IMAGE_NT_OPTIONAL_HDR32_MAGIC = 0x10b;\r\nexport const IMAGE_NT_OPTIONAL_HDR64_MAGIC = 0x20b;\r\n\r\nexport enum ImageFile {\r\n    IMAGE_FILE_RELOCS_STRIPPED = 0x0001,\r\n    IMAGE_FILE_EXECUTABLE_IMAGE = 0x0002,\r\n    IMAGE_FILE_LINE_NUMS_STRIPPED = 0x0004,\r\n    IMAGE_FILE_LOCAL_SYMS_STRIPPED = 0x0008,\r\n    IMAGE_FILE_AGGRESIVE_WS_TRIM = 0x0010,\r\n    IMAGE_FILE_LARGE_ADDRESS_AWARE = 0x0020,\r\n    IMAGE_FILE_BYTES_REVERSED_LO = 0x0080,\r\n    IMAGE_FILE_32BIT_MACHINE = 0x0100,\r\n    IMAGE_FILE_DEBUG_STRIPPED = 0x0200,\r\n    IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = 0x0400,\r\n    IMAGE_FILE_NET_RUN_FROM_SWAP = 0x0800,\r\n    IMAGE_FILE_SYSTEM = 0x1000,\r\n    IMAGE_FILE_DLL = 0x2000,\r\n    IMAGE_FILE_UP_SYSTEM_ONLY = 0x4000,\r\n    IMAGE_FILE_BYTES_REVERSED_HI = 0x8000,\r\n}\r\n\r\nexport enum ImageFileMachine {\r\n    IMAGE_FILE_MACHINE_UNKNOWN = 0,\r\n    IMAGE_FILE_MACHINE_TARGET_HOST = 0x0001,\r\n    IMAGE_FILE_MACHINE_I386 = 0x014c,\r\n    IMAGE_FILE_MACHINE_R3000 = 0x0162,\r\n    IMAGE_FILE_MACHINE_R4000 = 0x0166,\r\n    IMAGE_FILE_MACHINE_R10000 = 0x0168,\r\n    IMAGE_FILE_MACHINE_WCEMIPSV2 = 0x0169,\r\n    IMAGE_FILE_MACHINE_ALPHA = 0x0184,\r\n    IMAGE_FILE_MACHINE_SH3 = 0x01a2,\r\n    IMAGE_FILE_MACHINE_SH3DSP = 0x01a3,\r\n    IMAGE_FILE_MACHINE_SH3E = 0x01a4,\r\n    IMAGE_FILE_MACHINE_SH4 = 0x01a6,\r\n    IMAGE_FILE_MACHINE_SH5 = 0x01a8,\r\n    IMAGE_FILE_MACHINE_ARM = 0x01c0,\r\n    IMAGE_FILE_MACHINE_THUMB = 0x01c2,\r\n    IMAGE_FILE_MACHINE_ARMNT = 0x01c4,\r\n    IMAGE_FILE_MACHINE_AM33 = 0x01d3,\r\n    IMAGE_FILE_MACHINE_POWERPC = 0x01F0,\r\n    IMAGE_FILE_MACHINE_POWERPCFP = 0x01f1,\r\n    IMAGE_FILE_MACHINE_IA64 = 0x0200,\r\n    IMAGE_FILE_MACHINE_MIPS16 = 0x0266,\r\n    IMAGE_FILE_MACHINE_ALPHA64 = 0x0284,\r\n    IMAGE_FILE_MACHINE_MIPSFPU = 0x0366,\r\n    IMAGE_FILE_MACHINE_MIPSFPU16 = 0x0466,\r\n    IMAGE_FILE_MACHINE_AXP64 = IMAGE_FILE_MACHINE_ALPHA64,\r\n    IMAGE_FILE_MACHINE_TRICORE = 0x0520,\r\n    IMAGE_FILE_MACHINE_CEF = 0x0CEF,\r\n    IMAGE_FILE_MACHINE_EBC = 0x0EBC,\r\n    IMAGE_FILE_MACHINE_AMD64 = 0x8664,\r\n    IMAGE_FILE_MACHINE_M32R = 0x9041,\r\n    IMAGE_FILE_MACHINE_ARM64 = 0xAA64,\r\n    IMAGE_FILE_MACHINE_CEE = 0xC0EE,\r\n}\r\n\r\nexport enum ImageSubsystem {\r\n    IMAGE_SUBSYSTEM_UNKNOWN = 0,\r\n    IMAGE_SUBSYSTEM_NATIVE = 1,\r\n    IMAGE_SUBSYSTEM_WINDOWS_GUI = 2,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CUI = 3,\r\n    IMAGE_SUBSYSTEM_OS2_CUI = 5,\r\n    IMAGE_SUBSYSTEM_POSIX_CUI = 7,\r\n    IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8,\r\n    IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9,\r\n    IMAGE_SUBSYSTEM_EFI_APPLICATION = 10,\r\n    IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11,\r\n    IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12,\r\n    IMAGE_SUBSYSTEM_EFI_ROM = 13,\r\n    IMAGE_SUBSYSTEM_XBOX = 14,\r\n    IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16,\r\n    IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 17,\r\n}\r\n\r\nexport enum ImageDllCharacteristics {\r\n    IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = 0x0020,\r\n    IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = 0x0040,\r\n    IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = 0x0080,\r\n    IMAGE_DLLCHARACTERISTICS_NX_COMPAT = 0x0100,\r\n    IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = 0x0200,\r\n    IMAGE_DLLCHARACTERISTICS_NO_SEH = 0x0400,\r\n    IMAGE_DLLCHARACTERISTICS_NO_BIND = 0x0800,\r\n    IMAGE_DLLCHARACTERISTICS_APPCONTAINER = 0x1000,\r\n    IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = 0x2000,\r\n    IMAGE_DLLCHARACTERISTICS_GUARD_CF = 0x4000,\r\n    IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = 0x8000,\r\n}\r\n\r\nexport enum ImageDirectoryEntry {\r\n    IMAGE_DIRECTORY_ENTRY_EXPORT = 0,\r\n    IMAGE_DIRECTORY_ENTRY_IMPORT = 1,\r\n    IMAGE_DIRECTORY_ENTRY_RESOURCE = 2,\r\n    IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3,\r\n    IMAGE_DIRECTORY_ENTRY_SECURITY = 4,\r\n    IMAGE_DIRECTORY_ENTRY_BASERELOC = 5,\r\n    IMAGE_DIRECTORY_ENTRY_DEBUG = 6,\r\n    IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7,\r\n    IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8,\r\n    IMAGE_DIRECTORY_ENTRY_TLS = 9,\r\n    IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10,\r\n    IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11,\r\n    IMAGE_DIRECTORY_ENTRY_IAT = 12,\r\n    IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13,\r\n    IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14,\r\n}\r\n\r\nexport const IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16;\r\n\r\nexport enum ImageSection {\r\n    IMAGE_SCN_TYPE_NO_PAD = 0x00000008,\r\n\r\n    IMAGE_SCN_CNT_CODE = 0x00000020,\r\n    IMAGE_SCN_CNT_INITIALIZED_DATA = 0x00000040,\r\n    IMAGE_SCN_CNT_UNINITIALIZED_DATA = 0x00000080,\r\n\r\n    IMAGE_SCN_LNK_OTHER = 0x00000100,\r\n    IMAGE_SCN_LNK_INFO = 0x00000200,\r\n    IMAGE_SCN_LNK_REMOVE = 0x00000800,\r\n    IMAGE_SCN_LNK_COMDAT = 0x00001000,\r\n\r\n    IMAGE_SCN_NO_DEFER_SPEC_EXC = 0x00004000,\r\n    IMAGE_SCN_GPREL = 0x00008000,\r\n\r\n    IMAGE_SCN_MEM_PURGEABLE = 0x00020000,\r\n    IMAGE_SCN_MEM_16BIT = 0x00020000,\r\n    IMAGE_SCN_MEM_LOCKED = 0x00040000,\r\n    IMAGE_SCN_MEM_PRELOAD = 0x00080000,\r\n\r\n    IMAGE_SCN_ALIGN_1BYTES = 0x00100000,\r\n    IMAGE_SCN_ALIGN_2BYTES = 0x00200000,\r\n    IMAGE_SCN_ALIGN_4BYTES = 0x00300000,\r\n    IMAGE_SCN_ALIGN_8BYTES = 0x00400000,\r\n    IMAGE_SCN_ALIGN_16BYTES = 0x00500000,\r\n    IMAGE_SCN_ALIGN_32BYTES = 0x00600000,\r\n    IMAGE_SCN_ALIGN_64BYTES = 0x00700000,\r\n    IMAGE_SCN_ALIGN_128BYTES = 0x00800000,\r\n    IMAGE_SCN_ALIGN_256BYTES = 0x00900000,\r\n    IMAGE_SCN_ALIGN_512BYTES = 0x00A00000,\r\n    IMAGE_SCN_ALIGN_1024BYTES = 0x00B00000,\r\n    IMAGE_SCN_ALIGN_2048BYTES = 0x00C00000,\r\n    IMAGE_SCN_ALIGN_4096BYTES = 0x00D00000,\r\n    IMAGE_SCN_ALIGN_8192BYTES = 0x00E00000,\r\n\r\n    IMAGE_SCN_LNK_NRELOC_OVFL = 0x01000000,\r\n    IMAGE_SCN_MEM_DISCARDABLE = 0x02000000,\r\n    IMAGE_SCN_MEM_NOT_CACHED = 0x04000000,\r\n    IMAGE_SCN_MEM_NOT_PAGED = 0x08000000,\r\n    IMAGE_SCN_MEM_SHARED = 0x10000000,\r\n    IMAGE_SCN_MEM_EXECUTE = 0x20000000,\r\n    IMAGE_SCN_MEM_READ = 0x40000000,\r\n    IMAGE_SCN_MEM_WRITE = 0x80000000,\r\n\r\n    IMAGE_SCN_SCALE_INDEX = 0x00000001,\r\n}\r\n\r\n//\r\n// Metadata structures.\r\n//\r\n\r\nexport enum ComImageFlags {\r\n    COMIMAGE_FLAGS_ILONLY = 0x00000001,\r\n    COMIMAGE_FLAGS_32BITREQUIRED = 0x00000002,\r\n    COMIMAGE_FLAGS_IL_LIBRARY = 0x00000004,\r\n    COMIMAGE_FLAGS_STRONGNAMESIGNED = 0x00000008,\r\n    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 0x00000010,\r\n    COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x00010000,\r\n    COMIMAGE_FLAGS_32BITPREFERRED = 0x00020000,\r\n}\r\n\r\nexport const MetadataSignature = 0x424A5342;\r\n\r\nexport const enum MetadataStreamName {\r\n    Table = \"#~\",\r\n    Strings = \"#Strings\",\r\n    US = \"#US\",\r\n    GUID = \"#GUID\",\r\n    Blob = \"#Blob\",\r\n}\r\n\r\nexport const enum MetadataTableHeapSize {\r\n    String = 0,\r\n    GUID = 1,\r\n    Blob = 2,\r\n}","import { PEImage } from \"../pe/image\";\r\n\r\nexport function generateNavList(pe: PEImage): W.NavData[] {\r\n    let navList: W.NavData[] = [generateHeadersNavData(pe)];\r\n\r\n    const navMD = generateMDHeadersNavData(pe);\r\n    if (navMD) navList.push(navMD);\r\n\r\n    const navMDT = generateMDTablesNavData(pe);\r\n    if (navMDT) navList.push(navMDT);\r\n\r\n    return navList;\r\n}\r\n\r\nfunction generateHeadersNavData(pe: PEImage): W.NavData {\r\n    const pageID = W.PageID.HEADERS;\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.HEADERS },\r\n        children: [{\r\n            target: { pageID, title: W.KnownTitle.DOS_HEADER, elemID: W.KnownElemID.DOS_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.PE_SIGNATURE, elemID: W.KnownElemID.PE_SIGNATURE }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.FILE_HEADER, elemID: W.KnownElemID.FILE_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.OPTIONAL_HEADER, elemID: W.KnownElemID.OPTIONAL_HEADER }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.DATA_DIRECTORIES, elemID: W.KnownElemID.DATA_DIRECTORIES }\r\n        }, {\r\n            target: { pageID, title: W.KnownTitle.SECTION_HEADERS, elemID: W.KnownElemID.SECTION_HEADERS }\r\n        }]\r\n    };\r\n}\r\n\r\nfunction generateMDHeadersNavData(pe: PEImage): W.NavData | undefined {\r\n    const pageID = W.PageID.MD_HEADERS;\r\n\r\n    if (!pe.isManaged()) return undefined;\r\n\r\n    let children: W.NavData[] = [{\r\n        target: { pageID, title: W.KnownTitle.CLI_HEADER, elemID: W.KnownElemID.CLI_HEADER }\r\n    }];\r\n\r\n    if (pe.hasMetadata()) {\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.MD_ROOT, elemID: W.KnownElemID.MD_ROOT }\r\n        });\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.MDS_HEADERS, elemID: W.KnownElemID.MDS_HEADERS }\r\n        });\r\n    }\r\n\r\n    if (pe.hasStrongNameSignature()) {\r\n        children.push({\r\n            target: { pageID, title: W.KnownTitle.SN_SIG, elemID: W.KnownElemID.SN_SIG }\r\n        });\r\n    }\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.MD_HEADERS },\r\n        children\r\n    };\r\n}\r\n\r\nfunction generateMDTablesNavData(pe: PEImage): W.NavData | undefined {\r\n    const pageID = W.PageID.MDS_TABLE;\r\n    const h = pe.getMetadataTableHeader();\r\n    if (!h) return undefined;\r\n\r\n    return {\r\n        target: { pageID, title: W.KnownTitle.MDS_TABLE },\r\n    };\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateMdsTablePageData(pe: PEImage): W.MdsTablePageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MDS_TABLE,\r\n            title: W.KnownTitle.MDS_TABLE,\r\n        },\r\n        mdTableHeader: generateMDTableHeader(pe),\r\n    };\r\n}\r\n\r\nfunction generateMDTableHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.MDT_HEADER,\r\n        elemID: W.KnownElemID.MDT_HEADER,\r\n    };\r\n\r\n    const h = pe.getMetadataTableHeader();\r\n    if (!h) return s;\r\n\r\n    s.groups = [{\r\n        title: \"\",\r\n        items: [\r\n            FM.formatU4Field(\"Reserved\", h.Reserved),\r\n            FM.formatU1Field(\"MajorVersion\", h.MajorVersion, true),\r\n            FM.formatU1Field(\"MinorVersion\", h.MinorVersion, true),\r\n            FM.formatU1Field(\"HeapSizes\", h.HeapSizes),\r\n            FM.formatU1Field(\"Reserved2\", h.Reserved2),\r\n            FM.formatU8Field(\"Valid\", h.Valid),\r\n            FM.formatU8Field(\"Sorted\", h.Sorted),\r\n        ]\r\n    }, {\r\n        title: \"Rows\",\r\n        items: h.Rows.items.map((v, i) => FM.formatU4Field(`Rows[${i}]`, v, true))\r\n    }];\r\n\r\n    return s;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateMetadataHeadersPageData(pe: PEImage): W.MetadataHeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.MD_HEADERS,\r\n            title: W.KnownTitle.MD_HEADERS,\r\n        },\r\n        cliHeader: generateCliHeader(pe),\r\n        metadataRoot: generateMetadataRoot(pe),\r\n        streamHeaders: generateMetadataStreamHeader(pe),\r\n        snSignature: generateSNSignature(pe),\r\n    };\r\n}\r\n\r\nfunction generateCliHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.CLI_HEADER,\r\n        elemID: W.KnownElemID.CLI_HEADER,\r\n    };\r\n\r\n    const h = pe.getCliHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"cb\", h.cb, true),\r\n        FM.formatU2Field(\"MajorRuntimeVersion\", h.MajorRuntimeVersion, true),\r\n        FM.formatU2Field(\"MinorRuntimeVersion\", h.MinorRuntimeVersion, true),\r\n        FM.formatU4Field(\"MetaData.VirtualAddress\", h.MetaData.VirtualAddress),\r\n        FM.formatU4Field(\"MetaData.Size\", h.MetaData.Size, true),\r\n        FM.formatU4Field(\"Flags\", h.Flags),\r\n        FM.formatU4Field(\"EntryPointToken\", h.EntryPointToken),\r\n        FM.formatU4Field(\"Resources.VirtualAddress\", h.Resources.VirtualAddress),\r\n        FM.formatU4Field(\"Resources.Size\", h.Resources.Size, true),\r\n        FM.formatU4Field(\"StrongNameSignature.VirtualAddress\", h.StrongNameSignature.VirtualAddress),\r\n        FM.formatU4Field(\"StrongNameSignature.Size\", h.StrongNameSignature.Size, true),\r\n        FM.formatU4Field(\"CodeManagerTable.VirtualAddress\", h.CodeManagerTable.VirtualAddress),\r\n        FM.formatU4Field(\"CodeManagerTable.Size\", h.CodeManagerTable.Size, true),\r\n        FM.formatU4Field(\"VTableFixups.VirtualAddress\", h.VTableFixups.VirtualAddress),\r\n        FM.formatU4Field(\"VTableFixups.Size\", h.VTableFixups.Size, true),\r\n        FM.formatU4Field(\"ExportAddressTableJumps.VirtualAddress\", h.ExportAddressTableJumps.VirtualAddress),\r\n        FM.formatU4Field(\"ExportAddressTableJumps.Size\", h.ExportAddressTableJumps.Size, true),\r\n        FM.formatU4Field(\"ManagedNativeHeader.VirtualAddress\", h.ManagedNativeHeader.VirtualAddress),\r\n        FM.formatU4Field(\"ManagedNativeHeader.Size\", h.ManagedNativeHeader.Size, true),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSNSignature(pe: PEImage): W.SimpleStruct | undefined {\r\n    const d = pe.getStrongNameSignature();\r\n    if (!d) return undefined;\r\n\r\n    const s: W.SimpleStruct = {\r\n        title: W.KnownTitle.SN_SIG,\r\n        elemID: W.KnownElemID.SN_SIG,\r\n        items: [FM.formatBytesField(\"Signature\", d)]\r\n    };\r\n    return s;\r\n}\r\n\r\nfunction generateMetadataRoot(pe: PEImage): W.SimpleStruct | undefined {\r\n    const h = pe.getMetadataRoot();\r\n    if (!h) return undefined;\r\n\r\n    const s: W.SimpleStruct = {\r\n        title: W.KnownTitle.MD_ROOT,\r\n        elemID: W.KnownElemID.MD_ROOT,\r\n        items: [\r\n            FM.formatU4Field(\"Signature\", h.Signature),\r\n            FM.formatU2Field(\"MajorVersion\", h.MajorVersion, true),\r\n            FM.formatU2Field(\"MinorVersion\", h.MinorVersion, true),\r\n            FM.formatU4Field(\"Reserved\", h.Reserved),\r\n            FM.formatU4Field(\"VersionLength\", h.VersionLength, true),\r\n            FM.formatStringField(\"VersionString\", h.VersionString),\r\n            FM.formatBytesField(\"VersionPadding\", h.VersionPadding),\r\n            FM.formatU2Field(\"Flags\", h.Flags),\r\n            FM.formatU2Field(\"Streams\", h.Streams, true),\r\n        ]\r\n    };\r\n    return s;\r\n}\r\n\r\nfunction generateMetadataStreamHeader(pe: PEImage): W.GroupedStruct | undefined {\r\n    const h = pe.getMetadataStreamHeaders();\r\n    if (!h) return undefined;\r\n\r\n    const s: W.GroupedStruct = {\r\n        title: W.KnownTitle.MDS_HEADERS,\r\n        elemID: W.KnownElemID.MDS_HEADERS,\r\n        groups: h.items.map((v, i) => ({\r\n            title: `[${i}] (${v.Name.value})`,\r\n            items: [\r\n                FM.formatU4Field(\"Offset\", v.Offset),\r\n                FM.formatU4Field(\"Size\", v.Size, true),\r\n                FM.formatStringField(\"Name\", v.Name),\r\n                FM.formatBytesField(\"Padding\", v.Padding),\r\n            ]\r\n        }))\r\n    };\r\n    return s;\r\n}","import { PEImage } from \"../pe/image\";\r\nimport * as S from \"../pe/structures\";\r\nimport * as F from \"../pe/image-flags\";\r\nimport * as FM from \"./formatter\";\r\n\r\nexport function generateHeadersPageData(pe: PEImage): W.HeadersPageData {\r\n    return {\r\n        nav: {\r\n            pageID: W.PageID.HEADERS,\r\n            title: W.KnownTitle.HEADERS,\r\n        },\r\n        dosHeader: generateDosHeader(pe),\r\n        peSignature: generatePESignature(pe),\r\n        fileHeader: generateFileHeader(pe),\r\n        optionalHeader: generateOptionalHeader(pe),\r\n        dataDirectories: generateDataDirectories(pe),\r\n        sectionHeaders: generateSectionHeaders(pe),\r\n    };\r\n}\r\n\r\nfunction generateDosHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.DOS_HEADER,\r\n        elemID: W.KnownElemID.DOS_HEADER,\r\n    };\r\n\r\n    const h = pe.getDosHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"e_magic\", h.e_magic),\r\n        FM.formatU2Field(\"e_cblp\", h.e_cblp),\r\n        FM.formatU2Field(\"e_cp\", h.e_cp),\r\n        FM.formatU2Field(\"e_crlc\", h.e_crlc),\r\n        FM.formatU2Field(\"e_cparhdr\", h.e_cparhdr),\r\n        FM.formatU2Field(\"e_minalloc\", h.e_minalloc),\r\n        FM.formatU2Field(\"e_maxalloc\", h.e_maxalloc),\r\n        FM.formatU2Field(\"e_ss\", h.e_ss),\r\n        FM.formatU2Field(\"e_sp\", h.e_sp),\r\n        FM.formatU2Field(\"e_csum\", h.e_csum),\r\n        FM.formatU2Field(\"e_ip\", h.e_ip),\r\n        FM.formatU2Field(\"e_cs\", h.e_cs),\r\n        FM.formatU2Field(\"e_lfarlc\", h.e_lfarlc),\r\n        FM.formatU2Field(\"e_ovno\", h.e_ovno),\r\n        FM.formatBytesField(\"e_res\", h.e_res),\r\n        FM.formatU2Field(\"e_oemid\", h.e_oemid),\r\n        FM.formatU2Field(\"e_oeminfo\", h.e_oeminfo),\r\n        FM.formatBytesField(\"e_res2\", h.e_res2),\r\n        FM.formatU4Field(\"e_lfanew\", h.e_lfanew),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generatePESignature(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.PE_SIGNATURE,\r\n        elemID: W.KnownElemID.PE_SIGNATURE,\r\n    };\r\n\r\n    const h = pe.getPESignature();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU4Field(\"PE Signature\", h),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateFileHeader(pe: PEImage): W.SimpleStruct {\r\n    let s: W.SimpleStruct = {\r\n        title: W.KnownTitle.FILE_HEADER,\r\n        elemID: W.KnownElemID.FILE_HEADER,\r\n    };\r\n\r\n    const h = pe.getFileHeader();\r\n    if (!h) return s;\r\n\r\n    s.items = [\r\n        FM.formatU2Field(\"Machine\", h.Machine),\r\n        FM.formatU2Field(\"NumberOfSections\", h.NumberOfSections, true),\r\n        FM.formatU4Field(\"TimeDateStamp\", h.TimeDateStamp),\r\n        FM.formatU4Field(\"PointerToSymbolTable\", h.PointerToSymbolTable),\r\n        FM.formatU4Field(\"NumberOfSymbols\", h.NumberOfSymbols, true),\r\n        FM.formatU2Field(\"SizeOfOptionalHeader\", h.SizeOfOptionalHeader, true),\r\n        FM.formatU2Field(\"Characteristics\", h.Characteristics),\r\n    ];\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateOptionalHeader(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.OPTIONAL_HEADER,\r\n        elemID: W.KnownElemID.OPTIONAL_HEADER,\r\n    };\r\n\r\n    const h = pe.getOptionalHeader();\r\n    if (!h) return s;\r\n\r\n    switch (h.Magic.value) {\r\n        case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n            s.title += \" (32-bit)\";\r\n            fillOptionalHeader32Fields(s, <S.ImageOptionalHeader32>h);\r\n            break;\r\n\r\n        case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n            s.title += \" (64-bit)\";\r\n            fillOptionalHeader64Fields(s, <S.ImageOptionalHeader64>h);\r\n            break;\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nfunction fillOptionalHeader32Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader32): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n            FM.formatU4Field(\"BaseOfData\", h.BaseOfData),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU4Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU4Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU4Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU4Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU4Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction fillOptionalHeader64Fields(s: W.GroupedStruct, h: S.ImageOptionalHeader64): void {\r\n    s.groups = [{\r\n        title: \"Standard Fields\",\r\n        items: [\r\n            FM.formatU2Field(\"Magic\", h.Magic),\r\n            FM.formatU1Field(\"MajorLinkerVersion\", h.MajorLinkerVersion, true),\r\n            FM.formatU1Field(\"MinorLinkerVersion\", h.MinorLinkerVersion, true),\r\n            FM.formatU4Field(\"SizeOfCode\", h.SizeOfCode, true),\r\n            FM.formatU4Field(\"SizeOfInitializedData\", h.SizeOfInitializedData, true),\r\n            FM.formatU4Field(\"SizeOfUninitializedData\", h.SizeOfUninitializedData, true),\r\n            FM.formatU4Field(\"AddressOfEntryPoint\", h.AddressOfEntryPoint),\r\n            FM.formatU4Field(\"BaseOfCode\", h.BaseOfCode),\r\n        ],\r\n    }, {\r\n        title: \"NT-specified Fields\",\r\n        items: [\r\n            FM.formatU8Field(\"ImageBase\", h.ImageBase),\r\n            FM.formatU4Field(\"SectionAlignment\", h.SectionAlignment, true),\r\n            FM.formatU4Field(\"FileAlignment\", h.FileAlignment, true),\r\n            FM.formatU2Field(\"MajorOperatingSystemVersion\", h.MajorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MinorOperatingSystemVersion\", h.MinorOperatingSystemVersion, true),\r\n            FM.formatU2Field(\"MajorImageVersion\", h.MajorImageVersion, true),\r\n            FM.formatU2Field(\"MinorImageVersion\", h.MinorImageVersion, true),\r\n            FM.formatU2Field(\"MajorSubsystemVersion\", h.MajorSubsystemVersion, true),\r\n            FM.formatU2Field(\"MinorSubsystemVersion\", h.MinorSubsystemVersion, true),\r\n            FM.formatU4Field(\"Win32VersionValue\", h.Win32VersionValue, true),\r\n            FM.formatU4Field(\"SizeOfImage\", h.SizeOfImage, true),\r\n            FM.formatU4Field(\"SizeOfHeaders\", h.SizeOfHeaders, true),\r\n            FM.formatU4Field(\"CheckSum\", h.CheckSum),\r\n            FM.formatU2Field(\"Subsystem\", h.Subsystem),\r\n            FM.formatU2Field(\"DllCharacteristics\", h.DllCharacteristics),\r\n            FM.formatU8Field(\"SizeOfStackReserve\", h.SizeOfStackReserve, true),\r\n            FM.formatU8Field(\"SizeOfStackCommit\", h.SizeOfStackCommit, true),\r\n            FM.formatU8Field(\"SizeOfHeapReserve\", h.SizeOfHeapReserve, true),\r\n            FM.formatU8Field(\"SizeOfHeapCommit\", h.SizeOfHeapCommit, true),\r\n            FM.formatU4Field(\"LoaderFlags\", h.LoaderFlags),\r\n            FM.formatU4Field(\"NumberOfRvaAndSizes\", h.NumberOfRvaAndSizes, true),\r\n        ],\r\n    }];\r\n}\r\n\r\nfunction generateDataDirectories(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.DATA_DIRECTORIES,\r\n        elemID: W.KnownElemID.DATA_DIRECTORIES,\r\n    };\r\n\r\n    const h = pe.getDataDirectories();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] ${F.ImageDirectoryEntry[i] || \"\"}`,\r\n        items: [\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"Size\", v.Size, true),\r\n        ]\r\n    } as W.SimpleStruct));\r\n\r\n    return s;\r\n}\r\n\r\nfunction generateSectionHeaders(pe: PEImage): W.GroupedStruct {\r\n    let s: W.GroupedStruct = {\r\n        title: W.KnownTitle.SECTION_HEADERS,\r\n        elemID: W.KnownElemID.SECTION_HEADERS,\r\n    };\r\n\r\n    const h = pe.getSectionHeaders();\r\n    if (!h) return s;\r\n\r\n    s.groups = h.items.map((v, i) => ({\r\n        title: `[${i}] (${v.Name.value})`,\r\n        items: [\r\n            FM.formatStringField(\"Name\", v.Name),\r\n            FM.formatU4Field(\"VirtualSize\", v.VirtualSize, true),\r\n            FM.formatU4Field(\"VirtualAddress\", v.VirtualAddress),\r\n            FM.formatU4Field(\"SizeOfRawData\", v.SizeOfRawData, true),\r\n            FM.formatU4Field(\"PointerToRawData\", v.PointerToRawData),\r\n            FM.formatU4Field(\"PointerToRelocations\", v.PointerToRelocations),\r\n            FM.formatU4Field(\"PointerToLinenumbers\", v.PointerToLinenumbers),\r\n            FM.formatU2Field(\"NumberOfRelocations\", v.NumberOfRelocations, true),\r\n            FM.formatU2Field(\"NumberOfLinenumbers\", v.NumberOfLinenumbers, true),\r\n            FM.formatU4Field(\"Characteristics\", v.Characteristics),\r\n        ]\r\n    }));\r\n\r\n    return s;\r\n}\r\n","import { PEImage } from \"../pe/image\";\r\nimport { generateHeadersPageData } from \"./headers\";\r\nimport { generateMetadataHeadersPageData } from \"./metadata-headers\";\r\nimport { generateMdsTablePageData } from \"./mds-table\";\r\n\r\nexport function generatePageData(pe: PEImage, pageID: W.PageID): W.PageData {\r\n    switch (pageID) {\r\n        case W.PageID.HEADERS: return generateHeadersPageData(pe);\r\n        case W.PageID.MD_HEADERS: return generateMetadataHeadersPageData(pe);\r\n        case W.PageID.MDS_TABLE: return generateMdsTablePageData(pe);\r\n        default: return { nav: { pageID: W.PageID.NOTFOUND, title: W.KnownTitle.NOTFOUND } };\r\n    }\r\n}","export const enum PEErrorType {\r\n    INVALID_DATA_POSITION = \"INVALID_DATA_POSITION\",\r\n    INVALID_DOS_SIGNATURE = \"INVALID_DOS_SIGNATURE\",\r\n    INVALID_PE_SIGNATURE = \"INVALID_PE_SIGNATURE\",\r\n    INVALID_OPTIONAL_HEADER_MAGIC = \"INVALID_OPTIONAL_HEADER_MAGIC\",\r\n    INVALID_DATA_DIRECTORY_COUNT = \"INVALID_DATA_DIRECTORY_COUNT\",\r\n}\r\n\r\nexport class PEError extends Error {\r\n    constructor(\r\n        public type: PEErrorType,\r\n        public offset?: number,\r\n        public size?: number\r\n    ) {\r\n        super(type);\r\n    }\r\n}\r\n","export function calculatePadding(dataSize: number, align: number = 4): number {\n    const r = dataSize % align;\n    if (r == 0) {\n        return 0;\n    } else {\n        return align - r;\n    }\n}\n\nexport function count1(n: number) {\n\tlet c = 0;\n\tfor (let i = 0, mask = 1; i < 32; i++ , mask <<= 1) {\n\t\tif (n & mask)\n\t\t\tc++;\n\t}\n\treturn c;\n}","import * as S from \"./structures\";\r\nimport * as F from \"./image-flags\";\r\nimport * as U from \"./utils\";\r\n\r\nexport interface FileDataProvider {\r\n    getU1(p: number): number;\r\n    getU2(p: number): number;\r\n    getU4(p: number): number;\r\n    getData(p: number, sz: number): Uint8Array;\r\n}\r\n\r\n//\r\n// Basic structures.\r\n//\r\n\r\nexport function loadU1Field(d: FileDataProvider, p: number): S.U1Field {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p)\r\n    };\r\n}\r\n\r\nexport function loadU2Field(d: FileDataProvider, p: number): S.U2Field {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p)\r\n    };\r\n}\r\n\r\nexport function loadU4Field(d: FileDataProvider, p: number): S.U4Field {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p)\r\n    };\r\n}\r\n\r\nexport function loadU8Field(d: FileDataProvider, p: number): S.U8Field {\r\n    const low = d.getU4(p);\r\n    const high = d.getU4(p + 4);\r\n\r\n    return {\r\n        _offset: p, _size: 8, data: d.getData(p, 8), low, high\r\n    };\r\n}\r\n\r\nexport function loadU1EnumField<T>(d: FileDataProvider, p: number): S.U1EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 1, data: d.getData(p, 1), value: d.getU1(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU2EnumField<T>(d: FileDataProvider, p: number): S.U2EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 2, data: d.getData(p, 2), value: d.getU2(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadU4EnumField<T>(d: FileDataProvider, p: number): S.U4EnumField<T> {\r\n    return {\r\n        _offset: p, _size: 4, data: d.getData(p, 4), value: d.getU4(p) as any as T\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeByteArrayField(d: FileDataProvider, p: number, sz: number): S.Field {\r\n    return {\r\n        _offset: p, _size: sz, data: d.getData(p, sz)\r\n    };\r\n}\r\n\r\nexport function loadFixedSizeAsciiStringField(d: FileDataProvider, p: number, sz: number): S.StringField {\r\n    const data = d.getData(p, sz);\r\n    const value = String.fromCharCode.apply(null, Array.from(data).filter(v => v != 0));\r\n\r\n    return {\r\n        _offset: p, _size: sz, data, value\r\n    };\r\n}\r\n\r\nexport function loadNullTerminatedStringField(d: FileDataProvider, p: number): S.StringField {\r\n    let bytes: number[] = [];\r\n    let ptr = p;\r\n    let b: number;\r\n\r\n    do {\r\n        b = d.getU1(ptr++);\r\n        bytes.push(b);\r\n    } while (b != 0);\r\n    const value = String.fromCharCode.apply(null, bytes.slice(0, bytes.length - 1));\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p, data: Uint8Array.from(bytes), value\r\n    };\r\n}\r\n\r\nexport function loadStructArrayByCount<T extends S.FileData>(\r\n    d: FileDataProvider,\r\n    p: number,\r\n    loader: (d: FileDataProvider, p: number) => T,\r\n    count: number): S.StructArray<T> {\r\n\r\n    let items: T[] = [];\r\n    let ptr = p;\r\n    for (let i = 0; i < count; i++) {\r\n        const s = loader(d, ptr);\r\n        items.push(s);\r\n        ptr += s._size;\r\n    }\r\n\r\n    return { _offset: p, _size: ptr - p, items };\r\n}\r\n\r\n//\r\n// Image headers.\r\n//\r\n\r\nexport function loadImageDosHeader(d: FileDataProvider, p: number): S.ImageDosHeader {\r\n    let ptr = p;\r\n\r\n    const e_magic = loadU2Field(d, ptr);\r\n    ptr += e_magic._size;\r\n\r\n    const e_cblp = loadU2Field(d, ptr);\r\n    ptr += e_cblp._size;\r\n\r\n    const e_cp = loadU2Field(d, ptr);\r\n    ptr += e_cp._size;\r\n\r\n    const e_crlc = loadU2Field(d, ptr);\r\n    ptr += e_crlc._size;\r\n\r\n    const e_cparhdr = loadU2Field(d, ptr);\r\n    ptr += e_cparhdr._size;\r\n\r\n    const e_minalloc = loadU2Field(d, ptr);\r\n    ptr += e_minalloc._size;\r\n\r\n    const e_maxalloc = loadU2Field(d, ptr);\r\n    ptr += e_maxalloc._size;\r\n\r\n    const e_ss = loadU2Field(d, ptr);\r\n    ptr += e_ss._size;\r\n\r\n    const e_sp = loadU2Field(d, ptr);\r\n    ptr += e_sp._size;\r\n\r\n    const e_csum = loadU2Field(d, ptr);\r\n    ptr += e_csum._size;\r\n\r\n    const e_ip = loadU2Field(d, ptr);\r\n    ptr += e_ip._size;\r\n\r\n    const e_cs = loadU2Field(d, ptr);\r\n    ptr += e_cs._size;\r\n\r\n    const e_lfarlc = loadU2Field(d, ptr);\r\n    ptr += e_lfarlc._size;\r\n\r\n    const e_ovno = loadU2Field(d, ptr);\r\n    ptr += e_ovno._size;\r\n\r\n    const e_res = loadFixedSizeByteArrayField(d, ptr, 4 * 2);\r\n    ptr += e_res._size;\r\n\r\n    const e_oemid = loadU2Field(d, ptr);\r\n    ptr += e_oemid._size;\r\n\r\n    const e_oeminfo = loadU2Field(d, ptr);\r\n    ptr += e_oeminfo._size;\r\n\r\n    const e_res2 = loadFixedSizeByteArrayField(d, ptr, 10 * 2);\r\n    ptr += e_res2._size;\r\n\r\n    const e_lfanew = loadU4Field(d, ptr);\r\n    ptr += e_lfanew._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        e_magic,\r\n        e_cblp,\r\n        e_cp,\r\n        e_crlc,\r\n        e_cparhdr,\r\n        e_minalloc,\r\n        e_maxalloc,\r\n        e_ss,\r\n        e_sp,\r\n        e_csum,\r\n        e_ip,\r\n        e_cs,\r\n        e_lfarlc,\r\n        e_ovno,\r\n        e_res,\r\n        e_oemid,\r\n        e_oeminfo,\r\n        e_res2,\r\n        e_lfanew,\r\n    };\r\n}\r\n\r\nexport function loadImageFileHeader(d: FileDataProvider, p: number): S.ImageFileHeader {\r\n    let ptr = p;\r\n\r\n    const Machine = loadU2Field(d, ptr);\r\n    ptr += Machine._size;\r\n\r\n    const NumberOfSections = loadU2Field(d, ptr);\r\n    ptr += NumberOfSections._size;\r\n\r\n    const TimeDateStamp = loadU4Field(d, ptr);\r\n    ptr += TimeDateStamp._size;\r\n\r\n    const PointerToSymbolTable = loadU4Field(d, ptr);\r\n    ptr += PointerToSymbolTable._size;\r\n\r\n    const NumberOfSymbols = loadU4Field(d, ptr);\r\n    ptr += NumberOfSymbols._size;\r\n\r\n    const SizeOfOptionalHeader = loadU2Field(d, ptr);\r\n    ptr += SizeOfOptionalHeader._size;\r\n\r\n    const Characteristics = loadU2EnumField<F.ImageFile>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Machine,\r\n        NumberOfSections,\r\n        TimeDateStamp,\r\n        PointerToSymbolTable,\r\n        NumberOfSymbols,\r\n        SizeOfOptionalHeader,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader32(d: FileDataProvider, p: number): S.ImageOptionalHeader32 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const BaseOfData = loadU4Field(d, ptr);\r\n    ptr += BaseOfData._size;\r\n\r\n    const ImageBase = loadU4Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        BaseOfData,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageOptionalHeader64(d: FileDataProvider, p: number): S.ImageOptionalHeader64 {\r\n    let ptr = p;\r\n\r\n    const Magic = loadU2Field(d, ptr);\r\n    ptr += Magic._size;\r\n\r\n    const MajorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MajorLinkerVersion._size;\r\n\r\n    const MinorLinkerVersion = loadU1Field(d, ptr);\r\n    ptr += MinorLinkerVersion._size;\r\n\r\n    const SizeOfCode = loadU4Field(d, ptr);\r\n    ptr += SizeOfCode._size;\r\n\r\n    const SizeOfInitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfInitializedData._size;\r\n\r\n    const SizeOfUninitializedData = loadU4Field(d, ptr);\r\n    ptr += SizeOfUninitializedData._size;\r\n\r\n    const AddressOfEntryPoint = loadU4Field(d, ptr);\r\n    ptr += AddressOfEntryPoint._size;\r\n\r\n    const BaseOfCode = loadU4Field(d, ptr);\r\n    ptr += BaseOfCode._size;\r\n\r\n    const ImageBase = loadU8Field(d, ptr);\r\n    ptr += ImageBase._size;\r\n\r\n    const SectionAlignment = loadU4Field(d, ptr);\r\n    ptr += SectionAlignment._size;\r\n\r\n    const FileAlignment = loadU4Field(d, ptr);\r\n    ptr += FileAlignment._size;\r\n\r\n    const MajorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorOperatingSystemVersion._size;\r\n\r\n    const MinorOperatingSystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorOperatingSystemVersion._size;\r\n\r\n    const MajorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MajorImageVersion._size;\r\n\r\n    const MinorImageVersion = loadU2Field(d, ptr);\r\n    ptr += MinorImageVersion._size;\r\n\r\n    const MajorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MajorSubsystemVersion._size;\r\n\r\n    const MinorSubsystemVersion = loadU2Field(d, ptr);\r\n    ptr += MinorSubsystemVersion._size;\r\n\r\n    const Win32VersionValue = loadU4Field(d, ptr);\r\n    ptr += Win32VersionValue._size;\r\n\r\n    const SizeOfImage = loadU4Field(d, ptr);\r\n    ptr += SizeOfImage._size;\r\n\r\n    const SizeOfHeaders = loadU4Field(d, ptr);\r\n    ptr += SizeOfHeaders._size;\r\n\r\n    const CheckSum = loadU4Field(d, ptr);\r\n    ptr += CheckSum._size;\r\n\r\n    const Subsystem = loadU2EnumField<F.ImageSubsystem>(d, ptr);\r\n    ptr += Subsystem._size;\r\n\r\n    const DllCharacteristics = loadU2EnumField<F.ImageDllCharacteristics>(d, ptr);\r\n    ptr += DllCharacteristics._size;\r\n\r\n    const SizeOfStackReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackReserve._size;\r\n\r\n    const SizeOfStackCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfStackCommit._size;\r\n\r\n    const SizeOfHeapReserve = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapReserve._size;\r\n\r\n    const SizeOfHeapCommit = loadU8Field(d, ptr);\r\n    ptr += SizeOfHeapCommit._size;\r\n\r\n    const LoaderFlags = loadU4Field(d, ptr);\r\n    ptr += LoaderFlags._size;\r\n\r\n    const NumberOfRvaAndSizes = loadU4Field(d, ptr);\r\n    ptr += NumberOfRvaAndSizes._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Magic,\r\n        MajorLinkerVersion,\r\n        MinorLinkerVersion,\r\n        SizeOfCode,\r\n        SizeOfInitializedData,\r\n        SizeOfUninitializedData,\r\n        AddressOfEntryPoint,\r\n        BaseOfCode,\r\n        ImageBase,\r\n        SectionAlignment,\r\n        FileAlignment,\r\n        MajorOperatingSystemVersion,\r\n        MinorOperatingSystemVersion,\r\n        MajorImageVersion,\r\n        MinorImageVersion,\r\n        MajorSubsystemVersion,\r\n        MinorSubsystemVersion,\r\n        Win32VersionValue,\r\n        SizeOfImage,\r\n        SizeOfHeaders,\r\n        CheckSum,\r\n        Subsystem,\r\n        DllCharacteristics,\r\n        SizeOfStackReserve,\r\n        SizeOfStackCommit,\r\n        SizeOfHeapReserve,\r\n        SizeOfHeapCommit,\r\n        LoaderFlags,\r\n        NumberOfRvaAndSizes,\r\n    };\r\n}\r\n\r\nexport function loadImageDataDirectory(d: FileDataProvider, p: number): S.ImageDataDirectory {\r\n    let ptr = p;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        VirtualAddress,\r\n        Size,\r\n    };\r\n}\r\n\r\nexport function loadImageSectionHeader(d: FileDataProvider, p: number): S.ImageSectionHeader {\r\n    let ptr = p;\r\n\r\n    const Name = loadFixedSizeAsciiStringField(d, ptr, 8);\r\n    ptr += Name._size;\r\n\r\n    const VirtualSize = loadU4Field(d, ptr);\r\n    ptr += VirtualSize._size;\r\n\r\n    const VirtualAddress = loadU4Field(d, ptr);\r\n    ptr += VirtualAddress._size;\r\n\r\n    const SizeOfRawData = loadU4Field(d, ptr);\r\n    ptr += SizeOfRawData._size;\r\n\r\n    const PointerToRawData = loadU4Field(d, ptr);\r\n    ptr += PointerToRawData._size;\r\n\r\n    const PointerToRelocations = loadU4Field(d, ptr);\r\n    ptr += PointerToRelocations._size;\r\n\r\n    const PointerToLinenumbers = loadU4Field(d, ptr);\r\n    ptr += PointerToLinenumbers._size;\r\n\r\n    const NumberOfRelocations = loadU2Field(d, ptr);\r\n    ptr += NumberOfRelocations._size;\r\n\r\n    const NumberOfLinenumbers = loadU2Field(d, ptr);\r\n    ptr += NumberOfLinenumbers._size;\r\n\r\n    const Characteristics = loadU4EnumField<F.ImageSection>(d, ptr);\r\n    ptr += Characteristics._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Name,\r\n        VirtualSize,\r\n        VirtualAddress,\r\n        SizeOfRawData,\r\n        PointerToRawData,\r\n        PointerToRelocations,\r\n        PointerToLinenumbers,\r\n        NumberOfRelocations,\r\n        NumberOfLinenumbers,\r\n        Characteristics,\r\n    };\r\n}\r\n\r\n//\r\n// Metadata structures.\r\n//\r\n\r\nexport function loadCliHeader(d: FileDataProvider, p: number): S.CliHeader {\r\n    let ptr = p;\r\n\r\n    const cb = loadU4Field(d, ptr);\r\n    ptr += cb._size;\r\n\r\n    const MajorRuntimeVersion = loadU2Field(d, ptr);\r\n    ptr += MajorRuntimeVersion._size;\r\n\r\n    const MinorRuntimeVersion = loadU2Field(d, ptr);\r\n    ptr += MinorRuntimeVersion._size;\r\n\r\n    const MetaData = loadImageDataDirectory(d, ptr);\r\n    ptr += MetaData._size;\r\n\r\n    const Flags = loadU4Field(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const EntryPointToken = loadU4Field(d, ptr);\r\n    ptr += EntryPointToken._size;\r\n\r\n    const Resources = loadImageDataDirectory(d, ptr);\r\n    ptr += Resources._size;\r\n\r\n    const StrongNameSignature = loadImageDataDirectory(d, ptr);\r\n    ptr += StrongNameSignature._size;\r\n\r\n    const CodeManagerTable = loadImageDataDirectory(d, ptr);\r\n    ptr += CodeManagerTable._size;\r\n\r\n    const VTableFixups = loadImageDataDirectory(d, ptr);\r\n    ptr += VTableFixups._size;\r\n\r\n    const ExportAddressTableJumps = loadImageDataDirectory(d, ptr);\r\n    ptr += ExportAddressTableJumps._size;\r\n\r\n    const ManagedNativeHeader = loadImageDataDirectory(d, ptr);\r\n    ptr += ManagedNativeHeader._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        cb,\r\n        MajorRuntimeVersion,\r\n        MinorRuntimeVersion,\r\n        MetaData,\r\n        Flags,\r\n        EntryPointToken,\r\n        Resources,\r\n        StrongNameSignature,\r\n        CodeManagerTable,\r\n        VTableFixups,\r\n        ExportAddressTableJumps,\r\n        ManagedNativeHeader,\r\n    };\r\n}\r\n\r\nexport function loadMetadataRoot(d: FileDataProvider, p: number): S.MetadataRoot {\r\n    let ptr = p;\r\n\r\n    const Signature = loadU4Field(d, ptr);\r\n    ptr += Signature._size;\r\n\r\n    const MajorVersion = loadU2Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU2Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const Reserved = loadU4Field(d, ptr);\r\n    ptr += Reserved._size;\r\n\r\n    const VersionLength = loadU4Field(d, ptr);\r\n    ptr += VersionLength._size;\r\n\r\n    const VersionString = loadNullTerminatedStringField(d, ptr);\r\n    ptr += VersionString._size;\r\n\r\n    const paddingSize = U.calculatePadding(VersionString._size);\r\n    const VersionPadding = loadFixedSizeByteArrayField(d, ptr, paddingSize);\r\n    ptr += VersionPadding._size;\r\n\r\n    const Flags = loadU2Field(d, ptr);\r\n    ptr += Flags._size;\r\n\r\n    const Streams = loadU2Field(d, ptr);\r\n    ptr += Streams._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Signature,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        Reserved,\r\n        VersionLength,\r\n        VersionString,\r\n        VersionPadding,\r\n        Flags,\r\n        Streams,\r\n    };\r\n}\r\n\r\nexport function loadMetadataStreamHeader(d: FileDataProvider, p: number): S.MetadataStreamHeader {\r\n    let ptr = p;\r\n\r\n    const Offset = loadU4Field(d, ptr);\r\n    ptr += Offset._size;\r\n\r\n    const Size = loadU4Field(d, ptr);\r\n    ptr += Size._size;\r\n\r\n    const Name = loadNullTerminatedStringField(d, ptr);\r\n    ptr += Name._size;\r\n\r\n    const paddingSize = U.calculatePadding(Name._size);\r\n    const Padding = loadFixedSizeByteArrayField(d, ptr, paddingSize);\r\n    ptr += Padding._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Offset,\r\n        Size,\r\n        Name,\r\n        Padding,\r\n    };\r\n}\r\n\r\nexport function loadMetadataTableHeader(d: FileDataProvider, p: number): S.MetadataTableHeader {\r\n    let ptr = p;\r\n\r\n    const Reserved = loadU4Field(d, ptr);\r\n    ptr += Reserved._size;\r\n\r\n    const MajorVersion = loadU1Field(d, ptr);\r\n    ptr += MajorVersion._size;\r\n\r\n    const MinorVersion = loadU1Field(d, ptr);\r\n    ptr += MinorVersion._size;\r\n\r\n    const HeapSizes = loadU1Field(d, ptr);\r\n    ptr += HeapSizes._size;\r\n\r\n    const Reserved2 = loadU1Field(d, ptr);\r\n    ptr += Reserved2._size;\r\n\r\n    const Valid = loadU8Field(d, ptr);\r\n    ptr += Valid._size;\r\n\r\n    const Sorted = loadU8Field(d, ptr);\r\n    ptr += Sorted._size;\r\n\r\n    const tables = U.count1(Valid.high) + U.count1(Valid.low);\r\n    const Rows = loadStructArrayByCount(d, ptr, loadU4Field, tables);\r\n    ptr += Rows._size;\r\n\r\n    return {\r\n        _offset: p, _size: ptr - p,\r\n        Reserved,\r\n        MajorVersion,\r\n        MinorVersion,\r\n        HeapSizes,\r\n        Reserved2,\r\n        Valid,\r\n        Sorted,\r\n        Rows,\r\n    }\r\n}","import * as S from \"./structures\";\r\nimport * as L from \"./loader\";\r\nimport * as F from \"./image-flags\";\r\nimport * as E from \"./error\";\r\n\r\nexport class PEImage implements L.FileDataProvider {\r\n    public static load(buf: ArrayBuffer): PEImage {\r\n        return new PEImage(buf);\r\n    }\r\n\r\n    //\r\n    // FileDataProvider functions.\r\n    //\r\n\r\n    public getU1(p: number): number {\r\n        this.check(p, 1);\r\n        return this.data.getUint8(p);\r\n    }\r\n\r\n    public getU2(p: number): number {\r\n        this.check(p, 2);\r\n        return this.data.getUint16(p, true);\r\n    }\r\n\r\n    public getU4(p: number): number {\r\n        this.check(p, 3);\r\n        return this.data.getUint32(p, true);\r\n    }\r\n\r\n    public getData(p: number, sz: number): Uint8Array {\r\n        this.check(p, sz);\r\n        return new Uint8Array(this.data.buffer.slice(p, p + sz));\r\n    }\r\n\r\n    //\r\n    // Image attributes.\r\n    //\r\n\r\n    public is32Bit(): boolean | undefined {\r\n        const optHdr = this.getOptionalHeader();\r\n        if (optHdr == null) {\r\n            return undefined;\r\n        }\r\n\r\n        switch (optHdr.Magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC: return true;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC: return false;\r\n            default: return undefined;\r\n        }\r\n    }\r\n\r\n    public isManaged(): boolean {\r\n        const dd = this.getDataDirectories();\r\n        return dd != null && this.isDataDirectoryValid(\r\n            dd.items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR]\r\n        );\r\n    }\r\n\r\n    public hasMetadata(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.MetaData);\r\n    }\r\n\r\n    public hasManagedResources(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.Resources);\r\n    }\r\n\r\n    public hasStrongNameSignature(): boolean {\r\n        const h = this.getCliHeader();\r\n        return h != null && this.isDataDirectoryValid(h.StrongNameSignature);\r\n    }\r\n\r\n    //\r\n    // Image headers.\r\n    //\r\n\r\n    public getDosHeader(): S.ImageDosHeader | undefined {\r\n        return this.dosHeader;\r\n    }\r\n\r\n    public getPESignature(): S.U4Field | undefined {\r\n        return this.peSignature;\r\n    }\r\n\r\n    public getFileHeader(): S.ImageFileHeader | undefined {\r\n        return this.fileHeader;\r\n    }\r\n\r\n    public getOptionalHeader(): S.ImageOptionalHeader32 | S.ImageOptionalHeader64 | undefined {\r\n        return this.optionalHeader;\r\n    }\r\n\r\n    public getDataDirectories(): S.StructArray<S.ImageDataDirectory> | undefined {\r\n        return this.dataDirectories;\r\n    }\r\n\r\n    public getSectionHeaders(): S.StructArray<S.ImageSectionHeader> | undefined {\r\n        return this.sectionHeaders;\r\n    }\r\n\r\n    //\r\n    // Metadata structures.\r\n    //\r\n\r\n    public getCliHeader(): S.CliHeader | undefined {\r\n        if (this.cliHeader) return this.cliHeader;\r\n        if (!this.isManaged()) return undefined;\r\n\r\n        const offset = this.rvaToOffset(this.dataDirectories!\r\n            .items[F.ImageDirectoryEntry.IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR]\r\n            .VirtualAddress.value);\r\n\r\n        this.cliHeader = L.loadCliHeader(this, offset);\r\n        return this.cliHeader;\r\n    }\r\n\r\n    public getMetadataRoot(): S.MetadataRoot | undefined {\r\n        if (this.metadataRoot) return this.metadataRoot;\r\n\r\n        const cliHeader = this.getCliHeader();\r\n        if (!cliHeader) return undefined;\r\n\r\n        const offset = this.rvaToOffset(cliHeader.MetaData.VirtualAddress.value);\r\n        if (!offset) return undefined;\r\n\r\n        this.metadataRoot = L.loadMetadataRoot(this, offset);\r\n        return this.metadataRoot;\r\n    }\r\n\r\n    public getMetadataStreamHeaders(): S.StructArray<S.MetadataStreamHeader> | undefined {\r\n        if (this.metadataStreamHeaders) return this.metadataStreamHeaders;\r\n\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot || !mdRoot.Streams.value) return undefined;\r\n\r\n        this.metadataStreamHeaders = L.loadStructArrayByCount(\r\n            this,\r\n            mdRoot._offset + mdRoot._size,\r\n            L.loadMetadataStreamHeader,\r\n            mdRoot.Streams.value\r\n        );\r\n        return this.metadataStreamHeaders;\r\n    }\r\n\r\n    public getMetadataStreamHeader(name: F.MetadataStreamName): S.MetadataStreamHeader | undefined {\r\n        const headers = this.getMetadataStreamHeaders();\r\n        if (!headers) return undefined;\r\n\r\n        return headers.items.filter(v => v.Name.value == name).shift();\r\n    }\r\n\r\n    public getStrongNameSignature(): S.Field | undefined {\r\n        if (this.strongNameSignature) return this.strongNameSignature;\r\n\r\n        const cliHeader = this.getCliHeader();\r\n        if (!cliHeader) return undefined;\r\n\r\n        const offset = this.rvaToOffset(cliHeader.StrongNameSignature.VirtualAddress.value);\r\n        if (!offset) return undefined;\r\n\r\n        this.strongNameSignature = L.loadFixedSizeByteArrayField(\r\n            this, offset,\r\n            cliHeader.StrongNameSignature.Size.value);\r\n        return this.strongNameSignature;\r\n    }\r\n\r\n    public getMetadataTableHeader(): S.MetadataTableHeader | undefined {\r\n        if (this.metadataTableHeader) return this.metadataTableHeader;\r\n\r\n        const mdRoot = this.getMetadataRoot();\r\n        if (!mdRoot) return undefined;\r\n\r\n        const sh = this.getMetadataStreamHeader(F.MetadataStreamName.Table);\r\n        if (!sh) return undefined;\r\n\r\n        const offset = mdRoot._offset + sh.Offset.value;\r\n        this.metadataTableHeader = L.loadMetadataTableHeader(this, offset);\r\n        return this.metadataTableHeader;\r\n    }\r\n\r\n    //\r\n    // Utilities.\r\n    //\r\n\r\n    public rvaToOffset(rva: number): number {\r\n        const sh = this.getSectionHeaderByRva(rva);\r\n        if (!sh) return 0;\r\n\r\n        return rva - sh.VirtualAddress.value + sh.PointerToRawData.value;\r\n    }\r\n\r\n    public offsetToRva(offset: number): number {\r\n        const sh = this.getSectionHeaderByOffset(offset);\r\n        if (!sh) return 0;\r\n\r\n        return offset - sh.PointerToRawData.value + sh.VirtualAddress.value;\r\n    }\r\n\r\n    //\r\n    // Private implementations.\r\n    //\r\n\r\n    private check(p: number, sz: number): void {\r\n        if (p < 0 || p >= this.data.byteLength\r\n            || sz < 0 || p + sz > this.data.byteLength) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_POSITION, p, sz);\r\n        }\r\n    }\r\n\r\n    private constructor(buf: ArrayBuffer) {\r\n        this.data = new DataView(buf);\r\n        this.loadHeaders();\r\n    }\r\n\r\n    private loadHeaders(): void {\r\n        let ptr = 0;\r\n        this.dosHeader = L.loadImageDosHeader(this, ptr);\r\n\r\n        if (this.dosHeader.e_magic.value != F.IMAGE_DOS_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DOS_SIGNATURE, ptr, 2);\r\n        }\r\n\r\n        ptr = this.dosHeader.e_lfanew.value;\r\n        this.peSignature = L.loadU4Field(this, ptr);\r\n\r\n        if (this.peSignature.value != F.IMAGE_NT_SIGNATURE) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_PE_SIGNATURE, ptr, 4);\r\n        }\r\n\r\n        ptr += this.peSignature._size;\r\n        this.fileHeader = L.loadImageFileHeader(this, ptr);\r\n\r\n        ptr += this.fileHeader._size;\r\n        const magic = L.loadU2Field(this, ptr);\r\n        switch (magic.value) {\r\n            case F.IMAGE_NT_OPTIONAL_HDR32_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader32(this, ptr);\r\n                break;\r\n            case F.IMAGE_NT_OPTIONAL_HDR64_MAGIC:\r\n                this.optionalHeader = L.loadImageOptionalHeader64(this, ptr);\r\n                break;\r\n            default:\r\n                throw new E.PEError(E.PEErrorType.INVALID_OPTIONAL_HEADER_MAGIC, ptr, 2);\r\n        }\r\n\r\n        if (this.optionalHeader.NumberOfRvaAndSizes.value != F.IMAGE_NUMBEROF_DIRECTORY_ENTRIES) {\r\n            throw new E.PEError(E.PEErrorType.INVALID_DATA_DIRECTORY_COUNT,\r\n                this.optionalHeader.NumberOfRvaAndSizes._offset,\r\n                this.optionalHeader.NumberOfRvaAndSizes._size);\r\n        }\r\n\r\n        ptr += this.optionalHeader._size;\r\n        this.dataDirectories = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageDataDirectory,\r\n            this.optionalHeader.NumberOfRvaAndSizes.value);\r\n\r\n        ptr += this.dataDirectories._size;\r\n        this.sectionHeaders = L.loadStructArrayByCount(this, ptr,\r\n            L.loadImageSectionHeader,\r\n            this.fileHeader.NumberOfSections.value);\r\n    }\r\n\r\n    private getSectionHeaderByOffset(offset: number): S.ImageSectionHeader | undefined {\r\n        return this.sectionHeaders && this.sectionHeaders.items.filter(h => {\r\n            const p = h.PointerToRawData.value;\r\n            const sz = h.SizeOfRawData.value;\r\n            return offset >= p && offset < p + sz;\r\n        }).shift();\r\n    }\r\n\r\n    private getSectionHeaderByRva(rva: number): S.ImageSectionHeader | undefined {\r\n        return this.sectionHeaders && this.sectionHeaders.items.filter(h => {\r\n            const p = h.VirtualAddress.value;\r\n            const sz = h.VirtualSize.value;\r\n            return rva >= p && rva < p + sz;\r\n        }).shift();\r\n    }\r\n\r\n    private isDataDirectoryValid(dd?: S.ImageDataDirectory): boolean {\r\n        return (dd && dd.VirtualAddress.value > 0 && dd.Size.value > 0) || false;\r\n    }\r\n\r\n    private readonly data: DataView;\r\n\r\n    private dosHeader?: S.ImageDosHeader;\r\n    private peSignature?: S.U4Field;\r\n    private fileHeader?: S.ImageFileHeader;\r\n    private optionalHeader?: S.ImageOptionalHeader32 | S.ImageOptionalHeader64;\r\n    private dataDirectories?: S.StructArray<S.ImageDataDirectory>;\r\n    private sectionHeaders?: S.StructArray<S.ImageSectionHeader>;\r\n\r\n    private cliHeader?: S.CliHeader;\r\n    private metadataRoot?: S.MetadataRoot;\r\n    private metadataStreamHeaders?: S.StructArray<S.MetadataStreamHeader>;\r\n    private strongNameSignature?: S.Field;\r\n\r\n    private metadataTableHeader?: S.MetadataTableHeader;\r\n}\r\n","export function createResNavDataMessage(navList: W.NavData[]): W.ResNavDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_NAV_DATA,\r\n        navList\r\n    };\r\n}\r\n\r\nexport function createResPageDataMessage(pageData: W.PageData): W.ResPageDataMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PAGE_DATA,\r\n        pageData\r\n    };\r\n}\r\n\r\nexport function createResPEPropsMessage(is32Bit?: boolean, isManaged?: boolean): W.ResPEPropsMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_PROPS,\r\n        is32Bit,\r\n        isManaged\r\n    };\r\n}\r\n\r\nexport function createResPEErrorMessage(error: string): W.ResPEErrorMessage {\r\n    return {\r\n        type: W.WorkerMessageType.RES_PE_ERROR,\r\n        error\r\n    };\r\n}\r\n","import * as M from \"./message\";\r\nimport { PEImage } from \"./pe/image\";\r\nimport { generatePageData } from \"./page-data/generator\";\r\nimport { generateNavList } from \"./page-data/nav-data\";\r\n\r\nlet pe: PEImage | null = null;\r\n\r\nonmessage = (ev) => {\r\n    const msg = ev.data as W.WorkerMessage;\r\n    switch (msg.type) {\r\n        case W.WorkerMessageType.REQ_OPEN_FILE:\r\n            handleReqOpenFile(msg as W.ReqOpenFileMessage);\r\n            break;\r\n\r\n        case W.WorkerMessageType.REQ_OPEN_NAV:\r\n            handleReqOpenNav(msg as W.ReqOpenNavMessage);\r\n            break;\r\n    }\r\n};\r\n\r\nfunction handleReqOpenFile(msg: W.ReqOpenFileMessage): void {\r\n    let reader = new FileReader();\r\n\r\n    reader.onload = ev => {\r\n        try {\r\n            const buf = <ArrayBuffer>(<FileReader>ev.target).result;\r\n            pe = PEImage.load(buf);\r\n\r\n            // Response with page data.\r\n            const pageData = generatePageData(pe, W.PageID.HEADERS);\r\n            const pageDataMsg = M.createResPageDataMessage(pageData);\r\n            postMessage(pageDataMsg);\r\n\r\n            // Response with PE properties.\r\n            const is32Bit = pe.is32Bit();\r\n            const isManaged = pe.isManaged();\r\n            const pePropsMsg = M.createResPEPropsMessage(is32Bit, isManaged);\r\n            postMessage(pePropsMsg);\r\n\r\n            // Response with navigation data.\r\n            const navList = generateNavList(pe);\r\n            const navMsg = M.createResNavDataMessage(navList);\r\n            postMessage(navMsg);\r\n        } catch (ex) {\r\n            const msg = M.createResPEErrorMessage(ex.message\r\n                || `Unknown error: ${JSON.stringify(ex)}`);\r\n            postMessage(msg);\r\n        }\r\n    };\r\n\r\n    reader.onerror = ev => {\r\n        pe = null;\r\n        const msg = M.createResPEErrorMessage(\"Can't open file.\");\r\n        postMessage(msg);\r\n    };\r\n\r\n    reader.readAsArrayBuffer(msg.file);\r\n}\r\n\r\nfunction handleReqOpenNav(msg: W.ReqOpenNavMessage): void {\r\n    if (pe != null) {\r\n        const pageData = generatePageData(pe, msg.target.pageID);\r\n        pageData.nav.elemID = msg.target.elemID;\r\n        const res = M.createResPageDataMessage(pageData);\r\n        postMessage(res);\r\n    }\r\n}"],"sourceRoot":""}